{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/layouts/pagination/pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Pagination } from '@mui/material';\nimport TablePagination from '@mui/material/TablePagination';\nimport PaginationItem from '@mui/material/PaginationItem';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport React, { useState } from 'react';\nimport MakeStyles from '../../assets/makeStyles/makeStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaginationContainer = _ref => {\n  _s();\n\n  let {\n    limitData,\n    page,\n    setPage,\n    countPagination,\n    pageSize,\n    setPageSize\n  } = _ref;\n  const classes = MakeStyles();\n  const [fromPagination, setFromPagination] = useState(0);\n  const [toPagination, setToPagination] = useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setPageSize(+event.target.value);\n    setPage(1);\n  };\n\n  const handleChangePagination = (event, value) => {\n    setPage(value);\n  };\n\n  const handleDisplayedRows = _ref2 => {\n    let {\n      from,\n      to\n    } = _ref2;\n    setFromPagination(from);\n    setToPagination(to);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"pagination-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"font-size-15 line-height-18\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"font-weight-700\",\n        component: \"span\",\n        children: [fromPagination, \" - \", toPagination]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), ' ', \"of\", /*#__PURE__*/_jsxDEV(Box, {\n        className: \"font-weight-700\",\n        component: \"span\",\n        children: [' ', limitData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), ' ', \"results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"pagination-wrapper__table\",\n      children: [/*#__PURE__*/_jsxDEV(TablePagination, {\n        nextIconButtonProps: {\n          className: classes.displayNone\n        },\n        backIconButtonProps: {\n          className: classes.displayNone\n        },\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        labelDisplayedRows: handleDisplayedRows,\n        count: limitData || 0,\n        rowsPerPage: pageSize,\n        page: page - 1,\n        labelRowsPerPage: \"Results per page\",\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        count: countPagination,\n        page: page,\n        onChange: handleChangePagination,\n        variant: \"outlined\",\n        shape: \"rounded\",\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          components: {\n            previous: ArrowBackIcon,\n            next: ArrowForwardIcon\n          },\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaginationContainer, \"UkQx51SP2o+1MSa2wZX8W7mhAK4=\");\n\n_c = PaginationContainer;\nexport default PaginationContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationContainer\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/layouts/pagination/pagination.tsx"],"names":["Box","Pagination","TablePagination","PaginationItem","ArrowBackIcon","ArrowForwardIcon","React","useState","MakeStyles","PaginationContainer","limitData","page","setPage","countPagination","pageSize","setPageSize","classes","fromPagination","setFromPagination","toPagination","setToPagination","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","handleChangePagination","handleDisplayedRows","from","to","className","displayNone","item","previous","next"],"mappings":"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","sourcesContent":["import {Box, Pagination} from '@mui/material'\nimport TablePagination from '@mui/material/TablePagination'\nimport PaginationItem from '@mui/material/PaginationItem'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward'\nimport React, {Dispatch, useState} from 'react'\nimport MakeStyles from '../../assets/makeStyles/makeStyles'\n\nconst PaginationContainer = ({\n  limitData,\n  page,\n  setPage,\n  countPagination,\n  pageSize,\n  setPageSize,\n}: {\n  limitData: number | undefined\n  page: number\n  setPage: Dispatch<React.SetStateAction<number>>\n  countPagination: number\n  pageSize: number\n  setPageSize: Dispatch<React.SetStateAction<number>>\n}) => {\n  const classes = MakeStyles()\n\n  const [fromPagination, setFromPagination] = useState<number>(0)\n  const [toPagination, setToPagination] = useState<number>(0)\n\n  const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPageSize(+event.target.value)\n    setPage(1)\n  }\n\n  const handleChangePagination = (event: React.ChangeEvent<unknown>, value: number) => {\n    setPage(value)\n  }\n\n  const handleDisplayedRows = ({from, to}: {from: number; to: number}) => {\n    setFromPagination(from)\n    setToPagination(to)\n    return false\n  }\n\n  return (\n    <Box className=\"pagination-wrapper\">\n      <Box className=\"font-size-15 line-height-18\">\n        <Box className=\"font-weight-700\" component=\"span\">\n          {fromPagination} - {toPagination}\n        </Box>{' '}\n        of\n        <Box className=\"font-weight-700\" component=\"span\">\n          {' '}\n          {limitData}\n        </Box>{' '}\n        results\n      </Box>\n      <Box className=\"pagination-wrapper__table\">\n        <TablePagination\n          nextIconButtonProps={{className: classes.displayNone}}\n          backIconButtonProps={{className: classes.displayNone}}\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          labelDisplayedRows={handleDisplayedRows}\n          count={limitData || 0}\n          rowsPerPage={pageSize}\n          page={page - 1}\n          labelRowsPerPage=\"Results per page\"\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n        <Pagination\n          count={countPagination}\n          page={page}\n          onChange={handleChangePagination}\n          variant=\"outlined\"\n          shape=\"rounded\"\n          renderItem={(item) => (\n            <PaginationItem\n              components={{previous: ArrowBackIcon, next: ArrowForwardIcon}}\n              {...item}\n            />\n          )}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PaginationContainer\n"]},"metadata":{},"sourceType":"module"}