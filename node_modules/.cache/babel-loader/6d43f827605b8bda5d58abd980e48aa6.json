{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/users/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Button, IconButton, InputBase } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport moment from 'moment';\nimport SearchIcon from '../../assets/images/Icons/searchIcon';\nimport EnhancedTable from '../../layouts/table/table';\nimport AddingNewUserModal from '../../layouts/modal/addingNewUserModal';\nimport UsersApi from '../../api/users';\nimport Regex from '../../constants/regex';\nimport PaginationContainer from '../../layouts/pagination/pagination';\nimport { UseCreateEventContext } from '../../context/createEventContext/createEventContext';\nimport ButtonBlue from '../../layouts/buttons/buttonBlue';\nimport { UsePeopleContext } from '../../context/people/peopleContext';\nimport useStylesButton from '../../assets/makeStyles/buttons/buttons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const regEmail = Regex.email;\n  const [successModal, setSuccessModal] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [openModalAddingNewUser, setOpenModalAddingNewUser] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResult, setSearchResults] = useState([]);\n  const [countPagination, setCountPagination] = useState(0);\n  const classesButton = useStylesButton();\n  const {\n    setNameOfUsers\n  } = UseCreateEventContext();\n  const {\n    setUsers,\n    users,\n    setIsLoadingOfPeople,\n    isLoadingOfPeople,\n    pageSize,\n    page,\n    limitData,\n    setLimitData,\n    setPageSize,\n    setPage\n  } = UsePeopleContext();\n  useEffect(() => {\n    ;\n\n    (async () => {\n      await getUsersData();\n    })();\n  }, [pageSize, page]);\n  useEffect(() => {\n    if (limitData) {\n      if (pageSize >= limitData) {\n        setCountPagination(1);\n      } else {\n        setCountPagination(Math.ceil(limitData / pageSize));\n      }\n    }\n  }, [pageSize, page, limitData]);\n  useEffect(() => {\n    if (users.length && searchValue) {\n      const results = users.filter(item => item.firstName && item.firstName.toLowerCase().includes(searchValue.toLowerCase()));\n      setSearchResults(results);\n    }\n  }, [searchValue, users]);\n\n  const getUsersData = async () => {\n    setIsLoadingOfPeople(true);\n    const response = await UsersApi.getUsersPagination(page, pageSize);\n    const updateUsers = response.data.users.map(item => item);\n    setLimitData(response.data.totalUsersCount);\n    setUsers(updateUsers);\n    setIsLoadingOfPeople(false);\n  };\n\n  const handleOpenModal = () => {\n    setOpenModalAddingNewUser(true);\n  };\n\n  const handleSaveDetails = (firstName, lastName, currency, email, position, monthlySalary, image, hireDate, isActive) => {\n    if (!regEmail.test(email)) {\n      setErrorMessage('Invalid Email');\n    } else {\n      // TODO: talk with Norvik about CompanyId and Role fields\n      ;\n\n      (async () => {\n        setIsLoadingOfPeople(true);\n        const form = new FormData();\n        form.append('FirstName', firstName);\n        form.append('Email', email);\n        form.append('Position', position);\n        form.append('MonthlySalary', monthlySalary);\n        form.append('LastName', lastName);\n        form.append('CompanyId', '1');\n        form.append('Currency', currency);\n        form.append('IsActive', isActive);\n        form.append('ProfileImg', image);\n        form.append('HireDate', moment(hireDate).format('yyyy-MM-DDThh:mm:ss'));\n        const response = await UsersApi.createUser(form);\n\n        if (response.status === 200) {\n          setSuccessModal(true);\n          setIsLoadingOfPeople(false);\n          setError(false);\n          setErrorMessage('');\n          setUsers([...users, {\n            id: users.length,\n            firstName,\n            lastName,\n            email,\n            position,\n            monthlySalary,\n            profileImg: image\n          }]);\n          setNameOfUsers([]);\n          getUsersData();\n        } else if (response.response.status === 400) {\n          setErrorMessage(response.response.data.message);\n          setError(false);\n          setIsLoadingOfPeople(false);\n        } else {\n          setIsLoadingOfPeople(false);\n          setError(true);\n          setErrorMessage('');\n        }\n      })();\n    }\n  };\n\n  const handleCloseAddingNewUserModal = () => setOpenModalAddingNewUser(false);\n\n  const renderTableAndPagination = () => {\n    if (!isLoadingOfPeople && (searchValue ? searchResult.length : users.length)) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTable, {\n          table: \"users\",\n          rows: searchValue ? searchResult : users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PaginationContainer, {\n          limitData: limitData,\n          page: page,\n          setPage: setPage,\n          countPagination: countPagination,\n          pageSize: pageSize,\n          setPageSize: setPageSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-center\",\n      children: isLoadingOfPeople ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 30\n      }, this) : 'There is not data'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  };\n\n  const [file, setFile] = useState();\n  const inputRef = useRef(null); // const handleUploadClick = () => {\n  //   inputRef.current?.click()\n  // }\n\n  const handleFileChange = async e => {\n    if (!e.target.files) {\n      return;\n    }\n\n    setFile(e.target.files[0]);\n    const formData = new FormData();\n    formData.append('CsvFile', e.target.files[0]);\n    const response = await UsersApi.insertUsersFromCsv(formData);\n\n    if (response.status === 200) {\n      await getUsersData();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"page-padding\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"page-heading\",\n        children: \"People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mt-30 d-flex justify-between width-100\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"text-field-style\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            className: \"icon-button\",\n            \"aria-label\": \"directions\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n            value: searchValue,\n            onChange: e => setSearchValue(e.target.value),\n            className: \"input-base\",\n            placeholder: \"Search user\",\n            inputProps: {\n              'aria-label': '0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mt-20 d-flex justify-end width-100\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: `${classesButton.colorBlueButton} mr-20`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"blue\",\n            variant: \"contained\",\n            component: \"label\",\n            children: [file ? `${file.name}` : 'Upload file', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: inputRef,\n              onChange: e => handleFileChange(e),\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBlue, {\n          handleClick: handleOpenModal,\n          width: \"width150\",\n          title: \"ADD PERSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mt-44\",\n        children: renderTableAndPagination()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddingNewUserModal, {\n        openModal: openModalAddingNewUser,\n        closeModal: handleCloseAddingNewUserModal,\n        handleSaveDetailsProps: handleSaveDetails,\n        successModal: successModal,\n        setSuccessModal: setSuccessModal,\n        isLoading: isLoadingOfPeople,\n        error: error,\n        errorMessage: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"1f2LNEBNd3dUBU47WRPPbzjI1tI=\", false, function () {\n  return [useStylesButton];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/users/index.tsx"],"names":["React","useEffect","useRef","useState","Box","Button","IconButton","InputBase","CircularProgress","moment","SearchIcon","EnhancedTable","AddingNewUserModal","UsersApi","Regex","PaginationContainer","UseCreateEventContext","ButtonBlue","UsePeopleContext","useStylesButton","Index","regEmail","email","successModal","setSuccessModal","error","setError","errorMessage","setErrorMessage","openModalAddingNewUser","setOpenModalAddingNewUser","searchValue","setSearchValue","searchResult","setSearchResults","countPagination","setCountPagination","classesButton","setNameOfUsers","setUsers","users","setIsLoadingOfPeople","isLoadingOfPeople","pageSize","page","limitData","setLimitData","setPageSize","setPage","getUsersData","Math","ceil","length","results","filter","item","firstName","toLowerCase","includes","response","getUsersPagination","updateUsers","data","map","totalUsersCount","handleOpenModal","handleSaveDetails","lastName","currency","position","monthlySalary","image","hireDate","isActive","test","form","FormData","append","format","createUser","status","id","profileImg","message","handleCloseAddingNewUserModal","renderTableAndPagination","file","setFile","inputRef","handleFileChange","e","target","files","formData","insertUsersFromCsv","value","colorBlueButton","name"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, useEffect, useRef, useState} from 'react'\nimport {Box, Button, IconButton, InputBase} from '@mui/material'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport moment from 'moment'\nimport SearchIcon from '../../assets/images/Icons/searchIcon'\nimport EnhancedTable from '../../layouts/table/table'\nimport AddingNewUserModal from '../../layouts/modal/addingNewUserModal'\nimport UsersApi from '../../api/users'\nimport {IUsers} from '../../shared/types/user/user'\nimport Regex from '../../constants/regex'\nimport {ISliderStatus} from '../../shared/types/slider/slider'\nimport PaginationContainer from '../../layouts/pagination/pagination'\nimport {UseCreateEventContext} from '../../context/createEventContext/createEventContext'\nimport {ICreateEventProps} from '../../context/createEventContext/createEventContext.props'\nimport ButtonBlue from '../../layouts/buttons/buttonBlue'\nimport {IPeopleProps} from '../../context/people/peopleContext.props'\nimport {UsePeopleContext} from '../../context/people/peopleContext'\nimport useStylesButton from '../../assets/makeStyles/buttons/buttons'\n\nconst Index = () => {\n  const regEmail = Regex.email\n  const [successModal, setSuccessModal] = useState<boolean>(false)\n  const [error, setError] = useState<boolean>(false)\n  const [errorMessage, setErrorMessage] = useState<string>('')\n  const [openModalAddingNewUser, setOpenModalAddingNewUser] = useState<boolean>(false)\n  const [searchValue, setSearchValue] = useState<string>('')\n  const [searchResult, setSearchResults] = useState<IUsers[]>([])\n  const [countPagination, setCountPagination] = useState<number>(0)\n  const classesButton = useStylesButton()\n\n  const {setNameOfUsers} = UseCreateEventContext() as ICreateEventProps\n  const {\n    setUsers,\n    users,\n    setIsLoadingOfPeople,\n    isLoadingOfPeople,\n    pageSize,\n    page,\n    limitData,\n    setLimitData,\n    setPageSize,\n    setPage,\n  } = UsePeopleContext() as IPeopleProps\n\n  useEffect(() => {\n    ;(async () => {\n      await getUsersData()\n    })()\n  }, [pageSize, page])\n\n  useEffect(() => {\n    if (limitData) {\n      if (pageSize >= limitData) {\n        setCountPagination(1)\n      } else {\n        setCountPagination(Math.ceil(limitData / pageSize))\n      }\n    }\n  }, [pageSize, page, limitData])\n\n  useEffect(() => {\n    if (users.length && searchValue) {\n      const results = users.filter(\n        (item) =>\n          item.firstName && item.firstName.toLowerCase().includes(searchValue.toLowerCase()),\n      )\n      setSearchResults(results)\n    }\n  }, [searchValue, users])\n\n  const getUsersData = async () => {\n    setIsLoadingOfPeople(true)\n    const response = await UsersApi.getUsersPagination(page, pageSize)\n    const updateUsers = response.data.users.map((item: ISliderStatus[]) => item)\n    setLimitData(response.data.totalUsersCount)\n    setUsers(updateUsers)\n    setIsLoadingOfPeople(false)\n  }\n\n  const handleOpenModal = () => {\n    setOpenModalAddingNewUser(true)\n  }\n\n  const handleSaveDetails = (\n    firstName: string,\n    lastName: string,\n    currency: number,\n    email: string,\n    position: string,\n    monthlySalary: string,\n    image: Blob | MediaSource | string,\n    hireDate: string | null,\n    isActive: boolean,\n  ) => {\n    if (!regEmail.test(email)) {\n      setErrorMessage('Invalid Email')\n    } else {\n      // TODO: talk with Norvik about CompanyId and Role fields\n      ;(async () => {\n        setIsLoadingOfPeople(true)\n        const form = new FormData()\n        form.append('FirstName', firstName)\n        form.append('Email', email)\n        form.append('Position', position)\n        form.append('MonthlySalary', monthlySalary)\n        form.append('LastName', lastName)\n        form.append('CompanyId', '1')\n        form.append('Currency', currency as unknown as Blob)\n        form.append('IsActive', isActive as unknown as Blob)\n        form.append('ProfileImg', image as Blob)\n        form.append('HireDate', moment(hireDate).format('yyyy-MM-DDThh:mm:ss') as unknown as string)\n        const response: any = await UsersApi.createUser(form)\n        if (response.status === 200) {\n          setSuccessModal(true)\n          setIsLoadingOfPeople(false)\n          setError(false)\n          setErrorMessage('')\n          setUsers([\n            ...users,\n            {\n              id: users.length,\n              firstName,\n              lastName,\n              email,\n              position,\n              monthlySalary,\n              profileImg: image as Blob,\n            },\n          ])\n          setNameOfUsers([])\n          getUsersData()\n        } else if (response.response.status === 400) {\n          setErrorMessage(response.response.data.message)\n          setError(false)\n          setIsLoadingOfPeople(false)\n        } else {\n          setIsLoadingOfPeople(false)\n          setError(true)\n          setErrorMessage('')\n        }\n      })()\n    }\n  }\n\n  const handleCloseAddingNewUserModal = () => setOpenModalAddingNewUser(false)\n\n  const renderTableAndPagination = () => {\n    if (!isLoadingOfPeople && (searchValue ? searchResult.length : users.length)) {\n      return (\n        <Box>\n          <EnhancedTable table=\"users\" rows={searchValue ? searchResult : users} />\n          <PaginationContainer\n            limitData={limitData}\n            page={page}\n            setPage={setPage}\n            countPagination={countPagination}\n            pageSize={pageSize}\n            setPageSize={setPageSize}\n          />\n        </Box>\n      )\n    }\n    return (\n      <div className=\"d-flex justify-center\">\n        {isLoadingOfPeople ? <CircularProgress /> : 'There is not data'}\n      </div>\n    )\n  }\n\n  const [file, setFile] = useState<File>()\n  const inputRef = useRef<HTMLInputElement | null>(null)\n\n  // const handleUploadClick = () => {\n  //   inputRef.current?.click()\n  // }\n\n  const handleFileChange = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) {\n      return\n    }\n\n    setFile(e.target.files[0])\n    const formData = new FormData()\n    formData.append('CsvFile', e.target.files[0] as unknown as Blob)\n    const response = await UsersApi.insertUsersFromCsv(formData)\n\n    if (response.status === 200) {\n      await getUsersData()\n    }\n  }\n\n  return (\n    <Box className=\"page-container\">\n      <Box className=\"page-padding\">\n        <Box className=\"page-heading\">People</Box>\n        <Box className=\"mt-30 d-flex justify-between width-100\">\n          <Box className=\"text-field-style\">\n            <IconButton className=\"icon-button\" aria-label=\"directions\">\n              <SearchIcon />\n            </IconButton>\n            <InputBase\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n              className=\"input-base\"\n              placeholder=\"Search user\"\n              inputProps={{'aria-label': '0'}}\n            />\n          </Box>\n        </Box>\n        <Box className=\"mt-20 d-flex justify-end width-100\">\n          <Box className={`${classesButton.colorBlueButton} mr-20`}>\n            <Button color=\"blue\" variant=\"contained\" component=\"label\">\n              {file ? `${file.name}` : 'Upload file'}\n              <input type=\"file\" ref={inputRef} onChange={(e) => handleFileChange(e)} hidden />\n            </Button>\n          </Box>\n          <ButtonBlue handleClick={handleOpenModal} width=\"width150\" title=\"ADD PERSON\" />\n        </Box>\n        <Box className=\"mt-44\">{renderTableAndPagination()}</Box>\n        <AddingNewUserModal\n          openModal={openModalAddingNewUser}\n          closeModal={handleCloseAddingNewUserModal}\n          handleSaveDetailsProps={handleSaveDetails}\n          successModal={successModal}\n          setSuccessModal={setSuccessModal}\n          isLoading={isLoadingOfPeople}\n          error={error}\n          errorMessage={errorMessage}\n        />\n      </Box>\n    </Box>\n  )\n}\nexport default Index\n"]},"metadata":{},"sourceType":"module"}