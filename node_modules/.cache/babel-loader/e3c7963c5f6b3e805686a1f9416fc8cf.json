{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/evaluatorsStep/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport clsx from 'clsx';\nimport { useSearchParams } from 'react-router-dom';\nimport moment from 'moment'; // import CirclePercent from '../../layouts/circlePercent/circlePercent'\n\nimport SuccessModalSecond from '../../layouts/modal/successModalSecond';\nimport StepperPage from '../../layouts/stepper';\nimport EvaluatorsSteps from './evaluatorsSteps';\nimport FeedbacksStep from './feedbacksStep';\nimport useStyles from '../../assets/makeStyles/evaluatorsStep/evaluatorsStep'; // import MakeStyles from '../../assets/makeStyles/makeStyles'\n\nimport EvaluationApi from '../../api/evaluation';\nimport { UseFeedbackContext } from '../../context/feedbackContext/feedbackContext';\nimport RateSidebar from '../../layouts/rateEvaluateSidebar';\nimport ErrorModal from '../../layouts/modal/errorModal';\nimport { UseEvaluationContext } from '../../context/evalaution/evaluationContext';\nimport FeedBackApi from '../../api/feedback';\nimport useStylesButton from '../../assets/makeStyles/buttons/buttons';\nimport PopoverContainer from '../../layouts/popover/popover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const classesEvaluatorsStep = useStyles(); // const classes = MakeStyles()\n\n  const classesButtons = useStylesButton();\n  const [openModalSuccess, setOpenModalSuccess] = useState(false);\n  const [clickedNext, setClickedNext] = useState(false);\n  const [blockedNext, setBlockedNext] = useState(false);\n  const {\n    setActiveUser,\n    activeUser,\n    userId,\n    evaluatorsStepLength,\n    evaluationUser,\n    setEvaluationUser,\n    setIsNegativeFeedbacks,\n    setIsPositiveFeedbacks,\n    setScorings,\n    setDonePercent\n  } = UseEvaluationContext();\n  const [markWithText, setMarkWithText] = useState(false);\n  const [step, setStep] = useState(0);\n  const [steps, setSteps] = useState([1, 2, 3, 4]);\n  const [activeStep, setActiveStep] = useState(0);\n  const [openModalError, setOpenModalError] = useState(false);\n  const [eventError, setEventError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [completed, setCompleted] = useState({});\n  const [showPopover, setShowPopover] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [disabledSubmitButton, setDisabledSubmitButton] = useState(false);\n  const [searchParameters] = useSearchParams();\n  const [eventData, setEventData] = useState();\n  const [questionAnswers, setQuestionAnswers] = useState({});\n\n  const handleCloseErrorModal = () => {\n    setOpenModalError(false);\n  };\n\n  const [questionGroups, setQuestionGroups] = useState([]);\n  const [feedbackOfQuestion, setFeedbackOfQuestion] = useState();\n  const {\n    positiveFeedback,\n    negativeFeedback,\n    setPositiveFeedback,\n    setNegativeFeedback\n  } = UseFeedbackContext();\n  useEffect(() => {\n    const searchParams = [...searchParameters.entries()];\n    setIsLoading(true);\n    const eventToken = searchParams.find(_ref => {\n      let [paramName] = _ref;\n      return paramName === 'event_token';\n    })[1];\n    const userToken = searchParams.find(_ref2 => {\n      let [paramName] = _ref2;\n      return paramName === 'user_token';\n    })[1];\n\n    (async () => {\n      if (userToken && eventToken) {\n        const eventEvaluation = await EvaluationApi.getEventForEvaluation(userToken, eventToken);\n\n        if (eventEvaluation.status === 200) {\n          setIsPositiveFeedbacks(eventEvaluation.data.isPositiveFeedbacks);\n          setIsNegativeFeedbacks(eventEvaluation.data.isNegativeFeedbacks);\n          setScorings(eventEvaluation.data.scorings);\n          setEventData({ ...eventEvaluation.data,\n            questionsGrouped: eventEvaluation.data.questions.reduce((acc, val) => acc[val.questionGroupId] ? { ...acc,\n              [val.questionGroupId]: [...acc[val.questionGroupId], val]\n            } : { ...acc,\n              [val.questionGroupId]: [val]\n            }, {})\n          });\n          setMarkWithText(eventEvaluation.data.evaluationType === 0);\n\n          if (eventEvaluation.data.evaluationType === 0) {\n            setQuestionAnswers(Object.fromEntries(eventEvaluation.data.questions.map(question => [question.id, ''])));\n          } else {\n            setQuestionAnswers(Object.fromEntries(eventEvaluation.data.questions.map(question => [question.id, ''])));\n          }\n        } else {\n          setOpenModalError(true);\n          setEventError(true);\n          setErrorMessage(eventEvaluation.response.data.message || '');\n        }\n\n        setIsLoading(false);\n      }\n    })();\n\n    (async () => {\n      if (userToken && eventToken) {\n        const questionGroupsData = await EvaluationApi.getQuestionGroups(userToken, eventToken);\n        setQuestionGroups(questionGroupsData.data);\n      }\n    })();\n  }, [searchParameters]);\n\n  const handleNext = () => {\n    setClickedNext(true);\n\n    if (!blockedNext) {\n      setClickedNext(false);\n      const newCompleted = completed;\n      newCompleted[activeStep] = true;\n      setCompleted(newCompleted);\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    if (activeStep === 0) {\n      setStep(0);\n    } else {\n      const newCompleted = completed;\n      newCompleted[activeStep] = false;\n      setCompleted(newCompleted);\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\n    }\n  };\n\n  const handleCloseModal = () => setOpenModalSuccess(false);\n\n  const handleClosePopover = () => {\n    setShowPopover(false);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const searchParams = [...searchParameters.entries()];\n      setIsLoading(true);\n      const eventToken = searchParams.find(_ref3 => {\n        let [paramName] = _ref3;\n        return paramName === 'event_token';\n      })[1];\n      const userToken = searchParams.find(_ref4 => {\n        let [paramName] = _ref4;\n        return paramName === 'user_token';\n      })[1];\n      const response = await EvaluationApi.saveQuestionGroups({\n        eventToken,\n        userToken,\n        evaluatorId: 0,\n        evaluateeId: userId,\n        questionPointArr: Object.entries(questionAnswers).map(questionPoints => ({\n          questionId: Number(questionPoints[0]),\n          point: Number(questionPoints[1]),\n          evaluationText: feedbackOfQuestion === null || feedbackOfQuestion === void 0 ? void 0 : feedbackOfQuestion[Number(questionPoints[0])]\n        }))\n      });\n\n      if (positiveFeedback.length) {\n        await FeedBackApi.saveFeedbackArr({\n          eventToken,\n          userToken,\n          eventId: 0,\n          evaluatorId: 0,\n          evaluateeId: userId,\n          feedbackText: positiveFeedback,\n          isPositive: 1\n        });\n      }\n\n      if (negativeFeedback.length) {\n        await FeedBackApi.saveFeedbackArr({\n          eventToken,\n          userToken,\n          eventId: 0,\n          evaluatorId: 0,\n          evaluateeId: userId,\n          feedbackText: negativeFeedback,\n          isPositive: 0\n        });\n      }\n\n      if (response.status === 200) {\n        setOpenModalSuccess(true);\n        setPositiveFeedback([]);\n        setNegativeFeedback([]);\n        const eventEvaluation = await EvaluationApi.getEventForEvaluation(userToken, eventToken);\n        setQuestionAnswers(Object.fromEntries(eventEvaluation.data.questions.map(question => [question.id, 0])));\n        setDonePercent(100 / (evaluatorsStepLength.length + 1 - activeUser));\n\n        if (evaluatorsStepLength.length > activeUser) {\n          setActiveUser(activeUser + 1);\n          setStep(0);\n          setCompleted({});\n          setActiveStep(0);\n        } else {\n          setDisabledSubmitButton(true);\n          setActiveUser(activeUser + 1);\n          setStep(0);\n          setCompleted({});\n          setActiveStep(0);\n          setEvaluationUser(undefined);\n        }\n\n        setIsLoading(false);\n      } else {\n        setOpenModalError(true);\n        setErrorMessage('');\n      }\n\n      setShowPopover(true);\n    } catch (e) {\n      console.log(e, 'error');\n    }\n  };\n\n  useEffect(() => {\n    if (eventData && !eventData.evaluatees[0]) {\n      setEventError(true);\n    }\n  }, [eventData]);\n  useEffect(() => {\n    if (eventData) {\n      setSteps(Object.keys(eventData.questionsGrouped));\n    }\n  }, [eventData]);\n  useEffect(() => {\n    if (evaluatorsStepLength.length < activeUser) {\n      setEventError(true);\n    } else {\n      setEventError(false);\n    }\n  }, [activeUser, evaluatorsStepLength]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"evaluators-step-container\",\n    children: [/*#__PURE__*/_jsxDEV(RateSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"d-flex flex-wrap justify-around align-center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"mr-30 mt-12 mb-10 font-size-20 font-weight-500 line-height-24 \",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \" font-size-18 line-height-22 font-weight-400 d-flex\",\n          children: evaluationUser ? /*#__PURE__*/_jsxDEV(Box, {\n            className: \"d-flex align-center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: \"font-size-18 font-weight-700 color-dark-blue\",\n              children: [\"Evaluatee: \", evaluationUser.name && evaluationUser.name, ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"color-light-gray2 ml-14 font-italic font-size-16\",\n              children: evaluationUser && evaluationUser.position ? evaluationUser.position : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            children: \"There is no Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"d-flex flex-wrap align-center color-dark-blue\",\n        children: (eventData === null || eventData === void 0 ? void 0 : eventData.dueDate) && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"mr-50 mt-12 mb-10\",\n          children: [\"Evaluation due date:\", ' ', /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            className: \"bold font-size-18 line-height-22\",\n            children: evaluationUser && moment(eventData.dueDate).format('YYYY-MM-DD')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), step === 0 && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"mt-142 d-flex justify-center align-center\",\n      children: [/*#__PURE__*/_jsxDEV(PopoverContainer, {\n        open: showPopover,\n        onClose: handleClosePopover,\n        title: \"All done! Your evaluation form was submitted!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), !isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        className: \"d-flex align-center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: `${classesButtons.colorBlueButton} mr-10`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setStep(1),\n            disabled: eventError,\n            color: \"blue\",\n            children: [\"Start evaluation\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        className: \"text-center m-auto w-100\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          className: \"pt-12 pb-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"mt-60\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"evaluation-stepper-container m-auto\",\n        children: /*#__PURE__*/_jsxDEV(StepperPage, {\n          stepperAllActive: false,\n          steps: eventData !== null && eventData !== void 0 && eventData.questionsGrouped ? [...Object.keys(eventData === null || eventData === void 0 ? void 0 : eventData.questionsGrouped), 'Last'] : [],\n          completed: completed,\n          activeStep: activeStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mt-50\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"evaluators-step-rating-container\",\n          children: [(eventData === null || eventData === void 0 ? void 0 : eventData.questionsGrouped) && Object.keys(eventData === null || eventData === void 0 ? void 0 : eventData.questionsGrouped).map((questionGroupId, index) => {\n            var _questionGroups$find;\n\n            return activeStep === index && /*#__PURE__*/_jsxDEV(EvaluatorsSteps, {\n              setBlockedNext: value => setBlockedNext(value),\n              ratePointFrom: eventData.ratePointFrom,\n              ratePointTo: eventData.ratePointTo,\n              questionAnswers: questionAnswers,\n              markWithText: markWithText,\n              questions: eventData.questionsGrouped[questionGroupId],\n              setFeedbackOfQuestion: (questionId, feedbackValue) => {\n                setFeedbackOfQuestion({ ...feedbackOfQuestion,\n                  [questionId]: feedbackValue\n                });\n              },\n              setQuestionAnswers: (questionId, questionValue) => {\n                setQuestionAnswers({ ...questionAnswers,\n                  [questionId]: questionValue\n                });\n              },\n              title: (questionGroups === null || questionGroups === void 0 ? void 0 : (_questionGroups$find = questionGroups.find(questionGroup => questionGroup.id === Number(questionGroupId))) === null || _questionGroups$find === void 0 ? void 0 : _questionGroups$find.questionGroupTitle) || ''\n            }, questionGroupId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 23\n            }, this);\n          }), activeStep + 1 === steps.length + 1 && /*#__PURE__*/_jsxDEV(FeedbacksStep, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 55\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n            className: \"text-center m-auto w-100 evaluators-step-button-container-step-4\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            className: `${activeStep + 1 !== steps.length + 1 ? 'evaluators-step-button-container' : 'evaluators-step-button-container-step-4'} d-flex justify-center`,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: `${classesButtons.transparentWithBorderButton} mb-10 mr-46`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: clsx(classesEvaluatorsStep.normalSizeButton),\n                onClick: handleBack,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 19\n            }, this), activeStep < steps.length && /*#__PURE__*/_jsxDEV(Box, {\n              className: `mb-10 ${classesButtons.colorBlueButton}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"blue\",\n                size: \"large\",\n                className: ` ${classesEvaluatorsStep.normalSizeButton}`,\n                onClick: handleNext,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 21\n            }, this), activeStep + 1 === steps.length + 1 && /*#__PURE__*/_jsxDEV(Box, {\n              className: `${classesButtons.colorBlueButton}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleSubmit(),\n                variant: \"contained\",\n                color: \"blue\",\n                size: \"large\",\n                disabled: disabledSubmitButton,\n                className: ` ${classesEvaluatorsStep.normalSizeButton}`,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), clickedNext && blockedNext && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"error-message\",\n          children: \"Please select value for all questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SuccessModalSecond, {\n      openModal: openModalSuccess,\n      closeModal: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorModal, {\n      errorMessage: errorMessage,\n      openModal: openModalError,\n      closeModal: handleCloseErrorModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"WBp+EWgl7LDupCajN337uSeY+/o=\", false, function () {\n  return [useStyles, useStylesButton, useSearchParams];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/evaluatorsStep/index.tsx"],"names":["React","useEffect","useState","Box","Button","CircularProgress","clsx","useSearchParams","moment","SuccessModalSecond","StepperPage","EvaluatorsSteps","FeedbacksStep","useStyles","EvaluationApi","UseFeedbackContext","RateSidebar","ErrorModal","UseEvaluationContext","FeedBackApi","useStylesButton","PopoverContainer","Index","classesEvaluatorsStep","classesButtons","openModalSuccess","setOpenModalSuccess","clickedNext","setClickedNext","blockedNext","setBlockedNext","setActiveUser","activeUser","userId","evaluatorsStepLength","evaluationUser","setEvaluationUser","setIsNegativeFeedbacks","setIsPositiveFeedbacks","setScorings","setDonePercent","markWithText","setMarkWithText","step","setStep","steps","setSteps","activeStep","setActiveStep","openModalError","setOpenModalError","eventError","setEventError","errorMessage","setErrorMessage","completed","setCompleted","showPopover","setShowPopover","isLoading","setIsLoading","disabledSubmitButton","setDisabledSubmitButton","searchParameters","eventData","setEventData","questionAnswers","setQuestionAnswers","handleCloseErrorModal","questionGroups","setQuestionGroups","feedbackOfQuestion","setFeedbackOfQuestion","positiveFeedback","negativeFeedback","setPositiveFeedback","setNegativeFeedback","searchParams","entries","eventToken","find","paramName","userToken","eventEvaluation","getEventForEvaluation","status","data","isPositiveFeedbacks","isNegativeFeedbacks","scorings","questionsGrouped","questions","reduce","acc","val","questionGroupId","evaluationType","Object","fromEntries","map","question","id","response","message","questionGroupsData","getQuestionGroups","handleNext","newCompleted","handleBack","prevActiveStep","handleCloseModal","handleClosePopover","handleSubmit","saveQuestionGroups","evaluatorId","evaluateeId","questionPointArr","questionPoints","questionId","Number","point","evaluationText","length","saveFeedbackArr","eventId","feedbackText","isPositive","undefined","e","console","log","evaluatees","keys","name","position","dueDate","format","colorBlueButton","index","value","ratePointFrom","ratePointTo","feedbackValue","questionValue","questionGroup","questionGroupTitle","transparentWithBorderButton","normalSizeButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Box, Button, CircularProgress} from '@mui/material'\nimport clsx from 'clsx'\nimport {useSearchParams} from 'react-router-dom'\nimport moment from 'moment'\n// import CirclePercent from '../../layouts/circlePercent/circlePercent'\nimport SuccessModalSecond from '../../layouts/modal/successModalSecond'\nimport StepperPage from '../../layouts/stepper'\nimport EvaluatorsSteps from './evaluatorsSteps'\nimport FeedbacksStep from './feedbacksStep'\nimport useStyles from '../../assets/makeStyles/evaluatorsStep/evaluatorsStep'\n// import MakeStyles from '../../assets/makeStyles/makeStyles'\nimport EvaluationApi from '../../api/evaluation'\nimport {UseFeedbackContext} from '../../context/feedbackContext/feedbackContext'\nimport {IFeedbackProps} from '../../context/feedbackContext/feedbackContext.props'\nimport {QuestionGroup, IQuestion} from '../../interfaces/evaulateEvent'\nimport RateSidebar from '../../layouts/rateEvaluateSidebar'\nimport ErrorModal from '../../layouts/modal/errorModal'\nimport {UseEvaluationContext} from '../../context/evalaution/evaluationContext'\nimport {IEvalautionProps} from '../../context/evalaution/evaluationContext.props'\nimport FeedBackApi from '../../api/feedback'\nimport useStylesButton from '../../assets/makeStyles/buttons/buttons'\nimport PopoverContainer from '../../layouts/popover/popover'\n\nconst Index = () => {\n  const classesEvaluatorsStep = useStyles()\n  // const classes = MakeStyles()\n  const classesButtons = useStylesButton()\n\n  const [openModalSuccess, setOpenModalSuccess] = useState(false)\n  const [clickedNext, setClickedNext] = useState<boolean>(false)\n  const [blockedNext, setBlockedNext] = useState<boolean>(false)\n\n  const {\n    setActiveUser,\n    activeUser,\n    userId,\n    evaluatorsStepLength,\n    evaluationUser,\n    setEvaluationUser,\n    setIsNegativeFeedbacks,\n    setIsPositiveFeedbacks,\n    setScorings,\n    setDonePercent,\n  } = UseEvaluationContext() as IEvalautionProps\n\n  const [markWithText, setMarkWithText] = useState(false)\n  const [step, setStep] = useState(0)\n  const [steps, setSteps] = useState<string[] | number[]>([1, 2, 3, 4])\n  const [activeStep, setActiveStep] = useState(0)\n  const [openModalError, setOpenModalError] = useState(false)\n  const [eventError, setEventError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [completed, setCompleted] = useState<{\n    [k: number]: boolean\n  }>({})\n  const [showPopover, setShowPopover] = useState<boolean>(false)\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [disabledSubmitButton, setDisabledSubmitButton] = useState<boolean>(false)\n  const [searchParameters] = useSearchParams()\n  const [eventData, setEventData] = useState<\n    | {\n        dueDate: string\n        evaluatees: {firstName: string; lastName: string}[]\n        questionsGrouped: Record<number, IQuestion[]>\n        ratePointFrom: number\n        ratePointTo: number\n      }\n    | undefined\n  >()\n  const [questionAnswers, setQuestionAnswers] = useState<{\n    [k: number]: number\n  }>({})\n\n  const handleCloseErrorModal = () => {\n    setOpenModalError(false)\n  }\n\n  const [questionGroups, setQuestionGroups] = useState<QuestionGroup[]>([])\n  const [feedbackOfQuestion, setFeedbackOfQuestion] = useState<{[k: number]: string}>()\n\n  const {positiveFeedback, negativeFeedback, setPositiveFeedback, setNegativeFeedback} =\n    UseFeedbackContext() as IFeedbackProps\n\n  useEffect(() => {\n    const searchParams: any[] = [...searchParameters.entries()]\n    setIsLoading(true)\n    const eventToken = searchParams.find(([paramName]) => paramName === 'event_token')[1]\n    const userToken = searchParams.find(([paramName]) => paramName === 'user_token')[1]\n    ;(async () => {\n      if (userToken && eventToken) {\n        const eventEvaluation: any = await EvaluationApi.getEventForEvaluation(\n          userToken,\n          eventToken,\n        )\n        if (eventEvaluation.status === 200) {\n          setIsPositiveFeedbacks(eventEvaluation.data.isPositiveFeedbacks)\n          setIsNegativeFeedbacks(eventEvaluation.data.isNegativeFeedbacks)\n          setScorings(eventEvaluation.data.scorings)\n          setEventData({\n            ...eventEvaluation.data,\n            questionsGrouped: eventEvaluation.data.questions.reduce(\n              (acc: Record<number, IQuestion[]>, val: IQuestion) =>\n                acc[val.questionGroupId]\n                  ? {\n                      ...acc,\n                      [val.questionGroupId]: [...acc[val.questionGroupId], val],\n                    }\n                  : {\n                      ...acc,\n                      [val.questionGroupId]: [val],\n                    },\n              {},\n            ),\n          })\n          setMarkWithText(eventEvaluation.data.evaluationType === 0)\n\n          if (eventEvaluation.data.evaluationType === 0) {\n            setQuestionAnswers(\n              Object.fromEntries(\n                eventEvaluation.data.questions.map((question: IQuestion) => [question.id, '']),\n              ),\n            )\n          } else {\n            setQuestionAnswers(\n              Object.fromEntries(\n                eventEvaluation.data.questions.map((question: IQuestion) => [question.id, '']),\n              ),\n            )\n          }\n        } else {\n          setOpenModalError(true)\n          setEventError(true)\n          setErrorMessage(eventEvaluation.response.data.message || '')\n        }\n        setIsLoading(false)\n      }\n    })()\n    ;(async () => {\n      if (userToken && eventToken) {\n        const questionGroupsData = await EvaluationApi.getQuestionGroups(userToken, eventToken)\n        setQuestionGroups(questionGroupsData.data)\n      }\n    })()\n  }, [searchParameters])\n\n  const handleNext = () => {\n    setClickedNext(true)\n    if (!blockedNext) {\n      setClickedNext(false)\n      const newCompleted = completed\n      newCompleted[activeStep] = true\n      setCompleted(newCompleted)\n      setActiveStep(activeStep + 1)\n    }\n  }\n\n  const handleBack = () => {\n    if (activeStep === 0) {\n      setStep(0)\n    } else {\n      const newCompleted = completed\n      newCompleted[activeStep] = false\n      setCompleted(newCompleted)\n      setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n  }\n\n  const handleCloseModal = () => setOpenModalSuccess(false)\n\n  const handleClosePopover = () => {\n    setShowPopover(false)\n  }\n\n  const handleSubmit = async () => {\n    try {\n      const searchParams: any[] = [...searchParameters.entries()]\n      setIsLoading(true)\n\n      const eventToken = searchParams.find(([paramName]) => paramName === 'event_token')[1]\n      const userToken = searchParams.find(([paramName]) => paramName === 'user_token')[1]\n\n      const response = await EvaluationApi.saveQuestionGroups({\n        eventToken,\n        userToken,\n        evaluatorId: 0,\n        evaluateeId: userId,\n        questionPointArr: Object.entries(questionAnswers).map((questionPoints) => ({\n          questionId: Number(questionPoints[0]),\n          point: Number(questionPoints[1]),\n          evaluationText: feedbackOfQuestion?.[Number(questionPoints[0])],\n        })),\n      })\n\n      if (positiveFeedback.length) {\n        await FeedBackApi.saveFeedbackArr({\n          eventToken,\n          userToken,\n          eventId: 0,\n          evaluatorId: 0,\n          evaluateeId: userId,\n          feedbackText: positiveFeedback,\n          isPositive: 1,\n        })\n      }\n\n      if (negativeFeedback.length) {\n        await FeedBackApi.saveFeedbackArr({\n          eventToken,\n          userToken,\n          eventId: 0,\n          evaluatorId: 0,\n          evaluateeId: userId,\n          feedbackText: negativeFeedback,\n          isPositive: 0,\n        })\n      }\n      if (response.status === 200) {\n        setOpenModalSuccess(true)\n        setPositiveFeedback([])\n        setNegativeFeedback([])\n\n        const eventEvaluation = await EvaluationApi.getEventForEvaluation(userToken, eventToken)\n        setQuestionAnswers(\n          Object.fromEntries(\n            eventEvaluation.data.questions.map((question: IQuestion) => [question.id, 0]),\n          ),\n        )\n        setDonePercent(100 / (evaluatorsStepLength.length + 1 - activeUser))\n        if (evaluatorsStepLength.length > activeUser) {\n          setActiveUser(activeUser + 1)\n          setStep(0)\n          setCompleted({})\n          setActiveStep(0)\n        } else {\n          setDisabledSubmitButton(true)\n          setActiveUser(activeUser + 1)\n          setStep(0)\n          setCompleted({})\n          setActiveStep(0)\n          setEvaluationUser(undefined)\n        }\n        setIsLoading(false)\n      } else {\n        setOpenModalError(true)\n        setErrorMessage('')\n      }\n      setShowPopover(true)\n    } catch (e) {\n      console.log(e, 'error')\n    }\n  }\n\n  useEffect(() => {\n    if (eventData && !eventData.evaluatees[0]) {\n      setEventError(true)\n    }\n  }, [eventData])\n\n  useEffect(() => {\n    if (eventData) {\n      setSteps(Object.keys(eventData.questionsGrouped))\n    }\n  }, [eventData])\n\n  useEffect(() => {\n    if (evaluatorsStepLength.length < activeUser) {\n      setEventError(true)\n    } else {\n      setEventError(false)\n    }\n  }, [activeUser, evaluatorsStepLength])\n\n  return (\n    <Box className=\"evaluators-step-container\">\n      <RateSidebar />\n      <Box className=\"d-flex flex-wrap justify-around align-center\">\n        <Box className=\"mr-30 mt-12 mb-10 font-size-20 font-weight-500 line-height-24 \">\n          <Box className=\" font-size-18 line-height-22 font-weight-400 d-flex\">\n            {evaluationUser ? (\n              <Box className=\"d-flex align-center\">\n                <Box className=\"font-size-18 font-weight-700 color-dark-blue\">\n                  Evaluatee: {evaluationUser.name && evaluationUser.name}{' '}\n                </Box>\n                <Box className=\"color-light-gray2 ml-14 font-italic font-size-16\">\n                  {evaluationUser && evaluationUser.position ? evaluationUser.position : ''}\n                </Box>\n              </Box>\n            ) : (\n              <Box>There is no Data</Box>\n            )}\n          </Box>\n        </Box>\n        <Box className=\"d-flex flex-wrap align-center color-dark-blue\">\n          {eventData?.dueDate && (\n            <Box className=\"mr-50 mt-12 mb-10\">\n              Evaluation due date:{' '}\n              <Box component=\"span\" className=\"bold font-size-18 line-height-22\">\n                {evaluationUser && moment(eventData.dueDate).format('YYYY-MM-DD')}\n              </Box>\n            </Box>\n          )}\n        </Box>\n        {/*<Box className=\"d-flex mb-10\">*/}\n        {/*  <Box>*/}\n        {/*    <CirclePercent percent={Math.floor(donePercent)} width={40} />*/}\n        {/*  </Box>*/}\n        {/*  <Box className=\"mr-36 mt-16\">*/}\n        {/*    <Box*/}\n        {/*      className={`ml-16 font-size-12 font-weight-300 line-height-14 font-italic ${classes.colorGray}`}*/}\n        {/*    >*/}\n        {/*      {Math.floor(donePercent) <= 0*/}\n        {/*        ? 'Not started yet'*/}\n        {/*        : `${Math.floor(donePercent)}% done`}*/}\n        {/*    </Box>*/}\n        {/*  </Box>*/}\n        {/*</Box>*/}\n      </Box>\n      {step === 0 && (\n        <Box className=\"mt-142 d-flex justify-center align-center\">\n          <PopoverContainer\n            open={showPopover}\n            onClose={handleClosePopover}\n            title=\"All done! Your evaluation form was submitted!\"\n          />\n          {!isLoading ? (\n            <Box className=\"d-flex align-center\">\n              <Box className={`${classesButtons.colorBlueButton} mr-10`}>\n                <Button\n                  variant=\"contained\"\n                  onClick={() => setStep(1)}\n                  disabled={eventError}\n                  color=\"blue\"\n                >\n                  Start evaluation{' '}\n                </Button>\n              </Box>\n              {/*<p className=\"ml-6 font-weight-800\">*/}\n              {/*  {evaluationUser && `for ${evaluationUser.name}`}*/}\n              {/*</p>*/}\n            </Box>\n          ) : (\n            <Box className=\"text-center m-auto w-100\">\n              <CircularProgress className=\"pt-12 pb-10\" />\n            </Box>\n          )}\n        </Box>\n      )}\n      {step === 1 && (\n        <Box className=\"mt-60\">\n          <Box className=\"evaluation-stepper-container m-auto\">\n            <StepperPage\n              stepperAllActive={false}\n              steps={\n                eventData?.questionsGrouped\n                  ? [...Object.keys(eventData?.questionsGrouped), 'Last']\n                  : []\n              }\n              completed={completed}\n              activeStep={activeStep}\n            />\n          </Box>\n          <Box className=\"mt-50\">\n            <Box className=\"evaluators-step-rating-container\">\n              {eventData?.questionsGrouped &&\n                Object.keys(eventData?.questionsGrouped).map(\n                  (questionGroupId, index) =>\n                    activeStep === index && (\n                      <EvaluatorsSteps\n                        setBlockedNext={(value) => setBlockedNext(value)}\n                        ratePointFrom={eventData.ratePointFrom}\n                        ratePointTo={eventData.ratePointTo}\n                        questionAnswers={questionAnswers}\n                        markWithText={markWithText}\n                        questions={eventData.questionsGrouped[questionGroupId as unknown as number]}\n                        setFeedbackOfQuestion={(questionId: number, feedbackValue: string) => {\n                          setFeedbackOfQuestion({\n                            ...feedbackOfQuestion,\n                            [questionId]: feedbackValue,\n                          })\n                        }}\n                        setQuestionAnswers={(questionId: number, questionValue: number) => {\n                          setQuestionAnswers({\n                            ...questionAnswers,\n                            [questionId]: questionValue,\n                          })\n                        }}\n                        title={\n                          questionGroups?.find(\n                            (questionGroup) => questionGroup.id === Number(questionGroupId),\n                          )?.questionGroupTitle || ''\n                        }\n                        key={questionGroupId}\n                      />\n                    ),\n                )}\n              {activeStep + 1 === steps.length + 1 && <FeedbacksStep />}\n              {isLoading ? (\n                <Box className=\"text-center m-auto w-100 evaluators-step-button-container-step-4\">\n                  <CircularProgress />\n                </Box>\n              ) : (\n                <Box\n                  className={`${\n                    activeStep + 1 !== steps.length + 1\n                      ? 'evaluators-step-button-container'\n                      : 'evaluators-step-button-container-step-4'\n                  } d-flex justify-center`}\n                >\n                  <Box className={`${classesButtons.transparentWithBorderButton} mb-10 mr-46`}>\n                    <Button\n                      className={clsx(classesEvaluatorsStep.normalSizeButton)}\n                      onClick={handleBack}\n                    >\n                      Back\n                    </Button>\n                  </Box>\n                  {activeStep < steps.length && (\n                    <Box className={`mb-10 ${classesButtons.colorBlueButton}`}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"blue\"\n                        size=\"large\"\n                        className={` ${classesEvaluatorsStep.normalSizeButton}`}\n                        onClick={handleNext}\n                      >\n                        Next\n                      </Button>\n                    </Box>\n                  )}\n                  {activeStep + 1 === steps.length + 1 && (\n                    <Box className={`${classesButtons.colorBlueButton}`}>\n                      <Button\n                        onClick={() => handleSubmit()}\n                        variant=\"contained\"\n                        color=\"blue\"\n                        size=\"large\"\n                        disabled={disabledSubmitButton}\n                        className={` ${classesEvaluatorsStep.normalSizeButton}`}\n                      >\n                        Submit\n                      </Button>\n                    </Box>\n                  )}\n                </Box>\n              )}\n            </Box>\n            {clickedNext && blockedNext && (\n              <Box className=\"error-message\">Please select value for all questions</Box>\n            )}\n          </Box>\n        </Box>\n      )}\n      <SuccessModalSecond openModal={openModalSuccess} closeModal={handleCloseModal} />\n      <ErrorModal\n        errorMessage={errorMessage}\n        openModal={openModalError}\n        closeModal={handleCloseErrorModal}\n      />\n    </Box>\n  )\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}