{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/layouts/tabs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Tab, Tabs } from '@mui/material';\nimport { useLocation } from 'react-router'; // import {UseCertificateContext} from '../context/certificateContext/certificateContext'\n\nimport useStylesTabs from '../assets/makeStyles/tabs/tabs';\nimport { UseCertificateContext } from '../context/certificateContext/certificateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import {ICertificateProps} from '../context/certificateContext/certificateContext.props'\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    role: \"tabpanel\",\n    className: \"tab-panel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"height-inherit\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"height-inherit\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TabPanel;\n\nconst tabProps = index => ({\n  id: `simple-tab-${index}`,\n  'aria-controls': `simple-tabpanel-${index}`\n});\n\nconst TabsLayout = props => {\n  _s();\n\n  const {\n    tabs1,\n    tabs2,\n    tabs3,\n    label1,\n    label2,\n    label3\n  } = props;\n  const location = useLocation();\n  const classes = useStylesTabs(); // const {certificateData} = UseCertificateContext() as IContextProps\n\n  const [tabValue, setTabValue] = useState(0);\n  const {\n    setShowCertificate\n  } = UseCertificateContext();\n  useEffect(() => {\n    if (location.search === '?fromDashboard') {\n      setTabValue(2);\n    } else if (location.search === '?fromViewForm') {\n      setTabValue(1);\n    }\n  }, [location]);\n\n  const handleChangeTab = (event, newValue) => {\n    setTabValue(newValue);\n    setShowCertificate(false);\n  }; // useEffect(() => {\n  //   if (certificateData.isVisible) {\n  //     setTabValue(2)\n  //   }\n  // }, [certificateData.isVisible])\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"tabs-events-container\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        className: ` ${classes.tabStyle} ${classes.tabButton}`,\n        TabIndicatorProps: {\n          className: classes.indicator\n        },\n        value: tabValue,\n        onChange: handleChangeTab,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: label1,\n          ...tabProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: label2,\n          ...tabProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), tabs3 && /*#__PURE__*/_jsxDEV(Tab, {\n          label: label3,\n          ...tabProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 0,\n      children: tabs1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 1,\n      children: tabs2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), tabs3 && /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 2,\n      children: tabs3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TabsLayout, \"+eUzjb+SkzzNZHcXmu0nl4gosx4=\", false, function () {\n  return [useLocation, useStylesTabs];\n});\n\n_c2 = TabsLayout;\nexport default TabsLayout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"TabsLayout\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/layouts/tabs.tsx"],"names":["React","useEffect","useState","Box","Tab","Tabs","useLocation","useStylesTabs","UseCertificateContext","TabPanel","props","children","value","index","other","tabProps","id","TabsLayout","tabs1","tabs2","tabs3","label1","label2","label3","location","classes","tabValue","setTabValue","setShowCertificate","search","handleChangeTab","event","newValue","tabStyle","tabButton","className","indicator"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Box, Tab, Tabs} from '@mui/material'\nimport {useLocation} from 'react-router'\n// import {UseCertificateContext} from '../context/certificateContext/certificateContext'\nimport useStylesTabs from '../assets/makeStyles/tabs/tabs'\nimport {ITabPanelProps, ITabsLayoutProps} from '../shared/types/tabs/tabs'\nimport {UseCertificateContext} from '../context/certificateContext/certificateContext'\nimport {\n  ICertificateProps,\n  // IContextProps,\n} from '../context/certificateContext/certificateContext.props'\n// import {ICertificateProps} from '../context/certificateContext/certificateContext.props'\n\nconst TabPanel = (props: ITabPanelProps) => {\n  const {children, value, index, ...other} = props\n  return (\n    <Box\n      role=\"tabpanel\"\n      className=\"tab-panel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box className=\"height-inherit\">\n          <Box className=\"height-inherit\">{children}</Box>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nconst tabProps = (index: number) => ({\n  id: `simple-tab-${index}`,\n  'aria-controls': `simple-tabpanel-${index}`,\n})\n\nconst TabsLayout = (props: ITabsLayoutProps) => {\n  const {tabs1, tabs2, tabs3, label1, label2, label3} = props\n  const location = useLocation()\n  const classes = useStylesTabs()\n  // const {certificateData} = UseCertificateContext() as IContextProps\n  const [tabValue, setTabValue] = useState(0)\n\n  const {setShowCertificate} = UseCertificateContext() as ICertificateProps\n\n  useEffect(() => {\n    if (location.search === '?fromDashboard') {\n      setTabValue(2)\n    } else if (location.search === '?fromViewForm') {\n      setTabValue(1)\n    }\n  }, [location])\n\n  const handleChangeTab = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue)\n    setShowCertificate(false)\n  }\n\n  // useEffect(() => {\n  //   if (certificateData.isVisible) {\n  //     setTabValue(2)\n  //   }\n  // }, [certificateData.isVisible])\n\n  return (\n    <Box>\n      <Box className=\"tabs-events-container\">\n        <Tabs\n          className={` ${classes.tabStyle} ${classes.tabButton}`}\n          TabIndicatorProps={{className: classes.indicator}}\n          value={tabValue}\n          onChange={handleChangeTab}\n        >\n          <Tab label={label1} {...tabProps(0)} />\n          <Tab label={label2} {...tabProps(0)} />\n          {tabs3 && <Tab label={label3} {...tabProps(0)} />}\n        </Tabs>\n      </Box>\n      <TabPanel value={tabValue} index={0}>\n        {tabs1}\n      </TabPanel>\n      <TabPanel value={tabValue} index={1}>\n        {tabs2}\n      </TabPanel>\n      {tabs3 && (\n        <TabPanel value={tabValue} index={2}>\n          {tabs3}\n        </TabPanel>\n      )}\n    </Box>\n  )\n}\nexport default TabsLayout\n"]},"metadata":{},"sourceType":"module"}