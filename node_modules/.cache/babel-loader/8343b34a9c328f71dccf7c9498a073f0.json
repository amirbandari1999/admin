{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/auth/passwordRecovery.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, CircularProgress, FormControl, FormHelperText, TextField } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport { NavLink } from 'react-router-dom';\nimport MakeStyles from '../../assets/makeStyles/makeStyles';\nimport AuthenticationsApi from '../../api/authentication';\nimport Regex from '../../constants/regex';\nimport ButtonBlue from '../../layouts/buttons/buttonBlue';\nimport PopoverContainer from '../../layouts/popover/popover'; // import ButtonTranparentBorder from '../../layouts/buttons/buttonTransparentBorder'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordRecovery = () => {\n  _s();\n\n  const classes = MakeStyles();\n  const regEmail = Regex.email;\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPopover, setShowPopover] = useState(false);\n  const [email, setEmail] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSendMeLink = () => {\n    if (!email) {\n      setErrorMessage('Email is required');\n    } else if (!regEmail.test(email)) {\n      setErrorMessage('Invalid Email');\n    } else {\n      ;\n\n      (async () => {\n        setIsLoading(true);\n        const formData = new FormData();\n        formData.append('Email', email);\n        const response = await AuthenticationsApi.forgotPassword(formData);\n\n        if (response.status === 200) {\n          setErrorMessage('');\n          setShowPopover(true);\n        } else {\n          setErrorMessage(response.response.data.message);\n        }\n\n        setIsLoading(false);\n      })();\n    }\n  };\n\n  const handleClosePopover = () => {\n    setShowPopover(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PopoverContainer, {\n      title: \"Email is successfully sent! Check your inbox.\",\n      open: showPopover,\n      onClose: handleClosePopover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth_title text-center\",\n        children: \"Welcome Back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-size-16 font-weight-500 mt-28 color-light-gray3\",\n        children: \"Enter your email for password recovery link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.marginTop50,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          error: Boolean(errorMessage),\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: `${classes.w100} ${classes.inputStyle} ${classes.bgGray}`,\n            size: \"small\",\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Email\",\n            variant: \"outlined\",\n            value: email,\n            error: Boolean(errorMessage),\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: errorMessage !== null && errorMessage !== void 0 ? errorMessage : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mt-50\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n          className: \"d-flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(ButtonBlue, {\n            fullWidth: true,\n            handleClick: handleSendMeLink,\n            title: \"SEND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mt-20 font-weight-400 font-size-16 line-height-20 color-light-gray2\",\n        children: [\"Do not have an account? \", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/sign-up\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordRecovery, \"RI6S/7VCZ52XhPvLHHsnaj8xenE=\");\n\n_c = PasswordRecovery;\nexport default PasswordRecovery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordRecovery\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/auth/passwordRecovery.tsx"],"names":["React","useState","Box","CircularProgress","FormControl","FormHelperText","TextField","Stack","NavLink","MakeStyles","AuthenticationsApi","Regex","ButtonBlue","PopoverContainer","PasswordRecovery","classes","regEmail","email","isLoading","setIsLoading","showPopover","setShowPopover","setEmail","errorMessage","setErrorMessage","handleSendMeLink","test","formData","FormData","append","response","forgotPassword","status","data","message","handleClosePopover","marginTop50","Boolean","w100","inputStyle","bgGray","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Box, CircularProgress, FormControl, FormHelperText, TextField} from '@mui/material'\nimport Stack from '@mui/material/Stack'\nimport {NavLink} from 'react-router-dom'\nimport MakeStyles from '../../assets/makeStyles/makeStyles'\nimport AuthenticationsApi from '../../api/authentication'\nimport Regex from '../../constants/regex'\nimport ButtonBlue from '../../layouts/buttons/buttonBlue'\nimport PopoverContainer from '../../layouts/popover/popover'\n// import ButtonTranparentBorder from '../../layouts/buttons/buttonTransparentBorder'\n\nconst PasswordRecovery = () => {\n  const classes = MakeStyles()\n  const regEmail = Regex.email\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [showPopover, setShowPopover] = useState<boolean>(false)\n  const [email, setEmail] = useState<string>('')\n  const [errorMessage, setErrorMessage] = useState<string>('')\n\n  const handleSendMeLink = () => {\n    if (!email) {\n      setErrorMessage('Email is required')\n    } else if (!regEmail.test(email)) {\n      setErrorMessage('Invalid Email')\n    } else {\n      ;(async () => {\n        setIsLoading(true)\n\n        const formData = new FormData()\n        formData.append('Email', email)\n\n        const response: any = await AuthenticationsApi.forgotPassword(formData)\n        if (response.status === 200) {\n          setErrorMessage('')\n          setShowPopover(true)\n        } else {\n          setErrorMessage(response.response.data.message)\n        }\n        setIsLoading(false)\n      })()\n    }\n  }\n\n  const handleClosePopover = () => {\n    setShowPopover(false)\n  }\n\n  return (\n    <div>\n      <PopoverContainer\n        title=\"Email is successfully sent! Check your inbox.\"\n        open={showPopover}\n        onClose={handleClosePopover}\n      />\n\n      {/*{sendLink ? (*/}\n      {/*  <Stack direction=\"column\">*/}\n      {/*    <p className=\"auth_title\">Password Recovery</p>*/}\n      {/*    <p className=\"auth_text\">We sent you recovery link , check your inbox</p>*/}\n      {/*    <Box className=\"d-flex mt-26\">*/}\n      {/*      <ButtonTranparentBorder*/}\n      {/*        handleClick={() => setSendLink(false)}*/}\n      {/*        title=\"RESEND\"*/}\n      {/*        width=\"width150\"*/}\n      {/*      />*/}\n      {/*    </Box>*/}\n      {/*  </Stack>*/}\n      {/*) : (*/}\n      <Stack direction=\"column\">\n        <p className=\"auth_title text-center\">Welcome Back!</p>\n        <p className=\"font-size-16 font-weight-500 mt-28 color-light-gray3\">\n          Enter your email for password recovery link\n        </p>\n        <Box className={classes.marginTop50}>\n          <FormControl error={Boolean(errorMessage)} fullWidth>\n            <TextField\n              className={`${classes.w100} ${classes.inputStyle} ${classes.bgGray}`}\n              size=\"small\"\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Email\"\n              variant=\"outlined\"\n              value={email}\n              error={Boolean(errorMessage)}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <FormHelperText>{errorMessage ?? ''}</FormHelperText>\n          </FormControl>\n        </Box>\n        <Box className=\"mt-50\">\n          {isLoading ? (\n            <Box className=\"d-flex justify-center\">\n              <CircularProgress />\n            </Box>\n          ) : (\n            <Box>\n              <ButtonBlue fullWidth handleClick={handleSendMeLink} title=\"SEND\" />\n            </Box>\n          )}\n        </Box>\n        <Box className=\"mt-20 font-weight-400 font-size-16 line-height-20 color-light-gray2\">\n          Do not have an account? <NavLink to=\"/sign-up\">Sign up</NavLink>\n        </Box>\n      </Stack>\n      {/*)}*/}\n    </div>\n  )\n}\n\nexport default PasswordRecovery\n"]},"metadata":{},"sourceType":"module"}