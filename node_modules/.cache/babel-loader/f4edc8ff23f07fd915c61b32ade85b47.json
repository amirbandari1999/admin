{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/context/userContext/userContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\n\nconst UserPageProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userId, setUserId] = useState(Number(localStorage.userId));\n  const [email, setEmail] = useState('');\n  const [accessToken, setAccessToken] = useState(localStorage.accessToken);\n  const [adminId, setAdminId] = useState(0);\n  const [userData, setUserData] = useState();\n  const [role, setRole] = useState(Number(localStorage.role));\n  const [isLoadingPage, setIsLoadingPage] = useState(false);\n  const [signedUp, setSignedUp] = useState(false);\n  const contextValues = React.useMemo(() => ({\n    email,\n    setEmail,\n    userId,\n    setUserId,\n    accessToken,\n    setAccessToken,\n    adminId,\n    setAdminId,\n    userData,\n    setUserData,\n    role,\n    setRole,\n    isLoadingPage,\n    setIsLoadingPage,\n    setSignedUp,\n    signedUp\n  }), [email, userId, accessToken, adminId, userData, role, isLoadingPage, signedUp]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserPageProvider, \"/Pb7s3WLmf3DmOtn3eCEqff6NII=\");\n\n_c = UserPageProvider;\nexport default UserPageProvider;\nexport const UseUserContext = () => {\n  _s2();\n\n  return useContext(UserContext);\n};\n\n_s2(UseUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = UseUserContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserPageProvider\");\n$RefreshReg$(_c2, \"UseUserContext\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/context/userContext/userContext.tsx"],"names":["React","createContext","useContext","useState","UserContext","UserPageProvider","children","userId","setUserId","Number","localStorage","email","setEmail","accessToken","setAccessToken","adminId","setAdminId","userData","setUserData","role","setRole","isLoadingPage","setIsLoadingPage","signedUp","setSignedUp","contextValues","useMemo","UseUserContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,QAAyD,OAAzD;;AAIA,MAAMC,WAAW,gBAAGH,aAAa,CAAoB,IAApB,CAAjC;;AAEA,MAAMI,gBAAgB,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAACC,IAAAA;AAAD,GAA8B;AACtD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAASM,MAAM,CAACC,YAAY,CAACH,MAAd,CAAf,CAApC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAqBO,YAAY,CAACG,WAAlC,CAA9C;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAS,CAAT,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAkBM,MAAM,CAACC,YAAY,CAACS,IAAd,CAAxB,CAAhC;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAU,KAAV,CAAlD;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAMsB,aAAa,GAAGzB,KAAK,CAAC0B,OAAN,CACpB,OAAO;AACLf,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLL,IAAAA,MAHK;AAILC,IAAAA,SAJK;AAKLK,IAAAA,WALK;AAMLC,IAAAA,cANK;AAOLC,IAAAA,OAPK;AAQLC,IAAAA,UARK;AASLC,IAAAA,QATK;AAULC,IAAAA,WAVK;AAWLC,IAAAA,IAXK;AAYLC,IAAAA,OAZK;AAaLC,IAAAA,aAbK;AAcLC,IAAAA,gBAdK;AAeLE,IAAAA,WAfK;AAgBLD,IAAAA;AAhBK,GAAP,CADoB,EAmBpB,CAACZ,KAAD,EAAQJ,MAAR,EAAgBM,WAAhB,EAA6BE,OAA7B,EAAsCE,QAAtC,EAAgDE,IAAhD,EAAsDE,aAAtD,EAAqEE,QAArE,CAnBoB,CAAtB;AAsBA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,aAA7B;AAAA,cAA6CnB;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhCD;;GAAMD,gB;;KAAAA,gB;AAkCN,eAAeA,gBAAf;AACA,OAAO,MAAMsB,cAAc,GAAG;AAAA;;AAAA,SAAMzB,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAvB;;IAAMuB,c;;MAAAA,c","sourcesContent":["import React, {createContext, useContext, useState} from 'react'\nimport {IContextProps, IUserProps} from './userContext.props'\nimport {IUserData} from '../../shared/types/user/user'\n\nconst UserContext = createContext<IUserProps | null>(null)\n\nconst UserPageProvider = ({children}: IContextProps) => {\n  const [userId, setUserId] = useState<number>(Number(localStorage.userId))\n  const [email, setEmail] = useState<string>('')\n  const [accessToken, setAccessToken] = useState<string | undefined>(localStorage.accessToken)\n  const [adminId, setAdminId] = useState<number>(0)\n  const [userData, setUserData] = useState<IUserData | null>()\n  const [role, setRole] = useState<string | number>(Number(localStorage.role))\n  const [isLoadingPage, setIsLoadingPage] = useState<boolean>(false)\n  const [signedUp, setSignedUp] = useState<boolean>(false)\n  const contextValues = React.useMemo(\n    () => ({\n      email,\n      setEmail,\n      userId,\n      setUserId,\n      accessToken,\n      setAccessToken,\n      adminId,\n      setAdminId,\n      userData,\n      setUserData,\n      role,\n      setRole,\n      isLoadingPage,\n      setIsLoadingPage,\n      setSignedUp,\n      signedUp,\n    }),\n    [email, userId, accessToken, adminId, userData, role, isLoadingPage, signedUp],\n  )\n\n  return <UserContext.Provider value={contextValues}>{children}</UserContext.Provider>\n}\n\nexport default UserPageProvider\nexport const UseUserContext = () => useContext(UserContext)\n"]},"metadata":{},"sourceType":"module"}