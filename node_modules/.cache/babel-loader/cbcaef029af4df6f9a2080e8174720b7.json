{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/auth/loginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, FormControl, TextField, FormHelperText } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport Visibility from '@mui/icons-material/Visibility';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { useNavigate } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport AuthBG from '../../assets/images/authBG';\nimport SignInIllu1 from '../../assets/images/signInIllu1';\nimport SignInIllu2 from '../../assets/images/signInIllu2';\nimport useStylesButton from '../../assets/makeStyles/buttons/buttons';\nimport MakeStyles from '../../assets/makeStyles/makeStyles';\nimport AuthenticationsApi from '../../api/authentication';\nimport { UseUserContext } from '../../context/userContext/userContext';\nimport Regex from '../../constants/regex';\nimport ButtonBlue from '../../layouts/buttons/buttonBlue';\nimport PopoverContainer from '../../layouts/popover/popover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const {\n    setUserId,\n    setEmail,\n    email,\n    setAccessToken,\n    setRole,\n    setSignedUp,\n    signedUp\n  } = UseUserContext();\n  const navigate = useNavigate();\n  const regEmail = Regex.email;\n  const classes = MakeStyles();\n  const classesButton = useStylesButton();\n  const [isActive, setIsActive] = useState(true);\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [signInError, setSignInError] = useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [showPopover, setShowPopover] = useState(false);\n  useEffect(() => {\n    if (signedUp) {\n      setShowPopover(true);\n      setSignedUp(false);\n    }\n  }, [signedUp]);\n  useEffect(() => {\n    if (signInError && !email) {\n      setEmailErrorMessage('Email is required');\n    } else if (signInError && !regEmail.test(email)) {\n      setEmailErrorMessage('Invalid Email');\n    } else {\n      setEmailErrorMessage('');\n    }\n  }, [email, signInError]);\n\n  const handleClosePopover = () => {\n    setShowPopover(false);\n  };\n\n  const login = async () => {\n    if (email && password) {\n      setSignInError(false);\n      const response = await AuthenticationsApi.logIn({\n        email,\n        password\n      });\n\n      if (response.status === 200) {\n        setErrorMessage('');\n        setIsActive(response.data.isActive);\n\n        if (response.data.isActive) {\n          localStorage.setItem('accessToken', response.data.accessToken);\n          localStorage.setItem('userId', response.data.userId);\n          localStorage.setItem('password', password);\n          localStorage.setItem('role', response.data.role);\n          setEmail(response.data.email);\n          setUserId(response.data.userId);\n          setRole(response.data.role);\n          setAccessToken(response.data.accessToken);\n        }\n      } else {\n        setErrorMessage(response.response.data.message);\n      }\n    } else {\n      setSignInError(true);\n    }\n  };\n\n  const forgotPassword = () => {\n    navigate('/forgot-password');\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-content_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-content_bg\",\n        children: /*#__PURE__*/_jsxDEV(AuthBG, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth_content\",\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"auth_title mt-52\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"auth_text\",\n            children: \"Don't have an account yet?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"mt-4 font-size-16 font-weight-400 line-height-22\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/sign-up\",\n              children: \"Sign up now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PopoverContainer, {\n            open: showPopover,\n            onClose: handleClosePopover,\n            title: \"Your account is succesfully created.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"mt-26\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              error: !!(signInError && emailErrorMessage),\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                className: `${classes.w100} ${classes.inputStyle} ${classes.bgGray}`,\n                size: \"small\",\n                id: \"outlined-basic\",\n                label: \"Email\",\n                variant: \"outlined\",\n                onChange: e => {\n                  setEmail(e.target.value);\n                },\n                value: email,\n                error: !!(signInError && emailErrorMessage)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                id: \"outlined-basic\",\n                children: emailErrorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"mt-26\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true // sx={{marginTop: '20px'}}\n              ,\n              className: `${classes.w100} ${classes.inputStyle} ${classes.bgGray}`,\n              error: !!(signInError && !password),\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-adornment-password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                fullWidth: true,\n                id: \"outlined-adornment-password\",\n                type: showPassword ? 'text' : 'password',\n                value: password,\n                error: !!(signInError && !password),\n                onChange: e => setPassword(e.target.value),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: () => setShowPassword(!showPassword),\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 41\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this),\n                label: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                id: \"outlined-adornment-password\",\n                children: signInError && !password ? 'Password is required' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"mt-50\",\n            children: /*#__PURE__*/_jsxDEV(ButtonBlue, {\n              fullWidth: true,\n              handleClick: login,\n              title: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"error-message\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 30\n          }, this), !isActive && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"error-message\",\n            children: \"Pending Email Verification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"mt-6\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"blue\",\n              onClick: forgotPassword,\n              className: `${classesButton.transparentButton}`,\n              children: [\"Forgot Password?\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-image_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(SignInIllu1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(SignInIllu2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"xoydOgIDic+y5qkiaJvovGJIR/M=\", false, function () {\n  return [useNavigate, useStylesButton];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/auth/loginPage.tsx"],"names":["React","useEffect","useState","Box","FormControl","TextField","FormHelperText","IconButton","OutlinedInput","InputLabel","Visibility","InputAdornment","VisibilityOff","Button","Stack","useNavigate","NavLink","AuthBG","SignInIllu1","SignInIllu2","useStylesButton","MakeStyles","AuthenticationsApi","UseUserContext","Regex","ButtonBlue","PopoverContainer","LoginPage","setUserId","setEmail","email","setAccessToken","setRole","setSignedUp","signedUp","navigate","regEmail","classes","classesButton","isActive","setIsActive","password","setPassword","showPassword","setShowPassword","signInError","setSignInError","emailErrorMessage","setEmailErrorMessage","errorMessage","setErrorMessage","showPopover","setShowPopover","test","handleClosePopover","login","response","logIn","status","data","localStorage","setItem","accessToken","userId","role","message","forgotPassword","handleMouseDownPassword","event","preventDefault","w100","inputStyle","bgGray","e","target","value","transparentButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Box, FormControl, TextField, FormHelperText} from '@mui/material'\nimport IconButton from '@mui/material/IconButton'\nimport OutlinedInput from '@mui/material/OutlinedInput'\nimport InputLabel from '@mui/material/InputLabel'\nimport Visibility from '@mui/icons-material/Visibility'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'\nimport Button from '@mui/material/Button'\nimport Stack from '@mui/material/Stack'\nimport {useNavigate} from 'react-router'\nimport {NavLink} from 'react-router-dom'\nimport AuthBG from '../../assets/images/authBG'\nimport SignInIllu1 from '../../assets/images/signInIllu1'\nimport SignInIllu2 from '../../assets/images/signInIllu2'\nimport useStylesButton from '../../assets/makeStyles/buttons/buttons'\nimport MakeStyles from '../../assets/makeStyles/makeStyles'\nimport AuthenticationsApi from '../../api/authentication'\nimport {UseUserContext} from '../../context/userContext/userContext'\nimport {IUserProps} from '../../context/userContext/userContext.props'\nimport Regex from '../../constants/regex'\nimport ButtonBlue from '../../layouts/buttons/buttonBlue'\nimport PopoverContainer from '../../layouts/popover/popover'\n\nconst LoginPage = () => {\n  const {setUserId, setEmail, email, setAccessToken, setRole, setSignedUp, signedUp} =\n    UseUserContext() as IUserProps\n  const navigate = useNavigate()\n\n  const regEmail = Regex.email\n\n  const classes = MakeStyles()\n  const classesButton = useStylesButton()\n\n  const [isActive, setIsActive] = useState<boolean>(true)\n  const [password, setPassword] = useState<string>('')\n  const [showPassword, setShowPassword] = useState<boolean>(false)\n  const [signInError, setSignInError] = useState<boolean>(false)\n  const [emailErrorMessage, setEmailErrorMessage] = useState<string>('')\n  const [errorMessage, setErrorMessage] = useState<string>('')\n  const [showPopover, setShowPopover] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (signedUp) {\n      setShowPopover(true)\n      setSignedUp(false)\n    }\n  }, [signedUp])\n\n  useEffect(() => {\n    if (signInError && !email) {\n      setEmailErrorMessage('Email is required')\n    } else if (signInError && !regEmail.test(email)) {\n      setEmailErrorMessage('Invalid Email')\n    } else {\n      setEmailErrorMessage('')\n    }\n  }, [email, signInError])\n\n  const handleClosePopover = () => {\n    setShowPopover(false)\n  }\n\n  const login = async () => {\n    if (email && password) {\n      setSignInError(false)\n      const response: any = await AuthenticationsApi.logIn({email, password})\n\n      if (response.status === 200) {\n        setErrorMessage('')\n        setIsActive(response.data.isActive)\n        if (response.data.isActive) {\n          localStorage.setItem('accessToken', response.data.accessToken)\n          localStorage.setItem('userId', response.data.userId)\n          localStorage.setItem('password', password)\n          localStorage.setItem('role', response.data.role)\n          setEmail(response.data.email)\n          setUserId(response.data.userId)\n          setRole(response.data.role)\n          setAccessToken(response.data.accessToken)\n        }\n      } else {\n        setErrorMessage(response.response.data.message)\n      }\n    } else {\n      setSignInError(true)\n    }\n  }\n\n  const forgotPassword = () => {\n    navigate('/forgot-password')\n  }\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n  }\n\n  return (\n    <div className=\"container auth-container\">\n      <div className=\"auth-content_wrapper\">\n        <div className=\"auth-content_bg\">\n          <AuthBG />\n        </div>\n        <div className=\"auth_content\">\n          <Stack direction=\"column\">\n            <Box className=\"auth_title mt-52\">Log in</Box>\n            <Box className=\"auth_text\">Don&apos;t have an account yet?</Box>\n            <Box className=\"mt-4 font-size-16 font-weight-400 line-height-22\">\n              <NavLink to=\"/sign-up\">Sign up now</NavLink>\n            </Box>\n            <PopoverContainer\n              open={showPopover}\n              onClose={handleClosePopover}\n              title=\"Your account is succesfully created.\"\n            />\n            <Box className=\"mt-26\">\n              <FormControl fullWidth error={!!(signInError && emailErrorMessage)}>\n                <TextField\n                  fullWidth\n                  className={`${classes.w100} ${classes.inputStyle} ${classes.bgGray}`}\n                  size=\"small\"\n                  id=\"outlined-basic\"\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  onChange={(e) => {\n                    setEmail(e.target.value)\n                  }}\n                  value={email}\n                  error={!!(signInError && emailErrorMessage)}\n                />\n                <FormHelperText id=\"outlined-basic\">{emailErrorMessage}</FormHelperText>\n              </FormControl>\n            </Box>\n            <Box className=\"mt-26\">\n              <FormControl\n                fullWidth\n                // sx={{marginTop: '20px'}}\n                className={`${classes.w100} ${classes.inputStyle} ${classes.bgGray}`}\n                error={!!(signInError && !password)}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                <OutlinedInput\n                  fullWidth\n                  id=\"outlined-adornment-password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  error={!!(signInError && !password)}\n                  onChange={(e) => setPassword(e.target.value)}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Password\"\n                />\n                <FormHelperText id=\"outlined-adornment-password\">\n                  {signInError && !password ? 'Password is required' : ''}\n                </FormHelperText>\n              </FormControl>\n            </Box>\n            {/*<FormControlLabel*/}\n            {/*  className={`${classesFields.checkboxStyle} auth_checkbox`}*/}\n            {/*  control={<Checkbox />}*/}\n            {/*  label=\"Keep me signed in\"*/}\n            {/*/>*/}\n            <Box className=\"mt-50\">\n              <ButtonBlue fullWidth handleClick={login} title=\"Log in\" />\n            </Box>\n            {errorMessage && <Box className=\"error-message\">{errorMessage}</Box>}\n            {!isActive && <Box className=\"error-message\">Pending Email Verification</Box>}\n            <Box className=\"mt-6\">\n              <Button\n                color=\"blue\"\n                onClick={forgotPassword}\n                className={`${classesButton.transparentButton}`}\n              >\n                Forgot Password?{' '}\n              </Button>\n            </Box>\n          </Stack>\n        </div>\n      </div>\n      <div className=\"auth-image_wrapper\">\n        <Box>\n          <SignInIllu1 />\n        </Box>\n        <Box>\n          <SignInIllu2 />\n        </Box>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n"]},"metadata":{},"sourceType":"module"}