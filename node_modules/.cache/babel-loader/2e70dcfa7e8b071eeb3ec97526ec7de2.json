{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/events/steps/step2.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, Checkbox, FormGroup, ListItemText, OutlinedInput } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport SelectWithInputSearch from '../../../assets/makeStyles/selectWithInputSearch/selectWithInputSearch';\nimport MakeStyles from '../../../assets/makeStyles/makeStyles';\nimport { UseCreateEventContext } from '../../../context/createEventContext/createEventContext';\nimport getEventEvaluatorEvaluateesList from '../../utils/eventEvaluatorEvaluateesUtils'; // import {IEventEvaluators} from '../../../shared/types/events/events'\n// import getUserList from '../../utils/usersUtils'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Step2 = _ref => {\n  _s();\n\n  let {\n    afterStartEvent,\n    clickedNext,\n    setNextStep,\n    view,\n    getEvaluatorEvaluatee,\n    error\n  } = _ref;\n  const classes = MakeStyles();\n  const [searchTermEvaluate] = useState('');\n  const [searchResultsEvaluates] = useState([]);\n  const {\n    checkedIdOfEvaluatee,\n    checkedItemOfEvaluatee,\n    checkedItemOfEvaluator,\n    setCheckedOfEvaluatee,\n    checkedOfEvaluatee,\n    setErrorCheckedOfEvaluatee,\n    errorCheckedOfEvaluatee\n  } = UseCreateEventContext();\n  useEffect(() => {\n    if (clickedNext) {\n      if (!checkedOfEvaluatee.length) {\n        setErrorCheckedOfEvaluatee(true);\n      } else {\n        setErrorCheckedOfEvaluatee(false);\n      }\n    }\n  }, [checkedOfEvaluatee]);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      const updateCheckedOfEvaluatee = !getEvaluatorEvaluatee ? checkedItemOfEvaluator.map(item => checkedItemOfEvaluatee.map(item2 => ({\n        evaluatorId: item.id,\n        ...item2\n      }))) : await Promise.all(checkedItemOfEvaluator.map(async item => getEventEvaluatorEvaluateesList(item)));\n      const mergeObjects = updateCheckedOfEvaluatee.reduce((a, b) => a.concat(b));\n\n      if (checkedOfEvaluatee.length) {\n        const updateMergeObjects = mergeObjects.filter(item => checkedOfEvaluatee.find(item2 => item2.evaluatorId === item.evaluatorId && item2.evaluateeId === item.evaluateeId) && item);\n        setCheckedOfEvaluatee(updateMergeObjects);\n      } else {\n        setCheckedOfEvaluatee(mergeObjects);\n      }\n    })();\n  }, [checkedItemOfEvaluator, checkedItemOfEvaluatee]);\n\n  const handleMenuItemEvaluatee = (evaluatorId, evaluateeId, userName) => {\n    if (checkedOfEvaluatee.find(item => item.evaluateeId === evaluateeId && item.evaluatorId === evaluatorId)) {\n      const removeItem = checkedOfEvaluatee.filter(item => {\n        if (item.evaluateeId === evaluateeId && item.evaluatorId === evaluatorId) {\n          return false;\n        }\n\n        return true;\n      }).map(item => item);\n      setCheckedOfEvaluatee(removeItem);\n    } else {\n      setCheckedOfEvaluatee([...checkedOfEvaluatee, {\n        evaluatorId,\n        evaluateeId,\n        userName\n      }]);\n    }\n  };\n\n  const renderSearchListEvaluates = id => {\n    if (!searchTermEvaluate.length) {\n      return checkedItemOfEvaluatee && checkedItemOfEvaluatee.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n        dense: true,\n        disabled: view,\n        onClick: () => handleMenuItemEvaluatee(id, item.evaluateeId, item.userName),\n        value: item.evaluateeId,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          className: `${classes.checkboxColor}`,\n          color: \"default\",\n          checked: checkedOfEvaluatee === null || checkedOfEvaluatee === void 0 ? void 0 : checkedOfEvaluatee.some(item2 => item2 && item2.evaluateeId === item.evaluateeId && item2.evaluatorId === id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, item.evaluateeId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this));\n    }\n\n    return searchResultsEvaluates.length ? searchResultsEvaluates.map(item => item && /*#__PURE__*/_jsxDEV(MenuItem, {\n      dense: true,\n      onClick: () => handleMenuItemEvaluatee(id, item.evaluateeId, item.userName),\n      value: item.evaluateeId,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        className: `${classes.checkboxColor}`,\n        color: \"default\",\n        checked: checkedIdOfEvaluatee.some(item2 => item2 && item2.evaluateeId === item.evaluateeId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: item.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }, this)]\n    }, item.evaluateeId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n      className: \"w-100 text-center mt-22 mb-22\",\n      children: \"There is not data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleAllCheckedEvaluatee = (value, id) => {\n    if (value) {\n      const checkedOfEvaluatorFilter = checkedItemOfEvaluator.filter(item => item.id === id && item);\n      const updateCheckedOfEvaluatee = checkedOfEvaluatorFilter.map(item => checkedItemOfEvaluatee.map(item2 => ({\n        evaluatorId: item.id,\n        ...item2\n      })));\n      const mergeObjects = updateCheckedOfEvaluatee.reduce((a, b) => a.concat(b));\n      setCheckedOfEvaluatee([...checkedOfEvaluatee.filter(item => mergeObjects.find(item2 => item2.evaluatorId !== item.evaluatorId && item2.evaluateeId !== item.evaluateeId) && item), ...mergeObjects]);\n    } else {\n      const updateCheckedOfEvaluatee = checkedOfEvaluatee.filter(item => item.evaluatorId !== id && item);\n      setCheckedOfEvaluatee([...updateCheckedOfEvaluatee]);\n    }\n  };\n\n  const stopImmediatePropagation = e => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const returnEvaluateesArray = id => {\n    const returnEvaluatees = checkedOfEvaluatee.filter(item => {\n      if (item.evaluatorId === id) {\n        return true;\n      }\n\n      return false;\n    }).map(item => item);\n    return checkedOfEvaluatee.length ? returnEvaluatees.map(item => item.userName) : [];\n  };\n\n  useEffect(() => {\n    if (checkedOfEvaluatee.length) {\n      setNextStep(true);\n    } else {\n      setNextStep(false);\n    }\n  }, [checkedOfEvaluatee]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"width-100 d-flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"create-event-step-2 mt-14 \",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"create-event-body mt-10\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"create-event-column\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            className: \"font-weight-400 font-size-16 line-height-22 color-dark-blue\",\n            children: \"Select evaluatees per evaluator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"choose-evaluation-criteria create-event-body  pb-30\",\n          children: checkedItemOfEvaluator.map(item => /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"choose-evaluation-criteria-group-checkboxes\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"text-field-container width-100 align-center mt-36\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: \"text-field-of-label d-flex justify-center\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"span\",\n                  className: \"text-center font-weight-500  font-size-16 break-word width-70 line-height-22 color-black\",\n                  children: item.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: \"text-field-item\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"d-flex justify-start\",\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    error: errorCheckedOfEvaluatee,\n                    size: \"small\",\n                    className: `${classes.w100}`,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"demo-multiple-checkbox-label\",\n                      children: \"Select\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"demo-multiple-checkbox-label\",\n                      id: \"demo-multiple-checkbox\",\n                      multiple: true,\n                      className: `${classes.bgWhite} select-with-input-search`,\n                      value: returnEvaluateesArray(item.id),\n                      input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                        label: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 34\n                      }, this),\n                      renderValue: selected => selected && selected.join(', '),\n                      MenuProps: SelectWithInputSearch,\n                      disabled: afterStartEvent,\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        className: \"width-100\",\n                        onClickCapture: stopImmediatePropagation\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        className: \"text-field-search-with-icon justify-center\",\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          disabled: view,\n                          onClick: () => handleAllCheckedEvaluatee(true, item.id),\n                          children: \"Check all\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 267,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          disabled: view,\n                          onClick: () => handleAllCheckedEvaluatee(false, item.id),\n                          children: \"Uncheck all\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 27\n                      }, this), renderSearchListEvaluates(item.id)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"color-red mt-20\",\n        children: error && 'Please fill out required fields'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Step2, \"LcgtYAI3X3ubcNixOn/FEMHE0GA=\");\n\n_c = Step2;\nexport default Step2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/events/steps/step2.tsx"],"names":["React","useEffect","useState","Box","Button","Checkbox","FormGroup","ListItemText","OutlinedInput","MenuItem","FormControl","InputLabel","Select","SelectWithInputSearch","MakeStyles","UseCreateEventContext","getEventEvaluatorEvaluateesList","Step2","afterStartEvent","clickedNext","setNextStep","view","getEvaluatorEvaluatee","error","classes","searchTermEvaluate","searchResultsEvaluates","checkedIdOfEvaluatee","checkedItemOfEvaluatee","checkedItemOfEvaluator","setCheckedOfEvaluatee","checkedOfEvaluatee","setErrorCheckedOfEvaluatee","errorCheckedOfEvaluatee","length","updateCheckedOfEvaluatee","map","item","item2","evaluatorId","id","Promise","all","mergeObjects","reduce","a","b","concat","updateMergeObjects","filter","find","evaluateeId","handleMenuItemEvaluatee","userName","removeItem","renderSearchListEvaluates","checkboxColor","some","handleAllCheckedEvaluatee","value","checkedOfEvaluatorFilter","stopImmediatePropagation","e","stopPropagation","preventDefault","returnEvaluateesArray","returnEvaluatees","w100","bgWhite","selected","join"],"mappings":"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","sourcesContent":["import React, {Dispatch, useEffect, useState} from 'react'\nimport {Box, Button, Checkbox, FormGroup, ListItemText, OutlinedInput} from '@mui/material'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport InputLabel from '@mui/material/InputLabel'\nimport Select from '@mui/material/Select'\nimport SelectWithInputSearch from '../../../assets/makeStyles/selectWithInputSearch/selectWithInputSearch'\nimport MakeStyles from '../../../assets/makeStyles/makeStyles'\nimport {UseCreateEventContext} from '../../../context/createEventContext/createEventContext'\nimport {ICreateEventProps} from '../../../context/createEventContext/createEventContext.props'\nimport getEventEvaluatorEvaluateesList from '../../utils/eventEvaluatorEvaluateesUtils'\n// import {IEventEvaluators} from '../../../shared/types/events/events'\n// import getUserList from '../../utils/usersUtils'\n\nconst Step2 = ({\n  afterStartEvent,\n  clickedNext,\n  setNextStep,\n  view,\n  getEvaluatorEvaluatee,\n  error,\n}: {\n  afterStartEvent: boolean\n  clickedNext: boolean\n  setNextStep: Dispatch<React.SetStateAction<boolean>>\n  view: boolean\n  getEvaluatorEvaluatee: boolean\n  error: boolean\n}) => {\n  const classes = MakeStyles()\n\n  const [searchTermEvaluate] = useState('')\n  const [searchResultsEvaluates] = useState<\n    {evaluateeId: number; evaluatorId?: number; userName: string}[]\n  >([])\n\n  const {\n    checkedIdOfEvaluatee,\n    checkedItemOfEvaluatee,\n    checkedItemOfEvaluator,\n    setCheckedOfEvaluatee,\n    checkedOfEvaluatee,\n    setErrorCheckedOfEvaluatee,\n    errorCheckedOfEvaluatee,\n  } = UseCreateEventContext() as ICreateEventProps\n\n  useEffect(() => {\n    if (clickedNext) {\n      if (!checkedOfEvaluatee.length) {\n        setErrorCheckedOfEvaluatee(true)\n      } else {\n        setErrorCheckedOfEvaluatee(false)\n      }\n    }\n  }, [checkedOfEvaluatee])\n\n  useEffect(() => {\n    ;(async () => {\n      const updateCheckedOfEvaluatee = !getEvaluatorEvaluatee\n        ? checkedItemOfEvaluator.map((item) =>\n            checkedItemOfEvaluatee.map((item2) => ({\n              evaluatorId: item.id,\n              ...item2,\n            })),\n          )\n        : await Promise.all(\n            checkedItemOfEvaluator.map(async (item) => getEventEvaluatorEvaluateesList(item)),\n          )\n\n      const mergeObjects = updateCheckedOfEvaluatee.reduce((a, b) => a.concat(b))\n\n      if (checkedOfEvaluatee.length) {\n        const updateMergeObjects = mergeObjects.filter(\n          (item: {evaluatorId: number | undefined; evaluateeId: number}) =>\n            checkedOfEvaluatee.find(\n              (item2) =>\n                item2.evaluatorId === item.evaluatorId && item2.evaluateeId === item.evaluateeId,\n            ) && item,\n        )\n        setCheckedOfEvaluatee(updateMergeObjects)\n      } else {\n        setCheckedOfEvaluatee(mergeObjects)\n      }\n    })()\n  }, [checkedItemOfEvaluator, checkedItemOfEvaluatee])\n\n  const handleMenuItemEvaluatee = (evaluatorId: number, evaluateeId: number, userName: string) => {\n    if (\n      checkedOfEvaluatee.find(\n        (item) => item.evaluateeId === evaluateeId && item.evaluatorId === evaluatorId,\n      )\n    ) {\n      const removeItem = checkedOfEvaluatee\n        .filter((item) => {\n          if (item.evaluateeId === evaluateeId && item.evaluatorId === evaluatorId) {\n            return false\n          }\n          return true\n        })\n        .map((item) => item)\n      setCheckedOfEvaluatee(removeItem)\n    } else {\n      setCheckedOfEvaluatee([...checkedOfEvaluatee, {evaluatorId, evaluateeId, userName}])\n    }\n  }\n\n  const renderSearchListEvaluates = (id: number) => {\n    if (!searchTermEvaluate.length) {\n      return (\n        checkedItemOfEvaluatee &&\n        checkedItemOfEvaluatee.map((item) => (\n          <MenuItem\n            dense\n            disabled={view}\n            key={item.evaluateeId}\n            onClick={() => handleMenuItemEvaluatee(id, item.evaluateeId, item.userName)}\n            value={item.evaluateeId}\n          >\n            <Checkbox\n              className={`${classes.checkboxColor}`}\n              color=\"default\"\n              checked={checkedOfEvaluatee?.some(\n                (item2) =>\n                  item2 && item2.evaluateeId === item.evaluateeId && item2.evaluatorId === id,\n              )}\n            />\n            <ListItemText primary={item.userName} />\n          </MenuItem>\n        ))\n      )\n    }\n\n    return searchResultsEvaluates.length ? (\n      searchResultsEvaluates.map(\n        (item) =>\n          item && (\n            <MenuItem\n              dense\n              key={item.evaluateeId}\n              onClick={() => handleMenuItemEvaluatee(id, item.evaluateeId, item.userName)}\n              value={item.evaluateeId}\n            >\n              <Checkbox\n                className={`${classes.checkboxColor}`}\n                color=\"default\"\n                checked={checkedIdOfEvaluatee.some(\n                  (item2) => item2 && item2.evaluateeId === item.evaluateeId,\n                )}\n              />\n              <ListItemText primary={item.userName} />\n            </MenuItem>\n          ),\n      )\n    ) : (\n      <Box className=\"w-100 text-center mt-22 mb-22\">There is not data</Box>\n    )\n  }\n\n  const handleAllCheckedEvaluatee = (value: boolean, id: number) => {\n    if (value) {\n      const checkedOfEvaluatorFilter = checkedItemOfEvaluator.filter(\n        (item) => item.id === id && item,\n      )\n\n      const updateCheckedOfEvaluatee = checkedOfEvaluatorFilter.map((item) =>\n        checkedItemOfEvaluatee.map((item2) => ({\n          evaluatorId: item.id,\n          ...item2,\n        })),\n      )\n\n      const mergeObjects = updateCheckedOfEvaluatee.reduce((a, b) => a.concat(b))\n      setCheckedOfEvaluatee([\n        ...checkedOfEvaluatee.filter(\n          (item) =>\n            mergeObjects.find(\n              (item2) =>\n                item2.evaluatorId !== item.evaluatorId && item2.evaluateeId !== item.evaluateeId,\n            ) && item,\n        ),\n        ...mergeObjects,\n      ])\n    } else {\n      const updateCheckedOfEvaluatee = checkedOfEvaluatee.filter(\n        (item) => item.evaluatorId !== id && item,\n      )\n\n      setCheckedOfEvaluatee([...updateCheckedOfEvaluatee])\n    }\n  }\n\n  const stopImmediatePropagation = (e: {\n    stopPropagation: () => void\n    preventDefault: () => void\n  }) => {\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  const returnEvaluateesArray = (id: number) => {\n    const returnEvaluatees = checkedOfEvaluatee\n      .filter((item) => {\n        if (item.evaluatorId === id) {\n          return true\n        }\n        return false\n      })\n      .map((item) => item)\n    return checkedOfEvaluatee.length\n      ? returnEvaluatees.map((item: {userName: string}) => item.userName)\n      : []\n  }\n\n  useEffect(() => {\n    if (checkedOfEvaluatee.length) {\n      setNextStep(true)\n    } else {\n      setNextStep(false)\n    }\n  }, [checkedOfEvaluatee])\n\n  return (\n    <Box className=\"width-100 d-flex justify-center\">\n      <Box className=\"create-event-step-2 mt-14 \">\n        <Box className=\"create-event-body mt-10\">\n          <Box className=\"create-event-column\">\n            <Box\n              component=\"span\"\n              className=\"font-weight-400 font-size-16 line-height-22 color-dark-blue\"\n            >\n              Select evaluatees per evaluator\n            </Box>\n          </Box>\n          <Box className=\"choose-evaluation-criteria create-event-body  pb-30\">\n            {checkedItemOfEvaluator.map((item) => (\n              <FormGroup key={item.id} className=\"choose-evaluation-criteria-group-checkboxes\">\n                <Box className=\"text-field-container width-100 align-center mt-36\">\n                  <Box className=\"text-field-of-label d-flex justify-center\">\n                    <Box\n                      component=\"span\"\n                      className=\"text-center font-weight-500  font-size-16 break-word width-70 line-height-22 color-black\"\n                    >\n                      {item.userName}\n                    </Box>\n                  </Box>\n                  <Box className=\"text-field-item\">\n                    <Box className=\"d-flex justify-start\">\n                      <FormControl\n                        error={errorCheckedOfEvaluatee}\n                        size=\"small\"\n                        className={`${classes.w100}`}\n                      >\n                        <InputLabel id=\"demo-multiple-checkbox-label\">Select</InputLabel>\n                        <Select\n                          labelId=\"demo-multiple-checkbox-label\"\n                          id=\"demo-multiple-checkbox\"\n                          multiple\n                          className={`${classes.bgWhite} select-with-input-search`}\n                          value={returnEvaluateesArray(item.id)}\n                          input={<OutlinedInput label=\"Select\" />}\n                          renderValue={(selected) => selected && selected.join(', ')}\n                          MenuProps={SelectWithInputSearch}\n                          disabled={afterStartEvent}\n                        >\n                          <Box className=\"width-100\" onClickCapture={stopImmediatePropagation} />\n                          <Box className=\"text-field-search-with-icon justify-center\">\n                            <Button\n                              disabled={view}\n                              onClick={() => handleAllCheckedEvaluatee(true, item.id)}\n                            >\n                              Check all\n                            </Button>\n                            <Button\n                              disabled={view}\n                              onClick={() => handleAllCheckedEvaluatee(false, item.id)}\n                            >\n                              Uncheck all\n                            </Button>\n                          </Box>\n                          {renderSearchListEvaluates(item.id)}\n                        </Select>\n                      </FormControl>\n                    </Box>\n                  </Box>\n                </Box>\n              </FormGroup>\n            ))}\n          </Box>\n        </Box>\n        <Box className=\"color-red mt-20\">{error && 'Please fill out required fields'}</Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Step2\n"]},"metadata":{},"sourceType":"module"}