{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/myProfile/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, CircularProgress, FormControl, FormHelperText, TextField } from '@mui/material';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Visibility from '@mui/icons-material/Visibility';\nimport Button from '@mui/material/Button';\nimport MakeStyles from '../../assets/makeStyles/makeStyles';\nimport { UseUserContext } from '../../context/userContext/userContext';\nimport UsersApi from '../../api/users';\nimport Regex from '../../constants/regex';\nimport AuthenticationsApi from '../../api/authentication';\nimport ButtonBlue from '../../layouts/buttons/buttonBlue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProfile = () => {\n  _s();\n\n  const classes = MakeStyles();\n  const {\n    userData\n  } = UseUserContext();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [newPassword, setNewPassword] = useState('');\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [showConfirmNewPassword, setShowConfirmNewPassword] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [myProfileError, setMyProfileError] = useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = useState('');\n  const [confirmNewPasswordErrorMessage, setConfirmNewPasswordErrorMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const regEmail = Regex.email;\n  const [showPasswords, setShowPasswords] = useState(false);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleSave = async () => {\n    if (!showPasswords) {\n      if (firstName && lastName && email && regEmail.test(email)) {\n        setIsLoading(true);\n        setMyProfileError(false);\n        const form = new FormData();\n        form.append('FirstName', firstName);\n        form.append('LastName', lastName);\n        form.append('Email', email);\n        const response = await UsersApi.updateMyProfile(form);\n        setIsLoading(false);\n\n        if (response.status === 200) {\n          setSuccess(true);\n          setErrorMessage('');\n        } else {\n          setSuccess(false);\n        }\n      } else {\n        setMyProfileError(true);\n        setSuccess(false);\n        setErrorMessage('');\n      }\n    } else if (newPassword && password && confirmNewPassword && confirmNewPassword === newPassword) {\n      const form = new FormData();\n      form.append('Password', newPassword);\n      const response = await UsersApi.updateMyProfile(form);\n      const form2 = new FormData();\n      form2.append('OldPassword', password);\n      form2.append('Password', newPassword);\n      const response2 = await AuthenticationsApi.changePassword(form2);\n\n      if (response2.status === 200 && response.status === 200) {\n        setSuccess(true);\n        setErrorMessage('');\n        setPassword('');\n        setConfirmNewPassword('');\n        setNewPassword('');\n        setShowPasswords(false);\n        setMyProfileError(false);\n      } else {\n        setErrorMessage(response2.response.data.message);\n      }\n    } else {\n      setMyProfileError(true);\n      setSuccess(false);\n      setErrorMessage('');\n    }\n  };\n\n  useEffect(() => {\n    if (myProfileError && !email) {\n      setEmailErrorMessage('Email is required');\n    } else if (myProfileError && !regEmail.test(email)) {\n      setEmailErrorMessage('Invalid Email');\n    } else {\n      setEmailErrorMessage('');\n    }\n\n    if (myProfileError && !confirmNewPassword) {\n      setConfirmNewPasswordErrorMessage('Confirm Password is required');\n    } else if (myProfileError && confirmNewPassword !== newPassword) {\n      setConfirmNewPasswordErrorMessage('Please make sure passwords match');\n    } else {\n      setConfirmNewPasswordErrorMessage('');\n    }\n  }, [confirmNewPassword, newPassword, password, email, myProfileError]);\n  useEffect(() => {\n    setFirstName(userData === null || userData === void 0 ? void 0 : userData.firstName);\n    setLastName(userData === null || userData === void 0 ? void 0 : userData.lastName);\n    setEmail(userData === null || userData === void 0 ? void 0 : userData.email);\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"page-padding\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"page-heading \",\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"my-profile-container mt-40\",\n        children: [!showPasswords ? /*#__PURE__*/_jsxDEV(Box, {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: `${classes.marginTop26}`,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"outlined-basic\",\n              label: \"First Name\",\n              onChange: e => setFirstName(e.target.value),\n              size: \"small\",\n              value: firstName,\n              variant: \"outlined\",\n              error: myProfileError && !firstName,\n              helperText: myProfileError && !firstName ? 'First Name is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: `${classes.marginTop26}`,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"outlined-basic\",\n              label: \"Last Name\",\n              onChange: e => setLastName(e.target.value),\n              size: \"small\",\n              value: lastName,\n              variant: \"outlined\",\n              error: myProfileError && !lastName,\n              helperText: myProfileError && !lastName ? 'Last Name is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: `${classes.marginTop26}`,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"outlined-basic2\",\n              label: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              size: \"small\",\n              variant: \"outlined\",\n              error: !!(myProfileError && emailErrorMessage),\n              helperText: emailErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          className: `d-flex flex-column ${classes.marginTop26}`,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            error: !!(myProfileError && !password),\n            size: \"small\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-password\",\n              children: \"Old Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-password\",\n              type: showPassword ? 'text' : 'password',\n              value: password,\n              error: !!(myProfileError && !password),\n              onChange: e => setPassword(e.target.value),\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: () => setShowPassword(!showPassword),\n                  onMouseDown: handleMouseDownPassword,\n                  edge: \"end\",\n                  children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this),\n              label: \"Old Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              id: \"outlined-adornment-password\",\n              children: myProfileError && !password ? 'Password is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: `${classes.marginTop26}`,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              error: !!(myProfileError && !newPassword),\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-adornment-password\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                error: !!(myProfileError && !newPassword),\n                id: \"outlined-adornment-password\",\n                type: showNewPassword ? 'text' : 'password',\n                value: newPassword,\n                onChange: e => setNewPassword(e.target.value),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: () => setShowNewPassword(!showNewPassword),\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: showNewPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 46\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this),\n                label: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                id: \"outlined-adornment-password\",\n                children: myProfileError && !newPassword ? 'New Password is required' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: `${classes.marginTop26}`,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              error: !!(myProfileError && confirmNewPasswordErrorMessage),\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-adornment-password\",\n                children: \"Confirm the new password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                id: \"outlined-adornment-password\",\n                type: showConfirmNewPassword ? 'text' : 'password',\n                value: confirmNewPassword,\n                error: !!(myProfileError && confirmNewPasswordErrorMessage),\n                onChange: e => setConfirmNewPassword(e.target.value),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: () => setShowConfirmNewPassword(!showConfirmNewPassword),\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: showConfirmNewPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 70\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this),\n                label: \"Confirm the new password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                id: \"outlined-adornment-repeat-password\",\n                children: myProfileError && confirmNewPasswordErrorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"mt-26\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"blue\",\n            onClick: () => setShowPasswords(!showPasswords),\n            children: !showPasswords ? 'Change Password' : 'Return Back'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n          className: \"mt-20 d-flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.marginTop20,\n          children: /*#__PURE__*/_jsxDEV(ButtonBlue, {\n            handleClick: handleSave,\n            title: \"Save\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 28\n        }, this), success && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"success-message\",\n          children: \"Your user profile has been successfully updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProfile, \"58mNRrEUpDyq9aTby54YV96yZpg=\");\n\n_c = MyProfile;\nexport default MyProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/myProfile/index.tsx"],"names":["React","useEffect","useState","Box","CircularProgress","FormControl","FormHelperText","TextField","InputLabel","OutlinedInput","InputAdornment","IconButton","VisibilityOff","Visibility","Button","MakeStyles","UseUserContext","UsersApi","Regex","AuthenticationsApi","ButtonBlue","MyProfile","classes","userData","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","showPassword","setShowPassword","newPassword","setNewPassword","showNewPassword","setShowNewPassword","confirmNewPassword","setConfirmNewPassword","showConfirmNewPassword","setShowConfirmNewPassword","success","setSuccess","isLoading","setIsLoading","myProfileError","setMyProfileError","emailErrorMessage","setEmailErrorMessage","confirmNewPasswordErrorMessage","setConfirmNewPasswordErrorMessage","errorMessage","setErrorMessage","regEmail","showPasswords","setShowPasswords","handleMouseDownPassword","event","preventDefault","handleSave","test","form","FormData","append","response","updateMyProfile","status","form2","response2","changePassword","data","message","marginTop26","e","target","value","marginTop20"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Box, CircularProgress, FormControl, FormHelperText, TextField} from '@mui/material'\nimport InputLabel from '@mui/material/InputLabel'\nimport OutlinedInput from '@mui/material/OutlinedInput'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport IconButton from '@mui/material/IconButton'\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'\nimport Visibility from '@mui/icons-material/Visibility'\nimport Button from '@mui/material/Button'\nimport MakeStyles from '../../assets/makeStyles/makeStyles'\nimport {UseUserContext} from '../../context/userContext/userContext'\nimport {IUserProps} from '../../context/userContext/userContext.props'\nimport UsersApi from '../../api/users'\nimport Regex from '../../constants/regex'\nimport AuthenticationsApi from '../../api/authentication'\nimport ButtonBlue from '../../layouts/buttons/buttonBlue'\n\nconst MyProfile = () => {\n  const classes = MakeStyles()\n  const {userData} = UseUserContext() as IUserProps\n  const [firstName, setFirstName] = useState<string | undefined | Blob>('')\n  const [lastName, setLastName] = useState<string | undefined>('')\n  const [email, setEmail] = useState<string | undefined>('')\n  const [password, setPassword] = useState<string>('')\n  const [showPassword, setShowPassword] = useState<boolean>(false)\n  const [newPassword, setNewPassword] = useState<string>('')\n  const [showNewPassword, setShowNewPassword] = useState<boolean>(false)\n  const [confirmNewPassword, setConfirmNewPassword] = useState<string>('')\n  const [showConfirmNewPassword, setShowConfirmNewPassword] = useState<boolean>(false)\n  const [success, setSuccess] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [myProfileError, setMyProfileError] = useState<boolean>(false)\n  const [emailErrorMessage, setEmailErrorMessage] = useState<string>('')\n  const [confirmNewPasswordErrorMessage, setConfirmNewPasswordErrorMessage] = useState<string>('')\n  const [errorMessage, setErrorMessage] = useState<string>('')\n  const regEmail = Regex.email\n  const [showPasswords, setShowPasswords] = useState<boolean>(false)\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n  }\n\n  const handleSave = async () => {\n    if (!showPasswords) {\n      if (firstName && lastName && email && regEmail.test(email as string)) {\n        setIsLoading(true)\n        setMyProfileError(false)\n        const form = new FormData()\n\n        form.append('FirstName', firstName)\n        form.append('LastName', lastName)\n        form.append('Email', email as string)\n\n        const response = await UsersApi.updateMyProfile(form)\n        setIsLoading(false)\n        if (response.status === 200) {\n          setSuccess(true)\n          setErrorMessage('')\n        } else {\n          setSuccess(false)\n        }\n      } else {\n        setMyProfileError(true)\n        setSuccess(false)\n        setErrorMessage('')\n      }\n    } else if (\n      newPassword &&\n      password &&\n      confirmNewPassword &&\n      confirmNewPassword === newPassword\n    ) {\n      const form = new FormData()\n\n      form.append('Password', newPassword)\n      const response = await UsersApi.updateMyProfile(form)\n\n      const form2 = new FormData()\n      form2.append('OldPassword', password)\n      form2.append('Password', newPassword)\n      const response2: any = await AuthenticationsApi.changePassword(form2)\n\n      if (response2.status === 200 && response.status === 200) {\n        setSuccess(true)\n        setErrorMessage('')\n        setPassword('')\n        setConfirmNewPassword('')\n        setNewPassword('')\n        setShowPasswords(false)\n        setMyProfileError(false)\n      } else {\n        setErrorMessage(response2.response.data.message)\n      }\n    } else {\n      setMyProfileError(true)\n      setSuccess(false)\n      setErrorMessage('')\n    }\n  }\n\n  useEffect(() => {\n    if (myProfileError && !email) {\n      setEmailErrorMessage('Email is required')\n    } else if (myProfileError && !regEmail.test(email as string)) {\n      setEmailErrorMessage('Invalid Email')\n    } else {\n      setEmailErrorMessage('')\n    }\n\n    if (myProfileError && !confirmNewPassword) {\n      setConfirmNewPasswordErrorMessage('Confirm Password is required')\n    } else if (myProfileError && confirmNewPassword !== newPassword) {\n      setConfirmNewPasswordErrorMessage('Please make sure passwords match')\n    } else {\n      setConfirmNewPasswordErrorMessage('')\n    }\n  }, [confirmNewPassword, newPassword, password, email, myProfileError])\n\n  useEffect(() => {\n    setFirstName(userData?.firstName)\n    setLastName(userData?.lastName)\n    setEmail(userData?.email)\n  }, [userData])\n\n  return (\n    <Box className=\"page-container\">\n      <Box className=\"page-padding\">\n        <Box className=\"page-heading \">My Profile</Box>\n        <Box className=\"my-profile-container mt-40\">\n          {!showPasswords ? (\n            <Box className=\"d-flex flex-column\">\n              <Box className={`${classes.marginTop26}`}>\n                <TextField\n                  fullWidth\n                  id=\"outlined-basic\"\n                  label=\"First Name\"\n                  onChange={(e) => setFirstName(e.target.value)}\n                  size=\"small\"\n                  value={firstName}\n                  variant=\"outlined\"\n                  error={myProfileError && !firstName}\n                  helperText={myProfileError && !firstName ? 'First Name is required' : ''}\n                />\n              </Box>\n              <Box className={`${classes.marginTop26}`}>\n                <TextField\n                  fullWidth\n                  id=\"outlined-basic\"\n                  label=\"Last Name\"\n                  onChange={(e) => setLastName(e.target.value)}\n                  size=\"small\"\n                  value={lastName}\n                  variant=\"outlined\"\n                  error={myProfileError && !lastName}\n                  helperText={myProfileError && !lastName ? 'Last Name is required' : ''}\n                />\n              </Box>\n              <Box className={`${classes.marginTop26}`}>\n                <TextField\n                  fullWidth\n                  id=\"outlined-basic2\"\n                  label=\"Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  error={!!(myProfileError && emailErrorMessage)}\n                  helperText={emailErrorMessage}\n                />\n              </Box>\n            </Box>\n          ) : (\n            <Box className={`d-flex flex-column ${classes.marginTop26}`}>\n              <FormControl\n                fullWidth\n                error={!!(myProfileError && !password)}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                <InputLabel htmlFor=\"outlined-adornment-password\">Old Password</InputLabel>\n                <OutlinedInput\n                  id=\"outlined-adornment-password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  error={!!(myProfileError && !password)}\n                  onChange={(e) => setPassword(e.target.value)}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Old Password\"\n                />\n                <FormHelperText id=\"outlined-adornment-password\">\n                  {myProfileError && !password ? 'Password is required' : ''}\n                </FormHelperText>\n              </FormControl>\n              <Box className={`${classes.marginTop26}`}>\n                <FormControl\n                  fullWidth\n                  error={!!(myProfileError && !newPassword)}\n                  size=\"small\"\n                  variant=\"outlined\"\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-password\">New Password</InputLabel>\n                  <OutlinedInput\n                    error={!!(myProfileError && !newPassword)}\n                    id=\"outlined-adornment-password\"\n                    type={showNewPassword ? 'text' : 'password'}\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={() => setShowNewPassword(!showNewPassword)}\n                          onMouseDown={handleMouseDownPassword}\n                          edge=\"end\"\n                        >\n                          {showNewPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                    label=\"New Password\"\n                  />\n                  <FormHelperText id=\"outlined-adornment-password\">\n                    {myProfileError && !newPassword ? 'New Password is required' : ''}\n                  </FormHelperText>\n                </FormControl>\n              </Box>\n              <Box className={`${classes.marginTop26}`}>\n                <FormControl\n                  fullWidth\n                  error={!!(myProfileError && confirmNewPasswordErrorMessage)}\n                  size=\"small\"\n                  variant=\"outlined\"\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\n                    Confirm the new password\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-password\"\n                    type={showConfirmNewPassword ? 'text' : 'password'}\n                    value={confirmNewPassword}\n                    error={!!(myProfileError && confirmNewPasswordErrorMessage)}\n                    onChange={(e) => setConfirmNewPassword(e.target.value)}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={() => setShowConfirmNewPassword(!showConfirmNewPassword)}\n                          onMouseDown={handleMouseDownPassword}\n                          edge=\"end\"\n                        >\n                          {showConfirmNewPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                    label=\"Confirm the new password\"\n                  />\n                  <FormHelperText id=\"outlined-adornment-repeat-password\">\n                    {myProfileError && confirmNewPasswordErrorMessage}\n                  </FormHelperText>\n                </FormControl>\n              </Box>\n            </Box>\n          )}\n          <Box className=\"mt-26\">\n            <Button color=\"blue\" onClick={() => setShowPasswords(!showPasswords)}>\n              {!showPasswords ? 'Change Password' : 'Return Back'}\n            </Button>\n          </Box>\n          {isLoading ? (\n            <Box className=\"mt-20 d-flex justify-center\">\n              <CircularProgress />\n            </Box>\n          ) : (\n            <Box className={classes.marginTop20}>\n              <ButtonBlue handleClick={handleSave} title=\"Save\" fullWidth />\n            </Box>\n          )}\n          {errorMessage && <Box className=\"error-message\">{errorMessage}</Box>}\n          {success && (\n            <Box className=\"success-message\">Your user profile has been successfully updated</Box>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default MyProfile\n"]},"metadata":{},"sourceType":"module"}