{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/events/eventCreate.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, CircularProgress } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useLocation, useNavigate } from 'react-router';\nimport moment from 'moment';\nimport uuid from 'react-uuid';\nimport StepperPage from '../../layouts/stepper';\nimport SuccessModal from '../../layouts/modal/successModal';\nimport Step1 from './steps/step1';\nimport Step3 from './steps/step3';\nimport MakeStyles from '../../assets/makeStyles/makeStyles';\nimport EventsApi from '../../api/events';\nimport { UseCreateEventContext } from '../../context/createEventContext/createEventContext';\nimport { UseUserContext } from '../../context/userContext/userContext';\nimport ErrorModal from '../../layouts/modal/errorModal';\nimport QuestionApi from '../../api/question';\nimport getUserList from '../utils/usersUtils';\nimport Step2 from './steps/step2';\nimport Step4 from './steps/step4';\nimport ScoringsApi from '../../api/scoring';\nimport LeftIcon from '../../assets/images/Icons/leftIcon';\nimport BonusesApi from '../../api/bonus';\nimport Step5 from './steps/step5';\nimport ButtonBlue from '../../layouts/buttons/buttonBlue';\nimport ButtonTranparentBorder from '../../layouts/buttons/buttonTransparentBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventCreate = () => {\n  _s();\n\n  const classes = MakeStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const stateLocation = location.state;\n  const {\n    eventTitle,\n    startDate,\n    endDate,\n    ratePointFrom,\n    setCustomNotesQuestion,\n    ratePointTo,\n    setRatePointFrom,\n    setRatePointTo,\n    setStartDate,\n    setEndDate,\n    questions,\n    customNotesQuestion,\n    setEventEvaluatee,\n    setEventEvaluator,\n    setEventTitle,\n    checkedIdOfEvaluator,\n    checkedIdOfEvaluatee,\n    setCheckedIdOfEvaluator,\n    setCheckedIdOfEvaluatee,\n    setCheckedItemOfEvaluator,\n    setCheckedItemOfEvaluatee,\n    setCheckedOfEvaluatee,\n    setQuestionsId,\n    setQuestions,\n    setWithScores,\n    withScores,\n    checkedOfEvaluatee,\n    buttonsOfValue,\n    setButtonsOfValue,\n    rangesOfvalue,\n    setRangesOfValue,\n    setQuestionGroupTitleIsDefault,\n    setQuestionGroupTitle,\n    setRangeMin,\n    setRangeMax,\n    rangeMax,\n    rangeMin,\n    setErrorDate,\n    setErrorEventTitle,\n    setErrorEvaluators,\n    setErrorEvaluatees,\n    setErrorCheckedOfEvaluatee,\n    eventEvaluator,\n    eventEvaluatee\n  } = UseCreateEventContext();\n  const {\n    userId,\n    setUserId\n  } = UseUserContext();\n  const [view, setView] = useState(false);\n  const [clone, setClone] = useState(false);\n  const [getEvaluatorEvaluatee, setGetEvaluatorEvaluatee] = useState(false);\n  const [nextStep, setNextStep] = useState(false);\n  const [fullQuestions, setFullQuestions] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [error, setError] = useState(false);\n  const [openModalError, setOpenModalError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isQuestionsLoading, setIsQuestionsLoading] = useState(false);\n  const [steps, setSteps] = useState([1, 2, 3, 4, 5, 6]);\n  const [activeStep, setActiveStep] = useState(0);\n  const [completed, setCompleted] = useState({});\n  const [clickedNext, setClickedNext] = useState(false);\n  const [openModalSuccess, setOpenModalSuccess] = useState(false);\n  const [afterStartEvent, setAfterStartEvent] = useState(false);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      setCheckedOfEvaluatee([]);\n      setQuestionsId([]);\n      setQuestions([]);\n      setActiveStep(0);\n\n      if (!stateLocation.createNewEvent) {\n        await getEventList();\n        setSteps([1, 2, 3, 4, 5]);\n\n        if (stateLocation.clone) {\n          setView(false);\n          setStartDate('');\n          setEndDate('');\n          setClone(true);\n          setGetEvaluatorEvaluatee(true);\n        } else if (stateLocation.view) {\n          setView(true);\n          setClone(false);\n          setGetEvaluatorEvaluatee(true);\n        } else if (stateLocation.edit) {\n          setClone(false);\n          setGetEvaluatorEvaluatee(true);\n        }\n      } else {\n        setSteps([1, 2, 3, 4, 5, 6]);\n        setRatePointFrom('1');\n        setRatePointTo('10');\n        setStartDate('');\n        setEndDate('');\n        setEventTitle('');\n        setGetEvaluatorEvaluatee(false);\n        setCustomNotesQuestion([{\n          id: 1,\n          questionName: 'Positive Feedback',\n          checked: true\n        }, {\n          id: 2,\n          questionName: 'Things To Improve',\n          checked: true\n        }]);\n        setEventEvaluatee([]);\n        setEventEvaluator([]);\n        setCheckedIdOfEvaluator([]);\n        setCheckedIdOfEvaluatee([]);\n        setCheckedItemOfEvaluator([]);\n        setCheckedItemOfEvaluatee([]);\n        setCompleted([]);\n        setView(false);\n        setButtonsOfValue([{\n          id: uuid(),\n          scoringName: 'Good',\n          scoringValue: '1',\n          edit: false\n        }, {\n          id: uuid(),\n          scoringName: 'Very Good',\n          scoringValue: '2',\n          edit: false\n        }, {\n          id: uuid(),\n          scoringName: 'Excellent',\n          scoringValue: '3',\n          edit: false\n        }]);\n        setRangesOfValue([{\n          id: uuid(),\n          bonusRangeFrom: '0',\n          bonusRangeTo: '10',\n          bonusPercentage: '0',\n          bonusRangeName: 'Good'\n        }, {\n          id: uuid(),\n          bonusRangeFrom: '0',\n          bonusRangeTo: '15',\n          bonusPercentage: '20',\n          bonusRangeName: 'Very Good'\n        }, {\n          id: uuid(),\n          bonusRangeFrom: '0',\n          bonusRangeTo: '5',\n          bonusPercentage: '35',\n          bonusRangeName: 'Normal'\n        }]);\n        setClone(false);\n      }\n    })();\n  }, [stateLocation]);\n  useEffect(() => {\n    if (!userId) {\n      setUserId(Number(localStorage.userId));\n    }\n  }, [userId]);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      const response = await QuestionApi.getQuestionsGroups();\n      setQuestionGroupTitle(response.data.map(item => item.applyDefault && item));\n      setQuestionGroupTitleIsDefault(response.data.filter(item => !item.applyDefault).map(item => item));\n    })();\n  }, []);\n\n  const getEventList = async () => {\n    setIsLoading(true);\n\n    try {\n      const result = await EventsApi.getEvent(stateLocation.id);\n      const result2 = await ScoringsApi.getScoringList(stateLocation.id);\n      const result3 = await BonusesApi.getEventBonuses(stateLocation.id);\n      const result4 = await BonusesApi.getEventSumEvaluation(stateLocation.id);\n      setRangeMin(result4.data.sumMin);\n      setRangeMax(result4.data.sumMax);\n\n      if (stateLocation.edit) {\n        if (moment(result.data.startDate).isBefore()) {\n          setAfterStartEvent(true);\n        } else {\n          setAfterStartEvent(false);\n        }\n      }\n\n      setRatePointFrom(result.data.ratePointFrom);\n      setRatePointTo(result.data.ratePointTo);\n      setStartDate(result.data.startDate);\n      setButtonsOfValue(result2.data.map(item => ({ ...item,\n        edit: false\n      })));\n      setRangesOfValue(result3.data);\n      setEndDate(result.data.dueDate);\n      setWithScores(result.data.evaluationType === 1);\n      setEventTitle(result.data.eventTitle);\n      setQuestionsId(result.data.questionId);\n      setCustomNotesQuestion([{\n        id: 1,\n        questionName: 'Positive Feedback',\n        checked: result.data.isPositiveFeedbacks\n      }, {\n        id: 2,\n        questionName: 'Things To Improve',\n        checked: result.data.isNegativeFeedbacks\n      }]);\n\n      if (result.data.eventEvaluators.length) {\n        const updateEventEvaluator = await Promise.all(result.data.eventEvaluators.map(async item => getUserList(item)));\n        const updateCheckedIdOfEvaluator = result.data.eventEvaluators.filter(item => {\n          if (item.userId) {\n            return true;\n          }\n\n          return false;\n        }).map(item => ({\n          evaluatorId: item.userId\n        }));\n        setCheckedItemOfEvaluator(updateEventEvaluator);\n        setCheckedIdOfEvaluator(updateCheckedIdOfEvaluator);\n      }\n\n      const getQuestions = await QuestionApi.getQuestionsList();\n      setFullQuestions(getQuestions.data);\n\n      if (result.data.eventEvaluatees.length) {\n        const updateEventEvaluatee = await Promise.all(result.data.eventEvaluatees.map(async item => getUserList(item)));\n        const newEventEvaluatee = updateEventEvaluatee.map(item => ({\n          evaluateeId: item.id,\n          userName: item.userName\n        }));\n        const updateCheckedIdOfEvaluatee = result.data.eventEvaluatees.filter(item => {\n          if (item.userId) {\n            return true;\n          }\n\n          return false;\n        }).map(item => ({\n          evaluateeId: item.userId\n        }));\n        setCheckedItemOfEvaluatee(newEventEvaluatee);\n        setCheckedIdOfEvaluatee(updateCheckedIdOfEvaluatee);\n      }\n\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e, 'error');\n    }\n\n    setIsLoading(false);\n  };\n\n  const completedSteps = async () => {\n    if (nextStep) {\n      setError(false);\n      const questionsIdPost = questions.map(item => ({\n        questionId: item.id\n      }));\n\n      try {\n        setIsLoading(true);\n        const newArrayEvalautorEvaluatees = [];\n        checkedOfEvaluatee.forEach(item => {\n          newArrayEvalautorEvaluatees.push({\n            evaluatorId: item.evaluatorId,\n            evaluateeId: item.evaluateeId\n          });\n        });\n        const data = {\n          eventTitle,\n          createdDate: moment(),\n          startDate: moment(startDate).hours(15).format(),\n          dueDate: startDate === endDate ? moment(endDate).endOf('day').format() : moment(endDate).format(),\n          isPublish: true,\n          isDelete: false,\n          evaluationType: withScores ? 1 : 0,\n          isPositiveFeedbacks: customNotesQuestion[0].checked,\n          isNegativeFeedbacks: customNotesQuestion[1].checked,\n          questions: questionsIdPost,\n          evaluators: checkedIdOfEvaluator.map(item => ({\n            userId: item.evaluatorId\n          })),\n          evaluatees: checkedIdOfEvaluatee.map(item => ({\n            userId: item.evaluateeId\n          })),\n          ...(withScores && {\n            ratePointFrom\n          }),\n          ...(withScores && {\n            ratePointTo\n          })\n        };\n        const response = await EventsApi.createEvent(data);\n\n        if (response.status === 200) {\n          const response2 = await EventsApi.createEventEvaluatorEvaluatees({\n            eventId: response.data.id,\n            evaluatorEvaluateeArr: newArrayEvalautorEvaluatees\n          });\n          const scoringsData = buttonsOfValue.map(item => ({\n            scoringValue: item.scoringValue,\n            scoringName: item.scoringName,\n            eventId: response.data.id\n          }));\n          const response3 = await ScoringsApi.createScoring({\n            eventId: response.data.id,\n            scoringArr: scoringsData\n          });\n          const response4 = await BonusesApi.createBonus({\n            eventId: response.data.id,\n            bonusArr: [...rangesOfvalue.map(item => ({\n              eventId: response.data.id,\n              bonusPercentage: Number(item.bonusPercentage),\n              bonusRangeFrom: Number(item.bonusRangeFrom),\n              bonusRangeTo: Number(item.bonusRangeTo),\n              bonusRangeName: item.bonusRangeName\n            }))]\n          });\n\n          if (response2.status === 200 && response3.status === 200 && response4.status === 200) {\n            setOpenModalSuccess(true);\n            setStartDate('');\n            setEndDate('');\n            setEventEvaluatee([]);\n            setEventEvaluator([]);\n            setCheckedIdOfEvaluatee([]);\n            setCheckedIdOfEvaluator([]);\n            setEventTitle('');\n          }\n        } else {\n          setOpenModalError(true);\n        }\n\n        setIsLoading(false);\n      } catch (e) {\n        setIsLoading(false);\n        console.log(e, 'error');\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setError(true);\n    }\n  };\n\n  const handleSave = async () => {\n    if (nextStep) {\n      setError(false);\n      setIsLoading(true);\n      const questionsIdPost = questions.map(item => ({\n        questionId: item.id\n      }));\n      const data = {\n        eventTitle,\n        createdDate: moment(),\n        ratePointFrom,\n        ratePointTo,\n        startDate: moment(startDate).format(),\n        dueDate: moment(endDate).format(),\n        isPublish: true,\n        isDelete: false,\n        evaluationType: withScores ? 1 : 0,\n        isPositiveFeedbacks: customNotesQuestion[0].checked,\n        isNegativeFeedbacks: customNotesQuestion[1].checked,\n        questions: questionsIdPost,\n        evaluators: checkedIdOfEvaluator.map(item => ({\n          userId: item.evaluatorId\n        })),\n        evaluatees: checkedIdOfEvaluatee.map(item => ({\n          userId: item.evaluateeId\n        }))\n      };\n\n      try {\n        const response = await EventsApi.updateEvent(stateLocation.id, data);\n\n        if (response.status === 200) {\n          const scoringData = buttonsOfValue.map(item => ({\n            scoringValue: item.scoringValue,\n            scoringName: item.scoringName,\n            eventId: response.data.id\n          }));\n          const newArrayEvalautorEvaluatees = [];\n          checkedOfEvaluatee.forEach(item => {\n            newArrayEvalautorEvaluatees.push({\n              evaluatorId: item.evaluatorId,\n              evaluateeId: item.evaluateeId\n            });\n          });\n          const response2 = await ScoringsApi.updateScoring(stateLocation.id, {\n            eventId: stateLocation.id,\n            scoringArr: scoringData\n          });\n          const response3 = await EventsApi.updateEventEvaluatorEvaluatees({\n            eventId: stateLocation.id,\n            evaluatorEvaluateeArr: newArrayEvalautorEvaluatees\n          });\n          const response4 = await BonusesApi.updateBonus(stateLocation.id, {\n            eventId: stateLocation.id,\n            bonusArr: [...rangesOfvalue.map(item => ({\n              eventId: stateLocation.id,\n              bonusPercentage: item.bonusPercentage,\n              bonusRangeFrom: item.bonusRangeFrom,\n              bonusRangeTo: item.bonusRangeTo,\n              bonusRangeName: item.bonusRangeName\n            }))]\n          });\n\n          if (response2.status === 200 || response3.status === 200 || response4.status === 200) {\n            setOpenModalSuccess(true);\n            setStartDate('');\n            setEndDate('');\n            setEventEvaluatee([]);\n            setEventEvaluator([]);\n            setCheckedIdOfEvaluatee([]);\n            setCheckedIdOfEvaluator([]);\n            setEventTitle('');\n          }\n        } else {\n          setOpenModalError(true);\n          setErrorMessage(response.response.data.message);\n        }\n\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setError(true);\n    }\n  };\n\n  const handleNext = () => {\n    setClickedNext(true);\n\n    if (nextStep) {\n      setError(false);\n      const newCompleted = completed;\n      newCompleted[activeStep] = true;\n      setCompleted(newCompleted);\n      setActiveStep(activeStep + 1);\n    } else {\n      setError(true);\n    }\n  };\n\n  useEffect(() => {\n    if (clickedNext) {\n      if (!startDate && !endDate) {\n        setErrorDate(true);\n      } else {\n        setErrorDate(false);\n      }\n\n      if (!eventTitle) {\n        setErrorEventTitle(true);\n      } else {\n        setErrorEventTitle(false);\n      }\n\n      if (!eventEvaluator.length) {\n        setErrorEvaluators(true);\n      } else {\n        setErrorEvaluators(false);\n      }\n\n      if (!eventEvaluatee.length) {\n        setErrorEvaluatees(true);\n      } else {\n        setErrorEvaluatees(false);\n      }\n    }\n  }, [startDate, clickedNext, endDate, eventTitle, eventEvaluator, eventEvaluatee]);\n\n  const handleBack = () => {\n    setClickedNext(false);\n    setErrorEvaluatees(false);\n    setErrorEvaluators(false);\n    setErrorEventTitle(false);\n    setErrorDate(false);\n    setNextStep(true);\n    setError(false);\n    const newCompleted = completed;\n    newCompleted[activeStep] = false;\n    setCompleted(newCompleted);\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleCloseSuccessModal = () => {\n    setOpenModalSuccess(false);\n    navigate('/events');\n  };\n\n  const handleCloseErrorModal = () => setOpenModalError(false);\n\n  const handleWithScores = () => {\n    setErrorDate(false);\n    setErrorEventTitle(false);\n    setErrorEvaluators(false);\n    setErrorEvaluatees(false);\n    setErrorCheckedOfEvaluatee(false);\n    setClickedNext(false);\n    setWithScores(true);\n    setError(false);\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleWithoutScores = () => {\n    setErrorDate(false);\n    setErrorEventTitle(false);\n    setErrorEvaluators(false);\n    setErrorEvaluatees(false);\n    setErrorCheckedOfEvaluatee(false);\n    setClickedNext(false);\n    setWithScores(false);\n    setError(false);\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    setActiveStep(activeStep + 1);\n  };\n\n  const renderBackButton = () => /*#__PURE__*/_jsxDEV(Box, {\n    className: `${activeStep === 0 && classes.displayNone} mr-46`,\n    children: /*#__PURE__*/_jsxDEV(ButtonTranparentBorder, {\n      handleClick: handleBack,\n      title: \"Back\",\n      width: \"width150\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 594,\n    columnNumber: 5\n  }, this);\n\n  const renderSaveButton = () => {\n    if (!clone && !view && !stateLocation.createNewEvent && activeStep + 1 === steps.length) {\n      return /*#__PURE__*/_jsxDEV(ButtonBlue, {\n        handleClick: handleSave,\n        title: \"SAVE\",\n        width: \"width150\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderPublishButton = () => /*#__PURE__*/_jsxDEV(ButtonBlue, {\n    handleClick: completedSteps,\n    title: \"Publish\",\n    width: \"width150\",\n    size: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 605,\n    columnNumber: 5\n  }, this);\n\n  const renderNextButton = () => {\n    if (isLoading || isQuestionsLoading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: activeStep >= steps.length - 5 && activeStep !== steps.length - 1 && /*#__PURE__*/_jsxDEV(ButtonBlue, {\n        handleClick: handleNext,\n        width: \"width150\",\n        title: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    if (stateLocation.id) {\n      const updatedRangesOfValue = rangesOfvalue.map(item => ({ ...item,\n        bonusRangeTo: rangeMax,\n        bonusRangeFrom: rangeMin\n      }));\n      setRangesOfValue(updatedRangesOfValue);\n    } else {\n      const minCount = questions.reduce((first, second) => first + Number(second.coefficient) * Number(ratePointFrom), 0);\n      const maxCount = questions.reduce((first, second) => first + Number(second.coefficient) * Number(ratePointTo), 0);\n      setRangeMin(minCount.toString());\n      setRangeMax(maxCount.toString());\n      const updatedRangesOfValue = rangesOfvalue.map(item => ({ ...item,\n        bonusRangeTo: maxCount.toString(),\n        bonusRangeFrom: minCount.toString()\n      }));\n      setRangesOfValue(updatedRangesOfValue);\n    }\n  }, [ratePointTo, ratePointFrom, questions, rangeMax, rangeMin]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"create-event-page\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"font-size-16 d-flex align-center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"text-decoration-none align-center color-black d-flex font-weight-400\",\n        to: \"/events\",\n        children: [/*#__PURE__*/_jsxDEV(LeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"font-weight-700 ml-16 font-size-24 heading\",\n          children: \"New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"mt-30 pb-20\",\n      children: [/*#__PURE__*/_jsxDEV(StepperPage, {\n        steps: steps,\n        completed: completed,\n        activeStep: activeStep,\n        stepperAllActive: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mt-50\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [stateLocation.createNewEvent && activeStep === 0 && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"select-scores-container align-center font-size-14 mt-40\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: `${classes.marginRight20}`,\n              children: /*#__PURE__*/_jsxDEV(ButtonBlue, {\n                handleClick: handleWithScores,\n                width: \"width190\",\n                padding: \"padding34\",\n                title: \"Create event with scores\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: `${classes.marginRight20}`,\n              children: /*#__PURE__*/_jsxDEV(ButtonBlue, {\n                handleClick: handleWithoutScores,\n                width: \"width190\",\n                title: \"Create event without scores\",\n                padding: \"padding34\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), (stateLocation.createNewEvent ? activeStep === 1 : activeStep === 0) && /*#__PURE__*/_jsxDEV(Box, {\n            className: `${classes.creatEventContainer}`,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"d-flex justify-center\",\n              children: /*#__PURE__*/_jsxDEV(Step1, {\n                afterStartEvent: afterStartEvent,\n                setNextStep: setNextStep,\n                error: error,\n                view: view\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), (stateLocation.createNewEvent ? activeStep === 2 : activeStep === 1) && /*#__PURE__*/_jsxDEV(Box, {\n            className: `${classes.creatEventContainer}`,\n            children: /*#__PURE__*/_jsxDEV(Step2, {\n              clickedNext: clickedNext,\n              afterStartEvent: afterStartEvent,\n              error: error,\n              setNextStep: setNextStep,\n              getEvaluatorEvaluatee: getEvaluatorEvaluatee,\n              view: view\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this), (stateLocation.createNewEvent ? activeStep === 3 : activeStep === 2) && /*#__PURE__*/_jsxDEV(Step3, {\n            afterStartEvent: afterStartEvent,\n            error: error,\n            isQuestionsLoading: isQuestionsLoading,\n            setIsQuestionsLoading: setIsQuestionsLoading,\n            fullQuestions: fullQuestions,\n            view: view,\n            setNextStep: setNextStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this), (stateLocation.createNewEvent ? activeStep === 4 : activeStep === 3) && /*#__PURE__*/_jsxDEV(Step4, {\n            setNextStep: setNextStep,\n            error: error,\n            view: view\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 15\n          }, this), (stateLocation.createNewEvent ? activeStep === 5 : activeStep === 4) && /*#__PURE__*/_jsxDEV(Step5, {\n            setNextStep: setNextStep,\n            error: error,\n            view: view\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"create-event-buttons justify-center mt-60\",\n          children: [renderBackButton(), renderNextButton(), /*#__PURE__*/_jsxDEV(Box, {\n            children: [!isLoading && renderSaveButton(), !isLoading && clone && activeStep + 1 === steps.length && renderPublishButton(), !isLoading && !clone && stateLocation.createNewEvent && activeStep + 1 === steps.length && renderPublishButton()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuccessModal, {\n      openModal: openModalSuccess,\n      closeModal: handleCloseSuccessModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorModal, {\n      openModal: openModalError,\n      errorMessage: errorMessage,\n      closeModal: handleCloseErrorModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 650,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventCreate, \"v4tujgfcVRuRUDsCk+oQ+k3pq/g=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = EventCreate;\nexport default EventCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventCreate\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/events/eventCreate.tsx"],"names":["React","useEffect","useState","Box","CircularProgress","Link","useLocation","useNavigate","moment","uuid","StepperPage","SuccessModal","Step1","Step3","MakeStyles","EventsApi","UseCreateEventContext","UseUserContext","ErrorModal","QuestionApi","getUserList","Step2","Step4","ScoringsApi","LeftIcon","BonusesApi","Step5","ButtonBlue","ButtonTranparentBorder","EventCreate","classes","location","navigate","stateLocation","state","eventTitle","startDate","endDate","ratePointFrom","setCustomNotesQuestion","ratePointTo","setRatePointFrom","setRatePointTo","setStartDate","setEndDate","questions","customNotesQuestion","setEventEvaluatee","setEventEvaluator","setEventTitle","checkedIdOfEvaluator","checkedIdOfEvaluatee","setCheckedIdOfEvaluator","setCheckedIdOfEvaluatee","setCheckedItemOfEvaluator","setCheckedItemOfEvaluatee","setCheckedOfEvaluatee","setQuestionsId","setQuestions","setWithScores","withScores","checkedOfEvaluatee","buttonsOfValue","setButtonsOfValue","rangesOfvalue","setRangesOfValue","setQuestionGroupTitleIsDefault","setQuestionGroupTitle","setRangeMin","setRangeMax","rangeMax","rangeMin","setErrorDate","setErrorEventTitle","setErrorEvaluators","setErrorEvaluatees","setErrorCheckedOfEvaluatee","eventEvaluator","eventEvaluatee","userId","setUserId","view","setView","clone","setClone","getEvaluatorEvaluatee","setGetEvaluatorEvaluatee","nextStep","setNextStep","fullQuestions","setFullQuestions","errorMessage","setErrorMessage","error","setError","openModalError","setOpenModalError","isLoading","setIsLoading","isQuestionsLoading","setIsQuestionsLoading","steps","setSteps","activeStep","setActiveStep","completed","setCompleted","clickedNext","setClickedNext","openModalSuccess","setOpenModalSuccess","afterStartEvent","setAfterStartEvent","createNewEvent","getEventList","edit","id","questionName","checked","scoringName","scoringValue","bonusRangeFrom","bonusRangeTo","bonusPercentage","bonusRangeName","Number","localStorage","response","getQuestionsGroups","data","map","item","applyDefault","filter","result","getEvent","result2","getScoringList","result3","getEventBonuses","result4","getEventSumEvaluation","sumMin","sumMax","isBefore","dueDate","evaluationType","questionId","isPositiveFeedbacks","isNegativeFeedbacks","eventEvaluators","length","updateEventEvaluator","Promise","all","updateCheckedIdOfEvaluator","evaluatorId","getQuestions","getQuestionsList","eventEvaluatees","updateEventEvaluatee","newEventEvaluatee","evaluateeId","userName","updateCheckedIdOfEvaluatee","e","console","log","completedSteps","questionsIdPost","newArrayEvalautorEvaluatees","forEach","push","createdDate","hours","format","endOf","isPublish","isDelete","evaluators","evaluatees","createEvent","status","response2","createEventEvaluatorEvaluatees","eventId","evaluatorEvaluateeArr","scoringsData","response3","createScoring","scoringArr","response4","createBonus","bonusArr","handleSave","updateEvent","scoringData","updateScoring","updateEventEvaluatorEvaluatees","updateBonus","message","err","handleNext","newCompleted","handleBack","prevActiveStep","handleCloseSuccessModal","handleCloseErrorModal","handleWithScores","handleWithoutScores","renderBackButton","displayNone","renderSaveButton","renderPublishButton","renderNextButton","updatedRangesOfValue","minCount","reduce","first","second","coefficient","maxCount","toString","marginRight20","creatEventContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,GAAR,EAAaC,gBAAb,QAAoC,eAApC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,cAAvC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,qBAAR,QAAoC,qDAApC;AAGA,SAAQC,cAAR,QAA6B,uCAA7B;AAEA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,sBAAP,MAAmC,+CAAnC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGhB,UAAU,EAA1B;AACA,QAAMiB,QAAQ,GAAGzB,WAAW,EAA5B;AACA,QAAM0B,QAAQ,GAAGzB,WAAW,EAA5B;AACA,QAAM0B,aAAa,GAAGF,QAAQ,CAACG,KAA/B;AAOA,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,sBALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,gBAPI;AAQJC,IAAAA,cARI;AASJC,IAAAA,YATI;AAUJC,IAAAA,UAVI;AAWJC,IAAAA,SAXI;AAYJC,IAAAA,mBAZI;AAaJC,IAAAA,iBAbI;AAcJC,IAAAA,iBAdI;AAeJC,IAAAA,aAfI;AAgBJC,IAAAA,oBAhBI;AAiBJC,IAAAA,oBAjBI;AAkBJC,IAAAA,uBAlBI;AAmBJC,IAAAA,uBAnBI;AAoBJC,IAAAA,yBApBI;AAqBJC,IAAAA,yBArBI;AAsBJC,IAAAA,qBAtBI;AAuBJC,IAAAA,cAvBI;AAwBJC,IAAAA,YAxBI;AAyBJC,IAAAA,aAzBI;AA0BJC,IAAAA,UA1BI;AA2BJC,IAAAA,kBA3BI;AA4BJC,IAAAA,cA5BI;AA6BJC,IAAAA,iBA7BI;AA8BJC,IAAAA,aA9BI;AA+BJC,IAAAA,gBA/BI;AAgCJC,IAAAA,8BAhCI;AAiCJC,IAAAA,qBAjCI;AAkCJC,IAAAA,WAlCI;AAmCJC,IAAAA,WAnCI;AAoCJC,IAAAA,QApCI;AAqCJC,IAAAA,QArCI;AAsCJC,IAAAA,YAtCI;AAuCJC,IAAAA,kBAvCI;AAwCJC,IAAAA,kBAxCI;AAyCJC,IAAAA,kBAzCI;AA0CJC,IAAAA,0BA1CI;AA2CJC,IAAAA,cA3CI;AA4CJC,IAAAA;AA5CI,MA6CF9D,qBAAqB,EA7CzB;AA8CA,QAAM;AAAC+D,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsB/D,cAAc,EAA1C;AAEA,QAAM,CAACgE,IAAD,EAAOC,OAAP,IAAkBhF,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAACiF,KAAD,EAAQC,QAAR,IAAoBlF,QAAQ,CAAU,KAAV,CAAlC;AACA,QAAM,CAACmF,qBAAD,EAAwBC,wBAAxB,IAAoDpF,QAAQ,CAAU,KAAV,CAAlE;AACA,QAAM,CAACqF,QAAD,EAAWC,WAAX,IAA0BtF,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACuF,aAAD,EAAgBC,gBAAhB,IAAoCxF,QAAQ,CAAe,EAAf,CAAlD;AACA,QAAM,CAACyF,YAAD,EAAeC,eAAf,IAAkC1F,QAAQ,CAAS,EAAT,CAAhD;AACA,QAAM,CAAC2F,KAAD,EAAQC,QAAR,IAAoB5F,QAAQ,CAAU,KAAV,CAAlC;AAEA,QAAM,CAAC6F,cAAD,EAAiBC,iBAAjB,IAAsC9F,QAAQ,CAAU,KAAV,CAApD;AACA,QAAM,CAAC+F,SAAD,EAAYC,YAAZ,IAA4BhG,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACiG,kBAAD,EAAqBC,qBAArB,IAA8ClG,QAAQ,CAAU,KAAV,CAA5D;AACA,QAAM,CAACmG,KAAD,EAAQC,QAAR,IAAoBpG,QAAQ,CAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAX,CAAlC;AACA,QAAM,CAACqG,UAAD,EAAaC,aAAb,IAA8BtG,QAAQ,CAAS,CAAT,CAA5C;AACA,QAAM,CAACuG,SAAD,EAAYC,YAAZ,IAA4BxG,QAAQ,CAEvC,EAFuC,CAA1C;AAGA,QAAM,CAACyG,WAAD,EAAcC,cAAd,IAAgC1G,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM,CAAC2G,gBAAD,EAAmBC,mBAAnB,IAA0C5G,QAAQ,CAAU,KAAV,CAAxD;AACA,QAAM,CAAC6G,eAAD,EAAkBC,kBAAlB,IAAwC9G,QAAQ,CAAU,KAAV,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;;AAAC,KAAC,YAAY;AACZuD,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACAC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA8C,MAAAA,aAAa,CAAC,CAAD,CAAb;;AACA,UAAI,CAACvE,aAAa,CAACgF,cAAnB,EAAmC;AACjC,cAAMC,YAAY,EAAlB;AACAZ,QAAAA,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAR;;AACA,YAAIrE,aAAa,CAACkD,KAAlB,EAAyB;AACvBD,UAAAA,OAAO,CAAC,KAAD,CAAP;AACAvC,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACAC,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAwC,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,UAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,SAND,MAMO,IAAIrD,aAAa,CAACgD,IAAlB,EAAwB;AAC7BC,UAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,UAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,SAJM,MAIA,IAAIrD,aAAa,CAACkF,IAAlB,EAAwB;AAC7B/B,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,UAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD;AACF,OAjBD,MAiBO;AACLgB,QAAAA,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAD,CAAR;AACA7D,QAAAA,gBAAgB,CAAC,GAAD,CAAhB;AACAC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAC,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAK,QAAAA,aAAa,CAAC,EAAD,CAAb;AACAqC,QAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACA/C,QAAAA,sBAAsB,CAAC,CACrB;AACE6E,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,YAAY,EAAE,mBAFhB;AAGEC,UAAAA,OAAO,EAAE;AAHX,SADqB,EAMrB;AACEF,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,YAAY,EAAE,mBAFhB;AAGEC,UAAAA,OAAO,EAAE;AAHX,SANqB,CAAD,CAAtB;AAYAvE,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAC,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAI,QAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAC,QAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAC,QAAAA,yBAAyB,CAAC,EAAD,CAAzB;AACAC,QAAAA,yBAAyB,CAAC,EAAD,CAAzB;AACAmD,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAxB,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAnB,QAAAA,iBAAiB,CAAC,CAChB;AACEqD,UAAAA,EAAE,EAAE3G,IAAI,EADV;AAEE8G,UAAAA,WAAW,EAAE,MAFf;AAGEC,UAAAA,YAAY,EAAE,GAHhB;AAIEL,UAAAA,IAAI,EAAE;AAJR,SADgB,EAOhB;AACEC,UAAAA,EAAE,EAAE3G,IAAI,EADV;AAEE8G,UAAAA,WAAW,EAAE,WAFf;AAGEC,UAAAA,YAAY,EAAE,GAHhB;AAIEL,UAAAA,IAAI,EAAE;AAJR,SAPgB,EAahB;AACEC,UAAAA,EAAE,EAAE3G,IAAI,EADV;AAEE8G,UAAAA,WAAW,EAAE,WAFf;AAGEC,UAAAA,YAAY,EAAE,GAHhB;AAIEL,UAAAA,IAAI,EAAE;AAJR,SAbgB,CAAD,CAAjB;AAoBAlD,QAAAA,gBAAgB,CAAC,CACf;AACEmD,UAAAA,EAAE,EAAE3G,IAAI,EADV;AAEEgH,UAAAA,cAAc,EAAE,GAFlB;AAGEC,UAAAA,YAAY,EAAE,IAHhB;AAIEC,UAAAA,eAAe,EAAE,GAJnB;AAKEC,UAAAA,cAAc,EAAE;AALlB,SADe,EAQf;AACER,UAAAA,EAAE,EAAE3G,IAAI,EADV;AAEEgH,UAAAA,cAAc,EAAE,GAFlB;AAGEC,UAAAA,YAAY,EAAE,IAHhB;AAIEC,UAAAA,eAAe,EAAE,IAJnB;AAKEC,UAAAA,cAAc,EAAE;AALlB,SARe,EAef;AACER,UAAAA,EAAE,EAAE3G,IAAI,EADV;AAEEgH,UAAAA,cAAc,EAAE,GAFlB;AAGEC,UAAAA,YAAY,EAAE,GAHhB;AAIEC,UAAAA,eAAe,EAAE,IAJnB;AAKEC,UAAAA,cAAc,EAAE;AALlB,SAfe,CAAD,CAAhB;AAuBAxC,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,KA/FA;AAgGF,GAjGQ,EAiGN,CAACnD,aAAD,CAjGM,CAAT;AAmGAhC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC8E,MAAL,EAAa;AACXC,MAAAA,SAAS,CAAC6C,MAAM,CAACC,YAAY,CAAC/C,MAAd,CAAP,CAAT;AACD;AACF,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAMA9E,EAAAA,SAAS,CAAC,MAAM;AACd;;AAAC,KAAC,YAAY;AACZ,YAAM8H,QAAQ,GAAG,MAAM5G,WAAW,CAAC6G,kBAAZ,EAAvB;AACA7D,MAAAA,qBAAqB,CACnB4D,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAmCA,IAAI,CAACC,YAAL,IAAqBD,IAA1E,CADmB,CAArB;AAGAjE,MAAAA,8BAA8B,CAC5B6D,QAAQ,CAACE,IAAT,CACGI,MADH,CACWF,IAAD,IAAmC,CAACA,IAAI,CAACC,YADnD,EAEGF,GAFH,CAEQC,IAAD,IAAmCA,IAF1C,CAD4B,CAA9B;AAKD,KAVA;AAWF,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMjB,YAAY,GAAG,YAAY;AAC/BhB,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMoC,MAAM,GAAG,MAAMvH,SAAS,CAACwH,QAAV,CAAmBtG,aAAa,CAACmF,EAAjC,CAArB;AACA,YAAMoB,OAAO,GAAG,MAAMjH,WAAW,CAACkH,cAAZ,CAA2BxG,aAAa,CAACmF,EAAzC,CAAtB;AACA,YAAMsB,OAAO,GAAG,MAAMjH,UAAU,CAACkH,eAAX,CAA2B1G,aAAa,CAACmF,EAAzC,CAAtB;AACA,YAAMwB,OAAO,GAAG,MAAMnH,UAAU,CAACoH,qBAAX,CAAiC5G,aAAa,CAACmF,EAA/C,CAAtB;AAEAhD,MAAAA,WAAW,CAACwE,OAAO,CAACX,IAAR,CAAaa,MAAd,CAAX;AACAzE,MAAAA,WAAW,CAACuE,OAAO,CAACX,IAAR,CAAac,MAAd,CAAX;;AAEA,UAAI9G,aAAa,CAACkF,IAAlB,EAAwB;AACtB,YAAI3G,MAAM,CAAC8H,MAAM,CAACL,IAAP,CAAY7F,SAAb,CAAN,CAA8B4G,QAA9B,EAAJ,EAA8C;AAC5ChC,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SAFD,MAEO;AACLA,UAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;AACF;;AAEDvE,MAAAA,gBAAgB,CAAC6F,MAAM,CAACL,IAAP,CAAY3F,aAAb,CAAhB;AACAI,MAAAA,cAAc,CAAC4F,MAAM,CAACL,IAAP,CAAYzF,WAAb,CAAd;AACAG,MAAAA,YAAY,CAAC2F,MAAM,CAACL,IAAP,CAAY7F,SAAb,CAAZ;AACA2B,MAAAA,iBAAiB,CACfyE,OAAO,CAACP,IAAR,CAAaC,GAAb,CAEIC,IADF,KAIM,EAAC,GAAGA,IAAJ;AAAUhB,QAAAA,IAAI,EAAE;AAAhB,OAJN,CADF,CADe,CAAjB;AASAlD,MAAAA,gBAAgB,CAACyE,OAAO,CAACT,IAAT,CAAhB;AACArF,MAAAA,UAAU,CAAC0F,MAAM,CAACL,IAAP,CAAYgB,OAAb,CAAV;AACAtF,MAAAA,aAAa,CAAC2E,MAAM,CAACL,IAAP,CAAYiB,cAAZ,KAA+B,CAAhC,CAAb;AACAjG,MAAAA,aAAa,CAACqF,MAAM,CAACL,IAAP,CAAY9F,UAAb,CAAb;AACAsB,MAAAA,cAAc,CAAC6E,MAAM,CAACL,IAAP,CAAYkB,UAAb,CAAd;AACA5G,MAAAA,sBAAsB,CAAC,CACrB;AACE6E,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,YAAY,EAAE,mBAFhB;AAGEC,QAAAA,OAAO,EAAEgB,MAAM,CAACL,IAAP,CAAYmB;AAHvB,OADqB,EAMrB;AACEhC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,YAAY,EAAE,mBAFhB;AAGEC,QAAAA,OAAO,EAAEgB,MAAM,CAACL,IAAP,CAAYoB;AAHvB,OANqB,CAAD,CAAtB;;AAaA,UAAIf,MAAM,CAACL,IAAP,CAAYqB,eAAZ,CAA4BC,MAAhC,EAAwC;AACtC,cAAMC,oBAAoB,GAAG,MAAMC,OAAO,CAACC,GAAR,CACjCpB,MAAM,CAACL,IAAP,CAAYqB,eAAZ,CAA4BpB,GAA5B,CAAgC,MAAOC,IAAP,IAAkC/G,WAAW,CAAC+G,IAAD,CAA7E,CADiC,CAAnC;AAGA,cAAMwB,0BAA0B,GAAGrB,MAAM,CAACL,IAAP,CAAYqB,eAAZ,CAChCjB,MADgC,CACxBF,IAAD,IAA4B;AAClC,cAAIA,IAAI,CAACpD,MAAT,EAAiB;AACf,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD,SANgC,EAOhCmD,GAPgC,CAO3BC,IAAD,KAA6B;AAACyB,UAAAA,WAAW,EAAEzB,IAAI,CAACpD;AAAnB,SAA7B,CAP4B,CAAnC;AAQAzB,QAAAA,yBAAyB,CAACkG,oBAAD,CAAzB;AACApG,QAAAA,uBAAuB,CAACuG,0BAAD,CAAvB;AACD;;AAED,YAAME,YAAY,GAAG,MAAM1I,WAAW,CAAC2I,gBAAZ,EAA3B;AACApE,MAAAA,gBAAgB,CAACmE,YAAY,CAAC5B,IAAd,CAAhB;;AAEA,UAAIK,MAAM,CAACL,IAAP,CAAY8B,eAAZ,CAA4BR,MAAhC,EAAwC;AACtC,cAAMS,oBAAoB,GAAG,MAAMP,OAAO,CAACC,GAAR,CACjCpB,MAAM,CAACL,IAAP,CAAY8B,eAAZ,CAA4B7B,GAA5B,CAAgC,MAAOC,IAAP,IAAkC/G,WAAW,CAAC+G,IAAD,CAA7E,CADiC,CAAnC;AAGA,cAAM8B,iBAAiB,GAAGD,oBAAoB,CAAC9B,GAArB,CAA0BC,IAAD,KAAW;AAC5D+B,UAAAA,WAAW,EAAE/B,IAAI,CAACf,EAD0C;AAE5D+C,UAAAA,QAAQ,EAAEhC,IAAI,CAACgC;AAF6C,SAAX,CAAzB,CAA1B;AAIA,cAAMC,0BAA0B,GAAG9B,MAAM,CAACL,IAAP,CAAY8B,eAAZ,CAChC1B,MADgC,CACxBF,IAAD,IAA4B;AAClC,cAAIA,IAAI,CAACpD,MAAT,EAAiB;AACf,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD,SANgC,EAOhCmD,GAPgC,CAO3BC,IAAD,KAA6B;AAAC+B,UAAAA,WAAW,EAAE/B,IAAI,CAACpD;AAAnB,SAA7B,CAP4B,CAAnC;AAQAxB,QAAAA,yBAAyB,CAAC0G,iBAAD,CAAzB;AACA5G,QAAAA,uBAAuB,CAAC+G,0BAAD,CAAvB;AACD;;AAEDlE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAvFD,CAuFE,OAAOmE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAAe,OAAf;AACD;;AACDnE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA7FD;;AA+FA,QAAMsE,cAAc,GAAG,YAAY;AACjC,QAAIjF,QAAJ,EAAc;AACZO,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,YAAM2E,eAAe,GAAG5H,SAAS,CAACqF,GAAV,CAAeC,IAAD,KAAyB;AAACgB,QAAAA,UAAU,EAAEhB,IAAI,CAACf;AAAlB,OAAzB,CAAd,CAAxB;;AACA,UAAI;AACFlB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMwE,2BAA0E,GAAG,EAAnF;AAEA7G,QAAAA,kBAAkB,CAAC8G,OAAnB,CAA4BxC,IAAD,IAAU;AACnCuC,UAAAA,2BAA2B,CAACE,IAA5B,CAAiC;AAC/BhB,YAAAA,WAAW,EAAEzB,IAAI,CAACyB,WADa;AAE/BM,YAAAA,WAAW,EAAE/B,IAAI,CAAC+B;AAFa,WAAjC;AAID,SALD;AAMA,cAAMjC,IAAI,GAAG;AACX9F,UAAAA,UADW;AAEX0I,UAAAA,WAAW,EAAErK,MAAM,EAFR;AAGX4B,UAAAA,SAAS,EAAE5B,MAAM,CAAC4B,SAAD,CAAN,CAAkB0I,KAAlB,CAAwB,EAAxB,EAA4BC,MAA5B,EAHA;AAIX9B,UAAAA,OAAO,EACL7G,SAAS,KAAKC,OAAd,GACI7B,MAAM,CAAC6B,OAAD,CAAN,CAAgB2I,KAAhB,CAAsB,KAAtB,EAA6BD,MAA7B,EADJ,GAEIvK,MAAM,CAAC6B,OAAD,CAAN,CAAgB0I,MAAhB,EAPK;AASXE,UAAAA,SAAS,EAAE,IATA;AAUXC,UAAAA,QAAQ,EAAE,KAVC;AAWXhC,UAAAA,cAAc,EAAEtF,UAAU,GAAG,CAAH,GAAO,CAXtB;AAYXwF,UAAAA,mBAAmB,EAAEtG,mBAAmB,CAAC,CAAD,CAAnB,CAAuBwE,OAZjC;AAaX+B,UAAAA,mBAAmB,EAAEvG,mBAAmB,CAAC,CAAD,CAAnB,CAAuBwE,OAbjC;AAcXzE,UAAAA,SAAS,EAAE4H,eAdA;AAeXU,UAAAA,UAAU,EAAEjI,oBAAoB,CAACgF,GAArB,CAA0BC,IAAD,KAAW;AAACpD,YAAAA,MAAM,EAAEoD,IAAI,CAACyB;AAAd,WAAX,CAAzB,CAfD;AAgBXwB,UAAAA,UAAU,EAAEjI,oBAAoB,CAAC+E,GAArB,CAA0BC,IAAD,KAAW;AAACpD,YAAAA,MAAM,EAAEoD,IAAI,CAAC+B;AAAd,WAAX,CAAzB,CAhBD;AAiBX,cAAItG,UAAU,IAAI;AAACtB,YAAAA;AAAD,WAAlB,CAjBW;AAkBX,cAAIsB,UAAU,IAAI;AAACpB,YAAAA;AAAD,WAAlB;AAlBW,SAAb;AAoBA,cAAMuF,QAAQ,GAAG,MAAMhH,SAAS,CAACsK,WAAV,CAAsBpD,IAAtB,CAAvB;;AACA,YAAIF,QAAQ,CAACuD,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,gBAAMC,SAAS,GAAG,MAAMxK,SAAS,CAACyK,8BAAV,CAAyC;AAC/DC,YAAAA,OAAO,EAAE1D,QAAQ,CAACE,IAAT,CAAcb,EADwC;AAE/DsE,YAAAA,qBAAqB,EAAEhB;AAFwC,WAAzC,CAAxB;AAKA,gBAAMiB,YAAY,GAAG7H,cAAc,CAACoE,GAAf,CAAoBC,IAAD,KAAW;AACjDX,YAAAA,YAAY,EAAEW,IAAI,CAACX,YAD8B;AAEjDD,YAAAA,WAAW,EAAEY,IAAI,CAACZ,WAF+B;AAGjDkE,YAAAA,OAAO,EAAE1D,QAAQ,CAACE,IAAT,CAAcb;AAH0B,WAAX,CAAnB,CAArB;AAMA,gBAAMwE,SAAS,GAAG,MAAMrK,WAAW,CAACsK,aAAZ,CAA0B;AAChDJ,YAAAA,OAAO,EAAE1D,QAAQ,CAACE,IAAT,CAAcb,EADyB;AAEhD0E,YAAAA,UAAU,EAAEH;AAFoC,WAA1B,CAAxB;AAKA,gBAAMI,SAAS,GAAG,MAAMtK,UAAU,CAACuK,WAAX,CAAuB;AAC7CP,YAAAA,OAAO,EAAE1D,QAAQ,CAACE,IAAT,CAAcb,EADsB;AAE7C6E,YAAAA,QAAQ,EAAE,CACR,GAAGjI,aAAa,CAACkE,GAAd,CAAmBC,IAAD,KAAW;AAC9BsD,cAAAA,OAAO,EAAE1D,QAAQ,CAACE,IAAT,CAAcb,EADO;AAE9BO,cAAAA,eAAe,EAAEE,MAAM,CAACM,IAAI,CAACR,eAAN,CAFO;AAG9BF,cAAAA,cAAc,EAAEI,MAAM,CAACM,IAAI,CAACV,cAAN,CAHQ;AAI9BC,cAAAA,YAAY,EAAEG,MAAM,CAACM,IAAI,CAACT,YAAN,CAJU;AAK9BE,cAAAA,cAAc,EAAEO,IAAI,CAACP;AALS,aAAX,CAAlB,CADK;AAFmC,WAAvB,CAAxB;;AAaA,cAAI2D,SAAS,CAACD,MAAV,KAAqB,GAArB,IAA4BM,SAAS,CAACN,MAAV,KAAqB,GAAjD,IAAwDS,SAAS,CAACT,MAAV,KAAqB,GAAjF,EAAsF;AACpFxE,YAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAnE,YAAAA,YAAY,CAAC,EAAD,CAAZ;AACAC,YAAAA,UAAU,CAAC,EAAD,CAAV;AACAG,YAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAC,YAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAK,YAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAD,YAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAH,YAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,SAxCD,MAwCO;AACL+C,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AACDE,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OA3ED,CA2EE,OAAOmE,CAAP,EAAU;AACVnE,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAoE,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAAe,OAAf;AACD,OA9ED,SA8EU;AACRnE,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KApFD,MAoFO;AACLJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAxFD;;AA0FA,QAAMoG,UAAU,GAAG,YAAY;AAC7B,QAAI3G,QAAJ,EAAc;AACZO,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAI,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMuE,eAAe,GAAG5H,SAAS,CAACqF,GAAV,CAAeC,IAAD,KAAyB;AAACgB,QAAAA,UAAU,EAAEhB,IAAI,CAACf;AAAlB,OAAzB,CAAd,CAAxB;AACA,YAAMa,IAAI,GAAG;AACX9F,QAAAA,UADW;AAEX0I,QAAAA,WAAW,EAAErK,MAAM,EAFR;AAGX8B,QAAAA,aAHW;AAIXE,QAAAA,WAJW;AAKXJ,QAAAA,SAAS,EAAE5B,MAAM,CAAC4B,SAAD,CAAN,CAAkB2I,MAAlB,EALA;AAMX9B,QAAAA,OAAO,EAAEzI,MAAM,CAAC6B,OAAD,CAAN,CAAgB0I,MAAhB,EANE;AAOXE,QAAAA,SAAS,EAAE,IAPA;AAQXC,QAAAA,QAAQ,EAAE,KARC;AASXhC,QAAAA,cAAc,EAAEtF,UAAU,GAAG,CAAH,GAAO,CATtB;AAUXwF,QAAAA,mBAAmB,EAAEtG,mBAAmB,CAAC,CAAD,CAAnB,CAAuBwE,OAVjC;AAWX+B,QAAAA,mBAAmB,EAAEvG,mBAAmB,CAAC,CAAD,CAAnB,CAAuBwE,OAXjC;AAYXzE,QAAAA,SAAS,EAAE4H,eAZA;AAaXU,QAAAA,UAAU,EAAEjI,oBAAoB,CAACgF,GAArB,CAA0BC,IAAD,KAAW;AAACpD,UAAAA,MAAM,EAAEoD,IAAI,CAACyB;AAAd,SAAX,CAAzB,CAbD;AAcXwB,QAAAA,UAAU,EAAEjI,oBAAoB,CAAC+E,GAArB,CAA0BC,IAAD,KAAW;AAACpD,UAAAA,MAAM,EAAEoD,IAAI,CAAC+B;AAAd,SAAX,CAAzB;AAdD,OAAb;;AAgBA,UAAI;AACF,cAAMnC,QAAa,GAAG,MAAMhH,SAAS,CAACoL,WAAV,CAAsBlK,aAAa,CAACmF,EAApC,EAAwCa,IAAxC,CAA5B;;AACA,YAAIF,QAAQ,CAACuD,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,gBAAMc,WAAW,GAAGtI,cAAc,CAACoE,GAAf,CAAoBC,IAAD,KAAW;AAChDX,YAAAA,YAAY,EAAEW,IAAI,CAACX,YAD6B;AAEhDD,YAAAA,WAAW,EAAEY,IAAI,CAACZ,WAF8B;AAGhDkE,YAAAA,OAAO,EAAE1D,QAAQ,CAACE,IAAT,CAAcb;AAHyB,WAAX,CAAnB,CAApB;AAMA,gBAAMsD,2BAA0E,GAAG,EAAnF;AAEA7G,UAAAA,kBAAkB,CAAC8G,OAAnB,CAA4BxC,IAAD,IAAU;AACnCuC,YAAAA,2BAA2B,CAACE,IAA5B,CAAiC;AAC/BhB,cAAAA,WAAW,EAAEzB,IAAI,CAACyB,WADa;AAE/BM,cAAAA,WAAW,EAAE/B,IAAI,CAAC+B;AAFa,aAAjC;AAID,WALD;AAOA,gBAAMqB,SAAS,GAAG,MAAMhK,WAAW,CAAC8K,aAAZ,CAA0BpK,aAAa,CAACmF,EAAxC,EAA4C;AAClEqE,YAAAA,OAAO,EAAExJ,aAAa,CAACmF,EAD2C;AAElE0E,YAAAA,UAAU,EAAEM;AAFsD,WAA5C,CAAxB;AAKA,gBAAMR,SAAS,GAAG,MAAM7K,SAAS,CAACuL,8BAAV,CAAyC;AAC/Db,YAAAA,OAAO,EAAExJ,aAAa,CAACmF,EADwC;AAE/DsE,YAAAA,qBAAqB,EAAEhB;AAFwC,WAAzC,CAAxB;AAKA,gBAAMqB,SAAS,GAAG,MAAMtK,UAAU,CAAC8K,WAAX,CAAuBtK,aAAa,CAACmF,EAArC,EAAyC;AAC/DqE,YAAAA,OAAO,EAAExJ,aAAa,CAACmF,EADwC;AAE/D6E,YAAAA,QAAQ,EAAE,CACR,GAAGjI,aAAa,CAACkE,GAAd,CAAmBC,IAAD,KAAW;AAC9BsD,cAAAA,OAAO,EAAExJ,aAAa,CAACmF,EADO;AAE9BO,cAAAA,eAAe,EAAEQ,IAAI,CAACR,eAFQ;AAG9BF,cAAAA,cAAc,EAAEU,IAAI,CAACV,cAHS;AAI9BC,cAAAA,YAAY,EAAES,IAAI,CAACT,YAJW;AAK9BE,cAAAA,cAAc,EAAEO,IAAI,CAACP;AALS,aAAX,CAAlB,CADK;AAFqD,WAAzC,CAAxB;;AAaA,cAAI2D,SAAS,CAACD,MAAV,KAAqB,GAArB,IAA4BM,SAAS,CAACN,MAAV,KAAqB,GAAjD,IAAwDS,SAAS,CAACT,MAAV,KAAqB,GAAjF,EAAsF;AACpFxE,YAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAnE,YAAAA,YAAY,CAAC,EAAD,CAAZ;AACAC,YAAAA,UAAU,CAAC,EAAD,CAAV;AACAG,YAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAC,YAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAK,YAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAD,YAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAH,YAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,SAjDD,MAiDO;AACL+C,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAJ,UAAAA,eAAe,CAACmC,QAAQ,CAACA,QAAT,CAAkBE,IAAlB,CAAuBuE,OAAxB,CAAf;AACD;;AACDtG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAxDD,CAwDE,OAAOuG,GAAP,EAAY;AACZvG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAoE,QAAAA,OAAO,CAACC,GAAR,CAAYkC,GAAZ;AACD,OA3DD,SA2DU;AACRvG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAlFD,MAkFO;AACLJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAtFD;;AAwFA,QAAM4G,UAAU,GAAG,MAAM;AACvB9F,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAIrB,QAAJ,EAAc;AACZO,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,YAAM6G,YAAY,GAAGlG,SAArB;AACAkG,MAAAA,YAAY,CAACpG,UAAD,CAAZ,GAA2B,IAA3B;AACAG,MAAAA,YAAY,CAACiG,YAAD,CAAZ;AACAnG,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD,KAND,MAMO;AACLT,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAXD;;AAaA7F,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0G,WAAJ,EAAiB;AACf,UAAI,CAACvE,SAAD,IAAc,CAACC,OAAnB,EAA4B;AAC1BmC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,UAAI,CAACrC,UAAL,EAAiB;AACfsC,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,OAFD,MAEO;AACLA,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;;AAED,UAAI,CAACI,cAAc,CAAC0E,MAApB,EAA4B;AAC1B7E,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,OAFD,MAEO;AACLA,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;;AAED,UAAI,CAACI,cAAc,CAACyE,MAApB,EAA4B;AAC1B5E,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,OAFD,MAEO;AACLA,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;AACF;AACF,GA1BQ,EA0BN,CAACvC,SAAD,EAAYuE,WAAZ,EAAyBtE,OAAzB,EAAkCF,UAAlC,EAA8C0C,cAA9C,EAA8DC,cAA9D,CA1BM,CAAT;;AA4BA,QAAM8H,UAAU,GAAG,MAAM;AACvBhG,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAjC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAD,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAD,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAgB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,UAAM6G,YAAY,GAAGlG,SAArB;AACAkG,IAAAA,YAAY,CAACpG,UAAD,CAAZ,GAA2B,KAA3B;AACAG,IAAAA,YAAY,CAACiG,YAAD,CAAZ;AACAnG,IAAAA,aAAa,CAAEqG,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAZD;;AAcA,QAAMC,uBAAuB,GAAG,MAAM;AACpChG,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA9E,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACD,GAHD;;AAKA,QAAM+K,qBAAqB,GAAG,MAAM/G,iBAAiB,CAAC,KAAD,CAArD;;AAEA,QAAMgH,gBAAgB,GAAG,MAAM;AAC7BxI,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,IAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAgC,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAjD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAmC,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,UAAM6G,YAAY,GAAGlG,SAArB;AACAkG,IAAAA,YAAY,CAACpG,UAAD,CAAZ,GAA2B,IAA3B;AACAG,IAAAA,YAAY,CAACiG,YAAD,CAAZ;AACAnG,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD,GAbD;;AAeA,QAAM0G,mBAAmB,GAAG,MAAM;AAChCzI,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,IAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAgC,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAjD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAmC,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,UAAM6G,YAAY,GAAGlG,SAArB;AACAkG,IAAAA,YAAY,CAACpG,UAAD,CAAZ,GAA2B,IAA3B;AACAG,IAAAA,YAAY,CAACiG,YAAD,CAAZ;AACAnG,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD,GAbD;;AAeA,QAAM2G,gBAAgB,GAAG,mBACvB,QAAC,GAAD;AAAK,IAAA,SAAS,EAAG,GAAE3G,UAAU,KAAK,CAAf,IAAoBzE,OAAO,CAACqL,WAAY,QAA3D;AAAA,2BACE,QAAC,sBAAD;AAAwB,MAAA,WAAW,EAAEP,UAArC;AAAiD,MAAA,KAAK,EAAC,MAAvD;AAA8D,MAAA,KAAK,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,QAAMQ,gBAAgB,GAAG,MAAM;AAC7B,QAAI,CAACjI,KAAD,IAAU,CAACF,IAAX,IAAmB,CAAChD,aAAa,CAACgF,cAAlC,IAAoDV,UAAU,GAAG,CAAb,KAAmBF,KAAK,CAACkD,MAAjF,EAAyF;AACvF,0BAAO,QAAC,UAAD;AAAY,QAAA,WAAW,EAAE2C,UAAzB;AAAqC,QAAA,KAAK,EAAC,MAA3C;AAAkD,QAAA,KAAK,EAAC,UAAxD;AAAmE,QAAA,IAAI,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAJD;;AAKA,QAAMmB,mBAAmB,GAAG,mBAC1B,QAAC,UAAD;AAAY,IAAA,WAAW,EAAE7C,cAAzB;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAAyD,IAAA,KAAK,EAAC,UAA/D;AAA0E,IAAA,IAAI,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,QAAM8C,gBAAgB,GAAG,MAAM;AAC7B,QAAIrH,SAAS,IAAIE,kBAAjB,EAAqC;AACnC,0BAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE,QAAC,GAAD;AAAA,gBACGI,UAAU,IAAIF,KAAK,CAACkD,MAAN,GAAe,CAA7B,IAAkChD,UAAU,KAAKF,KAAK,CAACkD,MAAN,GAAe,CAAhE,iBACC,QAAC,UAAD;AAAY,QAAA,WAAW,EAAEmD,UAAzB;AAAqC,QAAA,KAAK,EAAC,UAA3C;AAAsD,QAAA,KAAK,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GAXD;;AAaAzM,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,aAAa,CAACmF,EAAlB,EAAsB;AACpB,YAAMmG,oBAAoB,GAAGvJ,aAAa,CAACkE,GAAd,CAAmBC,IAAD,KAAW,EACxD,GAAGA,IADqD;AAExDT,QAAAA,YAAY,EAAEpD,QAF0C;AAGxDmD,QAAAA,cAAc,EAAElD;AAHwC,OAAX,CAAlB,CAA7B;AAKAN,MAAAA,gBAAgB,CAACsJ,oBAAD,CAAhB;AACD,KAPD,MAOO;AACL,YAAMC,QAAQ,GAAG3K,SAAS,CAAC4K,MAAV,CACf,CAACC,KAAD,EAAQC,MAAR,KAAmBD,KAAK,GAAG7F,MAAM,CAAC8F,MAAM,CAACC,WAAR,CAAN,GAA6B/F,MAAM,CAACvF,aAAD,CAD/C,EAEf,CAFe,CAAjB;AAIA,YAAMuL,QAAQ,GAAGhL,SAAS,CAAC4K,MAAV,CACf,CAACC,KAAD,EAAQC,MAAR,KAAmBD,KAAK,GAAG7F,MAAM,CAAC8F,MAAM,CAACC,WAAR,CAAN,GAA6B/F,MAAM,CAACrF,WAAD,CAD/C,EAEf,CAFe,CAAjB;AAIA4B,MAAAA,WAAW,CAACoJ,QAAQ,CAACM,QAAT,EAAD,CAAX;AACAzJ,MAAAA,WAAW,CAACwJ,QAAQ,CAACC,QAAT,EAAD,CAAX;AACA,YAAMP,oBAAoB,GAAGvJ,aAAa,CAACkE,GAAd,CAAmBC,IAAD,KAAW,EACxD,GAAGA,IADqD;AAExDT,QAAAA,YAAY,EAAEmG,QAAQ,CAACC,QAAT,EAF0C;AAGxDrG,QAAAA,cAAc,EAAE+F,QAAQ,CAACM,QAAT;AAHwC,OAAX,CAAlB,CAA7B;AAKA7J,MAAAA,gBAAgB,CAACsJ,oBAAD,CAAhB;AACD;AACF,GA1BQ,EA0BN,CAAC/K,WAAD,EAAcF,aAAd,EAA6BO,SAA7B,EAAwCyB,QAAxC,EAAkDC,QAAlD,CA1BM,CAAT;AA4BA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,sEADZ;AAEE,QAAA,EAAE,EAAC,SAFL;AAAA,gCAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,KAAK,EAAE8B,KADT;AAEE,QAAA,SAAS,EAAEI,SAFb;AAGE,QAAA,UAAU,EAAEF,UAHd;AAIE,QAAA,gBAAgB,EAAE;AAJpB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE,QAAC,GAAD;AAAA,qBACGtE,aAAa,CAACgF,cAAd,IAAgCV,UAAU,KAAK,CAA/C,iBACC,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,yDAAf;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,SAAS,EAAG,GAAEzE,OAAO,CAACiM,aAAc,EAAzC;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,WAAW,EAAEf,gBADf;AAEE,gBAAA,KAAK,EAAC,UAFR;AAGE,gBAAA,OAAO,EAAC,WAHV;AAIE,gBAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,GAAD;AAAK,cAAA,SAAS,EAAG,GAAElL,OAAO,CAACiM,aAAc,EAAzC;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,WAAW,EAAEd,mBADf;AAEE,gBAAA,KAAK,EAAC,UAFR;AAGE,gBAAA,KAAK,EAAC,6BAHR;AAIE,gBAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAqBG,CAAChL,aAAa,CAACgF,cAAd,GAA+BV,UAAU,KAAK,CAA9C,GAAkDA,UAAU,KAAK,CAAlE,kBACC,QAAC,GAAD;AAAK,YAAA,SAAS,EAAG,GAAEzE,OAAO,CAACkM,mBAAoB,EAA/C;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACE,QAAC,KAAD;AACE,gBAAA,eAAe,EAAEjH,eADnB;AAEE,gBAAA,WAAW,EAAEvB,WAFf;AAGE,gBAAA,KAAK,EAAEK,KAHT;AAIE,gBAAA,IAAI,EAAEZ;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtBJ,EAiCG,CAAChD,aAAa,CAACgF,cAAd,GAA+BV,UAAU,KAAK,CAA9C,GAAkDA,UAAU,KAAK,CAAlE,kBACC,QAAC,GAAD;AAAK,YAAA,SAAS,EAAG,GAAEzE,OAAO,CAACkM,mBAAoB,EAA/C;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,WAAW,EAAErH,WADf;AAEE,cAAA,eAAe,EAAEI,eAFnB;AAGE,cAAA,KAAK,EAAElB,KAHT;AAIE,cAAA,WAAW,EAAEL,WAJf;AAKE,cAAA,qBAAqB,EAAEH,qBALzB;AAME,cAAA,IAAI,EAAEJ;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlCJ,EA6CG,CAAChD,aAAa,CAACgF,cAAd,GAA+BV,UAAU,KAAK,CAA9C,GAAkDA,UAAU,KAAK,CAAlE,kBACC,QAAC,KAAD;AACE,YAAA,eAAe,EAAEQ,eADnB;AAEE,YAAA,KAAK,EAAElB,KAFT;AAGE,YAAA,kBAAkB,EAAEM,kBAHtB;AAIE,YAAA,qBAAqB,EAAEC,qBAJzB;AAKE,YAAA,aAAa,EAAEX,aALjB;AAME,YAAA,IAAI,EAAER,IANR;AAOE,YAAA,WAAW,EAAEO;AAPf;AAAA;AAAA;AAAA;AAAA,kBA9CJ,EAwDG,CAACvD,aAAa,CAACgF,cAAd,GAA+BV,UAAU,KAAK,CAA9C,GAAkDA,UAAU,KAAK,CAAlE,kBACC,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEf,WAApB;AAAiC,YAAA,KAAK,EAAEK,KAAxC;AAA+C,YAAA,IAAI,EAAEZ;AAArD;AAAA;AAAA;AAAA;AAAA,kBAzDJ,EA2DG,CAAChD,aAAa,CAACgF,cAAd,GAA+BV,UAAU,KAAK,CAA9C,GAAkDA,UAAU,KAAK,CAAlE,kBACC,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEf,WAApB;AAAiC,YAAA,KAAK,EAAEK,KAAxC;AAA+C,YAAA,IAAI,EAAEZ;AAArD;AAAA;AAAA;AAAA;AAAA,kBA5DJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgEE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,2CAAf;AAAA,qBACGiI,gBAAgB,EADnB,EAEGI,gBAAgB,EAFnB,eAGE,QAAC,GAAD;AAAA,uBACG,CAACrH,SAAD,IAAcmH,gBAAgB,EADjC,EAEG,CAACnH,SAAD,IAAcd,KAAd,IAAuBoB,UAAU,GAAG,CAAb,KAAmBF,KAAK,CAACkD,MAAhD,IAA0D8D,mBAAmB,EAFhF,EAGG,CAACpH,SAAD,IACC,CAACd,KADF,IAEClD,aAAa,CAACgF,cAFf,IAGCV,UAAU,GAAG,CAAb,KAAmBF,KAAK,CAACkD,MAH1B,IAIC8D,mBAAmB,EAPvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhEF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAgGE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAExG,gBAAzB;AAA2C,MAAA,UAAU,EAAEiG;AAAvD;AAAA;AAAA;AAAA;AAAA,YAhGF,eAiGE,QAAC,UAAD;AACE,MAAA,SAAS,EAAE/G,cADb;AAEE,MAAA,YAAY,EAAEJ,YAFhB;AAGE,MAAA,UAAU,EAAEoH;AAHd;AAAA;AAAA;AAAA;AAAA,YAjGF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyGD,CAptBD;;GAAMlL,W;UAEavB,W,EACAC,W;;;KAHbsB,W;AAstBN,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Box, CircularProgress} from '@mui/material'\nimport {Link} from 'react-router-dom'\nimport {useLocation, useNavigate} from 'react-router'\nimport moment from 'moment'\nimport uuid from 'react-uuid'\nimport StepperPage from '../../layouts/stepper'\nimport SuccessModal from '../../layouts/modal/successModal'\nimport Step1 from './steps/step1'\nimport Step3 from './steps/step3'\nimport MakeStyles from '../../assets/makeStyles/makeStyles'\nimport EventsApi from '../../api/events'\nimport {UseCreateEventContext} from '../../context/createEventContext/createEventContext'\nimport {IEventEvaluators, IQuestions} from '../../shared/types/events/events'\nimport {ICreateEventProps} from '../../context/createEventContext/createEventContext.props'\nimport {UseUserContext} from '../../context/userContext/userContext'\nimport {IUserProps} from '../../context/userContext/userContext.props'\nimport ErrorModal from '../../layouts/modal/errorModal'\nimport QuestionApi from '../../api/question'\nimport getUserList from '../utils/usersUtils'\nimport Step2 from './steps/step2'\nimport Step4 from './steps/step4'\nimport ScoringsApi from '../../api/scoring'\nimport LeftIcon from '../../assets/images/Icons/leftIcon'\nimport BonusesApi from '../../api/bonus'\nimport Step5 from './steps/step5'\nimport ButtonBlue from '../../layouts/buttons/buttonBlue'\nimport ButtonTranparentBorder from '../../layouts/buttons/buttonTransparentBorder'\n\nconst EventCreate = () => {\n  const classes = MakeStyles()\n  const location = useLocation()\n  const navigate = useNavigate()\n  const stateLocation = location.state as {\n    createNewEvent?: boolean\n    id: number\n    view: boolean\n    clone: boolean\n    edit: boolean\n  }\n  const {\n    eventTitle,\n    startDate,\n    endDate,\n    ratePointFrom,\n    setCustomNotesQuestion,\n    ratePointTo,\n    setRatePointFrom,\n    setRatePointTo,\n    setStartDate,\n    setEndDate,\n    questions,\n    customNotesQuestion,\n    setEventEvaluatee,\n    setEventEvaluator,\n    setEventTitle,\n    checkedIdOfEvaluator,\n    checkedIdOfEvaluatee,\n    setCheckedIdOfEvaluator,\n    setCheckedIdOfEvaluatee,\n    setCheckedItemOfEvaluator,\n    setCheckedItemOfEvaluatee,\n    setCheckedOfEvaluatee,\n    setQuestionsId,\n    setQuestions,\n    setWithScores,\n    withScores,\n    checkedOfEvaluatee,\n    buttonsOfValue,\n    setButtonsOfValue,\n    rangesOfvalue,\n    setRangesOfValue,\n    setQuestionGroupTitleIsDefault,\n    setQuestionGroupTitle,\n    setRangeMin,\n    setRangeMax,\n    rangeMax,\n    rangeMin,\n    setErrorDate,\n    setErrorEventTitle,\n    setErrorEvaluators,\n    setErrorEvaluatees,\n    setErrorCheckedOfEvaluatee,\n    eventEvaluator,\n    eventEvaluatee,\n  } = UseCreateEventContext() as ICreateEventProps\n  const {userId, setUserId} = UseUserContext() as IUserProps\n\n  const [view, setView] = useState<boolean>(false)\n  const [clone, setClone] = useState<boolean>(false)\n  const [getEvaluatorEvaluatee, setGetEvaluatorEvaluatee] = useState<boolean>(false)\n  const [nextStep, setNextStep] = useState<boolean>(false)\n  const [fullQuestions, setFullQuestions] = useState<IQuestions[]>([])\n  const [errorMessage, setErrorMessage] = useState<string>('')\n  const [error, setError] = useState<boolean>(false)\n\n  const [openModalError, setOpenModalError] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isQuestionsLoading, setIsQuestionsLoading] = useState<boolean>(false)\n  const [steps, setSteps] = useState<number[]>([1, 2, 3, 4, 5, 6])\n  const [activeStep, setActiveStep] = useState<number>(0)\n  const [completed, setCompleted] = useState<{\n    [k: number]: boolean\n  }>({})\n  const [clickedNext, setClickedNext] = useState<boolean>(false)\n  const [openModalSuccess, setOpenModalSuccess] = useState<boolean>(false)\n  const [afterStartEvent, setAfterStartEvent] = useState<boolean>(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setCheckedOfEvaluatee([])\n      setQuestionsId([])\n      setQuestions([])\n      setActiveStep(0)\n      if (!stateLocation.createNewEvent) {\n        await getEventList()\n        setSteps([1, 2, 3, 4, 5])\n        if (stateLocation.clone) {\n          setView(false)\n          setStartDate('')\n          setEndDate('')\n          setClone(true)\n          setGetEvaluatorEvaluatee(true)\n        } else if (stateLocation.view) {\n          setView(true)\n          setClone(false)\n          setGetEvaluatorEvaluatee(true)\n        } else if (stateLocation.edit) {\n          setClone(false)\n          setGetEvaluatorEvaluatee(true)\n        }\n      } else {\n        setSteps([1, 2, 3, 4, 5, 6])\n        setRatePointFrom('1')\n        setRatePointTo('10')\n        setStartDate('')\n        setEndDate('')\n        setEventTitle('')\n        setGetEvaluatorEvaluatee(false)\n        setCustomNotesQuestion([\n          {\n            id: 1,\n            questionName: 'Positive Feedback',\n            checked: true,\n          },\n          {\n            id: 2,\n            questionName: 'Things To Improve',\n            checked: true,\n          },\n        ])\n        setEventEvaluatee([])\n        setEventEvaluator([])\n        setCheckedIdOfEvaluator([])\n        setCheckedIdOfEvaluatee([])\n        setCheckedItemOfEvaluator([])\n        setCheckedItemOfEvaluatee([])\n        setCompleted([])\n        setView(false)\n        setButtonsOfValue([\n          {\n            id: uuid(),\n            scoringName: 'Good',\n            scoringValue: '1',\n            edit: false,\n          },\n          {\n            id: uuid(),\n            scoringName: 'Very Good',\n            scoringValue: '2',\n            edit: false,\n          },\n          {\n            id: uuid(),\n            scoringName: 'Excellent',\n            scoringValue: '3',\n            edit: false,\n          },\n        ])\n        setRangesOfValue([\n          {\n            id: uuid(),\n            bonusRangeFrom: '0',\n            bonusRangeTo: '10',\n            bonusPercentage: '0',\n            bonusRangeName: 'Good',\n          },\n          {\n            id: uuid(),\n            bonusRangeFrom: '0',\n            bonusRangeTo: '15',\n            bonusPercentage: '20',\n            bonusRangeName: 'Very Good',\n          },\n          {\n            id: uuid(),\n            bonusRangeFrom: '0',\n            bonusRangeTo: '5',\n            bonusPercentage: '35',\n            bonusRangeName: 'Normal',\n          },\n        ])\n        setClone(false)\n      }\n    })()\n  }, [stateLocation])\n\n  useEffect(() => {\n    if (!userId) {\n      setUserId(Number(localStorage.userId))\n    }\n  }, [userId])\n\n  useEffect(() => {\n    ;(async () => {\n      const response = await QuestionApi.getQuestionsGroups()\n      setQuestionGroupTitle(\n        response.data.map((item: {applyDefault: boolean}) => item.applyDefault && item),\n      )\n      setQuestionGroupTitleIsDefault(\n        response.data\n          .filter((item: {applyDefault: boolean}) => !item.applyDefault)\n          .map((item: {applyDefault: boolean}) => item),\n      )\n    })()\n  }, [])\n\n  const getEventList = async () => {\n    setIsLoading(true)\n    try {\n      const result = await EventsApi.getEvent(stateLocation.id)\n      const result2 = await ScoringsApi.getScoringList(stateLocation.id)\n      const result3 = await BonusesApi.getEventBonuses(stateLocation.id)\n      const result4 = await BonusesApi.getEventSumEvaluation(stateLocation.id)\n\n      setRangeMin(result4.data.sumMin)\n      setRangeMax(result4.data.sumMax)\n\n      if (stateLocation.edit) {\n        if (moment(result.data.startDate).isBefore()) {\n          setAfterStartEvent(true)\n        } else {\n          setAfterStartEvent(false)\n        }\n      }\n\n      setRatePointFrom(result.data.ratePointFrom)\n      setRatePointTo(result.data.ratePointTo)\n      setStartDate(result.data.startDate)\n      setButtonsOfValue(\n        result2.data.map(\n          (\n            item: {\n              edit: boolean\n            }[],\n          ) => ({...item, edit: false}),\n        ),\n      )\n      setRangesOfValue(result3.data)\n      setEndDate(result.data.dueDate)\n      setWithScores(result.data.evaluationType === 1)\n      setEventTitle(result.data.eventTitle)\n      setQuestionsId(result.data.questionId)\n      setCustomNotesQuestion([\n        {\n          id: 1,\n          questionName: 'Positive Feedback',\n          checked: result.data.isPositiveFeedbacks,\n        },\n        {\n          id: 2,\n          questionName: 'Things To Improve',\n          checked: result.data.isNegativeFeedbacks,\n        },\n      ])\n\n      if (result.data.eventEvaluators.length) {\n        const updateEventEvaluator = await Promise.all(\n          result.data.eventEvaluators.map(async (item: IEventEvaluators) => getUserList(item)),\n        )\n        const updateCheckedIdOfEvaluator = result.data.eventEvaluators\n          .filter((item: IEventEvaluators) => {\n            if (item.userId) {\n              return true\n            }\n            return false\n          })\n          .map((item: IEventEvaluators) => ({evaluatorId: item.userId}))\n        setCheckedItemOfEvaluator(updateEventEvaluator)\n        setCheckedIdOfEvaluator(updateCheckedIdOfEvaluator)\n      }\n\n      const getQuestions = await QuestionApi.getQuestionsList()\n      setFullQuestions(getQuestions.data)\n\n      if (result.data.eventEvaluatees.length) {\n        const updateEventEvaluatee = await Promise.all(\n          result.data.eventEvaluatees.map(async (item: IEventEvaluators) => getUserList(item)),\n        )\n        const newEventEvaluatee = updateEventEvaluatee.map((item) => ({\n          evaluateeId: item.id,\n          userName: item.userName,\n        }))\n        const updateCheckedIdOfEvaluatee = result.data.eventEvaluatees\n          .filter((item: IEventEvaluators) => {\n            if (item.userId) {\n              return true\n            }\n            return false\n          })\n          .map((item: IEventEvaluators) => ({evaluateeId: item.userId}))\n        setCheckedItemOfEvaluatee(newEventEvaluatee)\n        setCheckedIdOfEvaluatee(updateCheckedIdOfEvaluatee)\n      }\n\n      setIsLoading(false)\n    } catch (e) {\n      console.log(e, 'error')\n    }\n    setIsLoading(false)\n  }\n\n  const completedSteps = async () => {\n    if (nextStep) {\n      setError(false)\n      const questionsIdPost = questions.map((item: {id: number}) => ({questionId: item.id}))\n      try {\n        setIsLoading(true)\n        const newArrayEvalautorEvaluatees: {evaluatorId?: number; evaluateeId: number}[] = []\n\n        checkedOfEvaluatee.forEach((item) => {\n          newArrayEvalautorEvaluatees.push({\n            evaluatorId: item.evaluatorId,\n            evaluateeId: item.evaluateeId,\n          })\n        })\n        const data = {\n          eventTitle,\n          createdDate: moment(),\n          startDate: moment(startDate).hours(15).format(),\n          dueDate:\n            startDate === endDate\n              ? moment(endDate).endOf('day').format()\n              : moment(endDate).format(),\n\n          isPublish: true,\n          isDelete: false,\n          evaluationType: withScores ? 1 : 0,\n          isPositiveFeedbacks: customNotesQuestion[0].checked,\n          isNegativeFeedbacks: customNotesQuestion[1].checked,\n          questions: questionsIdPost,\n          evaluators: checkedIdOfEvaluator.map((item) => ({userId: item.evaluatorId})),\n          evaluatees: checkedIdOfEvaluatee.map((item) => ({userId: item.evaluateeId})),\n          ...(withScores && {ratePointFrom}),\n          ...(withScores && {ratePointTo}),\n        }\n        const response = await EventsApi.createEvent(data)\n        if (response.status === 200) {\n          const response2 = await EventsApi.createEventEvaluatorEvaluatees({\n            eventId: response.data.id,\n            evaluatorEvaluateeArr: newArrayEvalautorEvaluatees,\n          })\n\n          const scoringsData = buttonsOfValue.map((item) => ({\n            scoringValue: item.scoringValue,\n            scoringName: item.scoringName,\n            eventId: response.data.id,\n          }))\n\n          const response3 = await ScoringsApi.createScoring({\n            eventId: response.data.id,\n            scoringArr: scoringsData,\n          })\n\n          const response4 = await BonusesApi.createBonus({\n            eventId: response.data.id,\n            bonusArr: [\n              ...rangesOfvalue.map((item) => ({\n                eventId: response.data.id,\n                bonusPercentage: Number(item.bonusPercentage),\n                bonusRangeFrom: Number(item.bonusRangeFrom),\n                bonusRangeTo: Number(item.bonusRangeTo),\n                bonusRangeName: item.bonusRangeName,\n              })),\n            ],\n          })\n\n          if (response2.status === 200 && response3.status === 200 && response4.status === 200) {\n            setOpenModalSuccess(true)\n            setStartDate('')\n            setEndDate('')\n            setEventEvaluatee([])\n            setEventEvaluator([])\n            setCheckedIdOfEvaluatee([])\n            setCheckedIdOfEvaluator([])\n            setEventTitle('')\n          }\n        } else {\n          setOpenModalError(true)\n        }\n        setIsLoading(false)\n      } catch (e) {\n        setIsLoading(false)\n        console.log(e, 'error')\n      } finally {\n        setIsLoading(false)\n      }\n    } else {\n      setError(true)\n    }\n  }\n\n  const handleSave = async () => {\n    if (nextStep) {\n      setError(false)\n      setIsLoading(true)\n      const questionsIdPost = questions.map((item: {id: number}) => ({questionId: item.id}))\n      const data = {\n        eventTitle,\n        createdDate: moment(),\n        ratePointFrom,\n        ratePointTo,\n        startDate: moment(startDate).format(),\n        dueDate: moment(endDate).format(),\n        isPublish: true,\n        isDelete: false,\n        evaluationType: withScores ? 1 : 0,\n        isPositiveFeedbacks: customNotesQuestion[0].checked,\n        isNegativeFeedbacks: customNotesQuestion[1].checked,\n        questions: questionsIdPost,\n        evaluators: checkedIdOfEvaluator.map((item) => ({userId: item.evaluatorId})),\n        evaluatees: checkedIdOfEvaluatee.map((item) => ({userId: item.evaluateeId})),\n      }\n      try {\n        const response: any = await EventsApi.updateEvent(stateLocation.id, data)\n        if (response.status === 200) {\n          const scoringData = buttonsOfValue.map((item) => ({\n            scoringValue: item.scoringValue,\n            scoringName: item.scoringName,\n            eventId: response.data.id,\n          }))\n\n          const newArrayEvalautorEvaluatees: {evaluatorId?: number; evaluateeId: number}[] = []\n\n          checkedOfEvaluatee.forEach((item) => {\n            newArrayEvalautorEvaluatees.push({\n              evaluatorId: item.evaluatorId,\n              evaluateeId: item.evaluateeId,\n            })\n          })\n\n          const response2 = await ScoringsApi.updateScoring(stateLocation.id, {\n            eventId: stateLocation.id,\n            scoringArr: scoringData,\n          })\n\n          const response3 = await EventsApi.updateEventEvaluatorEvaluatees({\n            eventId: stateLocation.id,\n            evaluatorEvaluateeArr: newArrayEvalautorEvaluatees,\n          })\n\n          const response4 = await BonusesApi.updateBonus(stateLocation.id, {\n            eventId: stateLocation.id,\n            bonusArr: [\n              ...rangesOfvalue.map((item) => ({\n                eventId: stateLocation.id,\n                bonusPercentage: item.bonusPercentage,\n                bonusRangeFrom: item.bonusRangeFrom,\n                bonusRangeTo: item.bonusRangeTo,\n                bonusRangeName: item.bonusRangeName,\n              })),\n            ],\n          })\n\n          if (response2.status === 200 || response3.status === 200 || response4.status === 200) {\n            setOpenModalSuccess(true)\n            setStartDate('')\n            setEndDate('')\n            setEventEvaluatee([])\n            setEventEvaluator([])\n            setCheckedIdOfEvaluatee([])\n            setCheckedIdOfEvaluator([])\n            setEventTitle('')\n          }\n        } else {\n          setOpenModalError(true)\n          setErrorMessage(response.response.data.message)\n        }\n        setIsLoading(false)\n      } catch (err) {\n        setIsLoading(false)\n        console.log(err)\n      } finally {\n        setIsLoading(false)\n      }\n    } else {\n      setError(true)\n    }\n  }\n\n  const handleNext = () => {\n    setClickedNext(true)\n    if (nextStep) {\n      setError(false)\n      const newCompleted = completed\n      newCompleted[activeStep] = true\n      setCompleted(newCompleted)\n      setActiveStep(activeStep + 1)\n    } else {\n      setError(true)\n    }\n  }\n\n  useEffect(() => {\n    if (clickedNext) {\n      if (!startDate && !endDate) {\n        setErrorDate(true)\n      } else {\n        setErrorDate(false)\n      }\n\n      if (!eventTitle) {\n        setErrorEventTitle(true)\n      } else {\n        setErrorEventTitle(false)\n      }\n\n      if (!eventEvaluator.length) {\n        setErrorEvaluators(true)\n      } else {\n        setErrorEvaluators(false)\n      }\n\n      if (!eventEvaluatee.length) {\n        setErrorEvaluatees(true)\n      } else {\n        setErrorEvaluatees(false)\n      }\n    }\n  }, [startDate, clickedNext, endDate, eventTitle, eventEvaluator, eventEvaluatee])\n\n  const handleBack = () => {\n    setClickedNext(false)\n    setErrorEvaluatees(false)\n    setErrorEvaluators(false)\n    setErrorEventTitle(false)\n    setErrorDate(false)\n    setNextStep(true)\n    setError(false)\n    const newCompleted = completed\n    newCompleted[activeStep] = false\n    setCompleted(newCompleted)\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleCloseSuccessModal = () => {\n    setOpenModalSuccess(false)\n    navigate('/events')\n  }\n\n  const handleCloseErrorModal = () => setOpenModalError(false)\n\n  const handleWithScores = () => {\n    setErrorDate(false)\n    setErrorEventTitle(false)\n    setErrorEvaluators(false)\n    setErrorEvaluatees(false)\n    setErrorCheckedOfEvaluatee(false)\n    setClickedNext(false)\n    setWithScores(true)\n    setError(false)\n    const newCompleted = completed\n    newCompleted[activeStep] = true\n    setCompleted(newCompleted)\n    setActiveStep(activeStep + 1)\n  }\n\n  const handleWithoutScores = () => {\n    setErrorDate(false)\n    setErrorEventTitle(false)\n    setErrorEvaluators(false)\n    setErrorEvaluatees(false)\n    setErrorCheckedOfEvaluatee(false)\n    setClickedNext(false)\n    setWithScores(false)\n    setError(false)\n    const newCompleted = completed\n    newCompleted[activeStep] = true\n    setCompleted(newCompleted)\n    setActiveStep(activeStep + 1)\n  }\n\n  const renderBackButton = () => (\n    <Box className={`${activeStep === 0 && classes.displayNone} mr-46`}>\n      <ButtonTranparentBorder handleClick={handleBack} title=\"Back\" width=\"width150\" />\n    </Box>\n  )\n\n  const renderSaveButton = () => {\n    if (!clone && !view && !stateLocation.createNewEvent && activeStep + 1 === steps.length) {\n      return <ButtonBlue handleClick={handleSave} title=\"SAVE\" width=\"width150\" size=\"large\" />\n    }\n  }\n  const renderPublishButton = () => (\n    <ButtonBlue handleClick={completedSteps} title=\"Publish\" width=\"width150\" size=\"large\" />\n  )\n\n  const renderNextButton = () => {\n    if (isLoading || isQuestionsLoading) {\n      return <CircularProgress />\n    }\n    return (\n      <Box>\n        {activeStep >= steps.length - 5 && activeStep !== steps.length - 1 && (\n          <ButtonBlue handleClick={handleNext} width=\"width150\" title=\"NEXT\" />\n        )}\n      </Box>\n    )\n  }\n\n  useEffect(() => {\n    if (stateLocation.id) {\n      const updatedRangesOfValue = rangesOfvalue.map((item) => ({\n        ...item,\n        bonusRangeTo: rangeMax,\n        bonusRangeFrom: rangeMin,\n      }))\n      setRangesOfValue(updatedRangesOfValue)\n    } else {\n      const minCount = questions.reduce(\n        (first, second) => first + Number(second.coefficient) * Number(ratePointFrom),\n        0,\n      )\n      const maxCount = questions.reduce(\n        (first, second) => first + Number(second.coefficient) * Number(ratePointTo),\n        0,\n      )\n      setRangeMin(minCount.toString())\n      setRangeMax(maxCount.toString())\n      const updatedRangesOfValue = rangesOfvalue.map((item) => ({\n        ...item,\n        bonusRangeTo: maxCount.toString(),\n        bonusRangeFrom: minCount.toString(),\n      }))\n      setRangesOfValue(updatedRangesOfValue)\n    }\n  }, [ratePointTo, ratePointFrom, questions, rangeMax, rangeMin])\n\n  return (\n    <Box className=\"create-event-page\">\n      <Box className=\"font-size-16 d-flex align-center\">\n        <Link\n          className=\"text-decoration-none align-center color-black d-flex font-weight-400\"\n          to=\"/events\"\n        >\n          <LeftIcon />\n          <Box className=\"font-weight-700 ml-16 font-size-24 heading\">New Event</Box>\n        </Link>\n      </Box>\n      <Box className=\"mt-30 pb-20\">\n        <StepperPage\n          steps={steps}\n          completed={completed}\n          activeStep={activeStep}\n          stepperAllActive={false}\n        />\n        <Box className=\"mt-50\">\n          <Box>\n            {stateLocation.createNewEvent && activeStep === 0 && (\n              <Box className=\"select-scores-container align-center font-size-14 mt-40\">\n                <Box className={`${classes.marginRight20}`}>\n                  <ButtonBlue\n                    handleClick={handleWithScores}\n                    width=\"width190\"\n                    padding=\"padding34\"\n                    title=\"Create event with scores\"\n                  />\n                </Box>\n                <Box className={`${classes.marginRight20}`}>\n                  <ButtonBlue\n                    handleClick={handleWithoutScores}\n                    width=\"width190\"\n                    title=\"Create event without scores\"\n                    padding=\"padding34\"\n                  />\n                </Box>\n              </Box>\n            )}\n            {(stateLocation.createNewEvent ? activeStep === 1 : activeStep === 0) && (\n              <Box className={`${classes.creatEventContainer}`}>\n                <Box className=\"d-flex justify-center\">\n                  <Step1\n                    afterStartEvent={afterStartEvent}\n                    setNextStep={setNextStep}\n                    error={error}\n                    view={view}\n                  />\n                </Box>\n              </Box>\n            )}\n            {(stateLocation.createNewEvent ? activeStep === 2 : activeStep === 1) && (\n              <Box className={`${classes.creatEventContainer}`}>\n                <Step2\n                  clickedNext={clickedNext}\n                  afterStartEvent={afterStartEvent}\n                  error={error}\n                  setNextStep={setNextStep}\n                  getEvaluatorEvaluatee={getEvaluatorEvaluatee}\n                  view={view}\n                />\n              </Box>\n            )}\n            {(stateLocation.createNewEvent ? activeStep === 3 : activeStep === 2) && (\n              <Step3\n                afterStartEvent={afterStartEvent}\n                error={error}\n                isQuestionsLoading={isQuestionsLoading}\n                setIsQuestionsLoading={setIsQuestionsLoading}\n                fullQuestions={fullQuestions}\n                view={view}\n                setNextStep={setNextStep}\n              />\n            )}\n            {(stateLocation.createNewEvent ? activeStep === 4 : activeStep === 3) && (\n              <Step4 setNextStep={setNextStep} error={error} view={view} />\n            )}\n            {(stateLocation.createNewEvent ? activeStep === 5 : activeStep === 4) && (\n              <Step5 setNextStep={setNextStep} error={error} view={view} />\n            )}\n          </Box>\n          <Box className=\"create-event-buttons justify-center mt-60\">\n            {renderBackButton()}\n            {renderNextButton()}\n            <Box>\n              {!isLoading && renderSaveButton()}\n              {!isLoading && clone && activeStep + 1 === steps.length && renderPublishButton()}\n              {!isLoading &&\n                !clone &&\n                stateLocation.createNewEvent &&\n                activeStep + 1 === steps.length &&\n                renderPublishButton()}\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      <SuccessModal openModal={openModalSuccess} closeModal={handleCloseSuccessModal} />\n      <ErrorModal\n        openModal={openModalError}\n        errorMessage={errorMessage}\n        closeModal={handleCloseErrorModal}\n      />\n    </Box>\n  )\n}\n\nexport default EventCreate\n"]},"metadata":{},"sourceType":"module"}