{"ast":null,"code":"import axios from '../axios';\n\nconst getEventsList = async () => {\n  const data = await axios.get('Event/getEvents');\n  return data;\n};\n\nconst getFullEventsPairsByAdmin = async (eventId, page, pageSize) => {\n  const data = await axios.get(`Event/getFullEventPairsByAdmin/${eventId}/${page}/${pageSize}`);\n  return data;\n}; // TODO: Finish this endpoint\n\n\nconst getFullEventsList = async (page, pageSize) => {\n  const data = await axios.get(`Event/getFullEvents/${page}/${pageSize}`);\n  return data;\n}; // TODO: Finish this endpoint\n\n\nconst getEventsByAdminList = async () => {\n  const data = await axios.get(`Event/getEventsByAdmin`);\n  return data;\n};\n\nconst getFullEventsByAdminList = async (page, pageSize) => {\n  const data = await axios.get(`Event/getFullEventsByAdmin/${page}/${pageSize}`);\n  return data;\n};\n\nconst getEvent = async id => {\n  const data = await axios.get(`Event/getEvent/${id}`);\n  return data;\n}; // TODO: Finish this endpoint\n\n\nconst getFullEvent = async id => {\n  const data = await axios.get(`Event/getFullEvent/${id}`);\n  return data;\n};\n\nconst sendEmailToEvaluatorsForEditEvent = async eventId => {\n  const response = await axios.post(`Event/sendEmailToEvaluatorsForEditEvent`, eventId);\n  return response;\n};\n\nconst createEvent = async data => {\n  const response = await axios.post('Event/createEvent', data);\n  return response;\n};\n\nconst updateEvent = async (id, data) => {\n  const response = await axios.put(`Event/updateEvent/${id}`, data);\n  return response;\n};\n\nconst deleteEvent = async id => {\n  const response = await axios.delete(`Event/deleteEvent/${id}`);\n  return response;\n};\n\nconst createEventEvaluatorEvaluatees = async data => {\n  const response = await axios.post(`Event/createEventEvaluatorEvaluatees`, data);\n  return response;\n};\n\nconst updateEventEvaluatorEvaluatees = async data => {\n  const response = await axios.post(`Event/updateEventEvaluatorEvaluatees`, data);\n  return response;\n};\n\nconst getEventEvaluatorEvaluatees = async (eventId, evaluatorId) => {\n  const response = await axios.get(`/Event/getEventEvaluatorEvaluatees/${eventId}/${evaluatorId}`);\n  return response;\n};\n\nconst EventsApi = {\n  getEventsList,\n  getFullEventsList,\n  getEventsByAdminList,\n  getFullEventsByAdminList,\n  getEvent,\n  getFullEvent,\n  createEvent,\n  updateEvent,\n  deleteEvent,\n  getFullEventsPairsByAdmin,\n  createEventEvaluatorEvaluatees,\n  updateEventEvaluatorEvaluatees,\n  getEventEvaluatorEvaluatees,\n  sendEmailToEvaluatorsForEditEvent\n};\nexport default EventsApi;","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/api/events.ts"],"names":["axios","getEventsList","data","get","getFullEventsPairsByAdmin","eventId","page","pageSize","getFullEventsList","getEventsByAdminList","getFullEventsByAdminList","getEvent","id","getFullEvent","sendEmailToEvaluatorsForEditEvent","response","post","createEvent","updateEvent","put","deleteEvent","delete","createEventEvaluatorEvaluatees","updateEventEvaluatorEvaluatees","getEventEvaluatorEvaluatees","evaluatorId","EventsApi"],"mappings":"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","sourcesContent":["import axios from '../axios'\n\nconst getEventsList = async () => {\n  const data = await axios.get('Event/getEvents')\n  return data\n}\n\nconst getFullEventsPairsByAdmin = async (eventId: number, page: number, pageSize: number) => {\n  const data = await axios.get(`Event/getFullEventPairsByAdmin/${eventId}/${page}/${pageSize}`)\n  return data\n}\n\n// TODO: Finish this endpoint\nconst getFullEventsList = async (page: number, pageSize: number) => {\n  const data = await axios.get(`Event/getFullEvents/${page}/${pageSize}`)\n  return data\n}\n\n// TODO: Finish this endpoint\nconst getEventsByAdminList = async () => {\n  const data = await axios.get(`Event/getEventsByAdmin`)\n  return data\n}\n\nconst getFullEventsByAdminList = async (page: number, pageSize: number) => {\n  const data = await axios.get(`Event/getFullEventsByAdmin/${page}/${pageSize}`)\n  return data\n}\n\nconst getEvent = async (id: number | string | undefined) => {\n  const data = await axios.get(`Event/getEvent/${id}`)\n  return data\n}\n\n// TODO: Finish this endpoint\nconst getFullEvent = async (id: number) => {\n  const data = await axios.get(`Event/getFullEvent/${id}`)\n  return data\n}\n\nconst sendEmailToEvaluatorsForEditEvent = async (eventId: string) => {\n  const response = await axios.post(`Event/sendEmailToEvaluatorsForEditEvent`, eventId)\n  return response\n}\n\nconst createEvent = async (data: {startDate: string; dueDate: string}) => {\n  const response = await axios.post('Event/createEvent', data)\n  return response\n}\n\nconst updateEvent = async (id: number | undefined, data: {startDate: string; dueDate: string}) => {\n  const response = await axios.put(`Event/updateEvent/${id}`, data)\n  return response\n}\n\nconst deleteEvent = async (id: number | string) => {\n  const response = await axios.delete(`Event/deleteEvent/${id}`)\n  return response\n}\n\nconst createEventEvaluatorEvaluatees = async (data: {\n  eventId: number\n  evaluatorEvaluateeArr: {\n    evaluatorId?: number\n    evaluateeId: number\n  }[]\n}) => {\n  const response = await axios.post(`Event/createEventEvaluatorEvaluatees`, data)\n  return response\n}\nconst updateEventEvaluatorEvaluatees = async (data: {\n  eventId: number\n  evaluatorEvaluateeArr: {\n    evaluatorId?: number\n    evaluateeId: number\n  }[]\n}) => {\n  const response = await axios.post(`Event/updateEventEvaluatorEvaluatees`, data)\n  return response\n}\n\nconst getEventEvaluatorEvaluatees = async (eventId: number | undefined, evaluatorId: number) => {\n  const response = await axios.get(`/Event/getEventEvaluatorEvaluatees/${eventId}/${evaluatorId}`)\n  return response\n}\n\nconst EventsApi = {\n  getEventsList,\n  getFullEventsList,\n  getEventsByAdminList,\n  getFullEventsByAdminList,\n  getEvent,\n  getFullEvent,\n  createEvent,\n  updateEvent,\n  deleteEvent,\n  getFullEventsPairsByAdmin,\n  createEventEvaluatorEvaluatees,\n  updateEventEvaluatorEvaluatees,\n  getEventEvaluatorEvaluatees,\n  sendEmailToEvaluatorsForEditEvent,\n}\n\nexport default EventsApi\n"]},"metadata":{},"sourceType":"module"}