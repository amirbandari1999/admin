{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/events/viewForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, CircularProgress, TextField } from '@mui/material';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport SelectButton from '../../layouts/selectButton';\nimport StepperPage from '../../layouts/stepper'; // import CirclePercent from '../../layouts/circlePercent/circlePercent'\n\nimport QuestionApi from '../../api/question';\nimport useStyles from '../../assets/makeStyles/evaluatorsStep/evaluatorsStep';\nimport EvaluationApi from '../../api/evaluation';\nimport EventsApi from '../../api/events';\nimport SelectButtonWithText from '../../layouts/selectButtonWithText';\nimport ScoringsApi from '../../api/scoring';\nimport ButtonTranparentBorder from '../../layouts/buttons/buttonTransparentBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewForm = () => {\n  _s();\n\n  const location = useLocation();\n  const classesEvaluatorsStep = useStyles();\n  const {\n    id,\n    adminId,\n    eventPairModelOut,\n    ratePointFrom,\n    ratePointTo\n  } = location.state;\n  const [isLoading, setIsLoading] = useState(false);\n  const [questionGroups, setQuestionGroups] = useState([]);\n  const [subQuestions, setSubQuestions] = useState([]);\n  const [activeStep, setActiveStep] = useState(0);\n  const [completed, setCompleted] = useState({});\n  const [evaluationType, setEvaluationType] = useState(false);\n  const [scorings, setScorings] = useState([]);\n  const [buttonNextDisabled, setButtonNextDisabled] = useState(true);\n  const [stepperAllActive] = useState(false);\n  const [steps, setSteps] = useState([1, 2, 3]);\n  const [stepsPairModelOut, setStepsPairModelOut] = useState(0);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      setIsLoading(true);\n      const questionGroupsData = await QuestionApi.getQuestionsGroups();\n      setQuestionGroups(questionGroupsData.data);\n      const response = await EvaluationApi.filterEvaluations(adminId, id, -1, -1, eventPairModelOut[stepsPairModelOut].evaluatees.id);\n      setSubQuestions(response.data);\n      setIsLoading(false);\n    })();\n  }, []);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      const response = await EventsApi.getEvent(id);\n\n      if (response.status) {\n        setEvaluationType(response.data.evaluationType === 0);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    if (evaluationType) {\n      ;\n\n      (async () => {\n        const response2 = await ScoringsApi.getScoringList(id);\n        setScorings(response2.data);\n      })();\n    }\n  }, [evaluationType]);\n  useEffect(() => {\n    if (!subQuestions || !subQuestions.length) {\n      setButtonNextDisabled(true);\n    } else {\n      setButtonNextDisabled(false);\n    }\n  }, [subQuestions, questionGroups]);\n  useEffect(() => {\n    if (questionGroups) {\n      setSteps(Object.keys(questionGroups));\n    }\n  }, [questionGroups]);\n\n  const handleBack = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = false;\n    setCompleted(newCompleted);\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleNext = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    setActiveStep(activeStep + 1);\n    setStepsPairModelOut(stepsPairModelOut + 1);\n  };\n\n  useEffect(() => {\n    const updateQuestionGroups = questionGroups && subQuestions && questionGroups.filter(item => subQuestions.some(item2 => {\n      if (item.id === item2.question.questionGroupId) {\n        return true;\n      }\n\n      return false;\n    })).map(item => item);\n    setQuestionGroups(updateQuestionGroups);\n  }, [subQuestions]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"submission-view-form-page\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"d-flex color-dark-blue font-weight-400 font-size-18\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-decoration-none color-dark-blue\",\n          to: \"/events\",\n          children: \"Events /\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-decoration-none color-dark-blue\",\n          to: {\n            pathname: '/events',\n            search: '?fromViewForm'\n          },\n          children: [' ', \"Submissions /\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"span\",\n          className: \"bold\",\n          children: [' ', \"View Form\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"submission-view-form-container\",\n      children: [steps && !steps.length && 'There is not data', /*#__PURE__*/_jsxDEV(StepperPage, {\n        steps: steps || [],\n        activeStep: activeStep,\n        completed: completed,\n        stepperAllActive: stepperAllActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), questionGroups && questionGroups.map((item, index) => index === activeStep && /*#__PURE__*/_jsxDEV(Box, {\n        className: \"bg-white mt-30 b-radius-10\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"view-form-heading-checkbox color-dark-blue\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"font-weight-700 font-size-16 line-height-22\",\n            children: item.questionGroupTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"font-weight-400 mt-12 font-size-15 line-height-20 d-flex align-center\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: \"You can choose which score include in the report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"view-form-body-container \",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"w-100 text-center\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 23\n          }, this), subQuestions && subQuestions.map(item2 => item2.question.questionGroupId === item.id && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"width-fit-content mt-64\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"mt-10 color-dark-blue\",\n              children: [item2.question.questionTitle, /*#__PURE__*/_jsxDEV(Box, {\n                className: \"mt-20\",\n                children: evaluationType ? /*#__PURE__*/_jsxDEV(SelectButtonWithText, {\n                  scorings: scorings,\n                  disabled: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(SelectButton, {\n                  ratePointFrom: ratePointFrom,\n                  ratePointTo: ratePointTo,\n                  disabled: true,\n                  point: item2.point\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: \"mt-10 font-size-13 color-light-gray2 font-weight-400 line-height-12 align-center d-flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: \"Not at all\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: \"Excellent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: \"question-feedback mt-20 width-100\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  id: \"standard-multiline-flexible\",\n                  multiline: true,\n                  maxRows: 4,\n                  fullWidth: true,\n                  value: item2.evaluationText,\n                  label: \"Feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 31\n            }, this)\n          }, item2.question.questionGroupId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)), !isLoading && buttonNextDisabled && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"width-100 text-center mt-18\",\n            children: \"There is not data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"d-flex justify-center view-form-button-container\",\n          children: [activeStep > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"mr-46 mt-10\",\n            children: /*#__PURE__*/_jsxDEV(ButtonTranparentBorder, {\n              width: \"width150\",\n              handleClick: handleBack,\n              title: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: `${activeStep === steps.length - 1 && classesEvaluatorsStep.displayNone} ${classesEvaluatorsStep.normalSizeButton} mr-46 mt-10 `,\n            children: /*#__PURE__*/_jsxDEV(ButtonTranparentBorder, {\n              handleClick: handleNext,\n              title: \"Next\",\n              width: \"width150\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewForm, \"GfVjP2j9ETGzQuXZeQGpw7wqjE8=\", false, function () {\n  return [useLocation, useStyles];\n});\n\n_c = ViewForm;\nexport default ViewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewForm\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/events/viewForm.tsx"],"names":["React","useEffect","useState","Box","CircularProgress","TextField","useLocation","Link","SelectButton","StepperPage","QuestionApi","useStyles","EvaluationApi","EventsApi","SelectButtonWithText","ScoringsApi","ButtonTranparentBorder","ViewForm","location","classesEvaluatorsStep","id","adminId","eventPairModelOut","ratePointFrom","ratePointTo","state","isLoading","setIsLoading","questionGroups","setQuestionGroups","subQuestions","setSubQuestions","activeStep","setActiveStep","completed","setCompleted","evaluationType","setEvaluationType","scorings","setScorings","buttonNextDisabled","setButtonNextDisabled","stepperAllActive","steps","setSteps","stepsPairModelOut","setStepsPairModelOut","questionGroupsData","getQuestionsGroups","data","response","filterEvaluations","evaluatees","getEvent","status","response2","getScoringList","length","Object","keys","handleBack","newCompleted","prevActiveStep","handleNext","updateQuestionGroups","filter","item","some","item2","question","questionGroupId","map","pathname","search","index","questionGroupTitle","questionTitle","point","evaluationText","displayNone","normalSizeButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Box, CircularProgress, TextField} from '@mui/material'\nimport {useLocation} from 'react-router'\nimport {Link} from 'react-router-dom'\nimport SelectButton from '../../layouts/selectButton'\nimport StepperPage from '../../layouts/stepper'\n// import CirclePercent from '../../layouts/circlePercent/circlePercent'\nimport {QuestionGroup} from '../../interfaces/evaulateEvent'\nimport QuestionApi from '../../api/question'\nimport useStyles from '../../assets/makeStyles/evaluatorsStep/evaluatorsStep'\nimport {TypeLocationState} from '../../shared/types/location/location'\nimport {IViewForm} from '../../shared/types/viewForm/viewForm'\nimport EvaluationApi from '../../api/evaluation'\nimport EventsApi from '../../api/events'\nimport SelectButtonWithText from '../../layouts/selectButtonWithText'\nimport ScoringsApi from '../../api/scoring'\nimport ButtonTranparentBorder from '../../layouts/buttons/buttonTransparentBorder'\n\nconst ViewForm = () => {\n  const location = useLocation()\n  const classesEvaluatorsStep = useStyles()\n\n  const {id, adminId, eventPairModelOut, ratePointFrom, ratePointTo} =\n    location.state as TypeLocationState\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [questionGroups, setQuestionGroups] = useState<QuestionGroup[]>([])\n  const [subQuestions, setSubQuestions] = useState<IViewForm[]>([])\n  const [activeStep, setActiveStep] = useState(0)\n  const [completed, setCompleted] = useState<{\n    [k: number]: boolean\n  }>({})\n  const [evaluationType, setEvaluationType] = useState(false)\n  const [scorings, setScorings] = useState<\n    {eventId: number; id: number; scoringName: string; scoringValue: number}[]\n  >([])\n\n  const [buttonNextDisabled, setButtonNextDisabled] = useState<boolean>(true)\n\n  const [stepperAllActive] = useState(false)\n\n  const [steps, setSteps] = useState<string[] | number[]>([1, 2, 3])\n\n  const [stepsPairModelOut, setStepsPairModelOut] = useState<number>(0)\n\n  useEffect(() => {\n    ;(async () => {\n      setIsLoading(true)\n      const questionGroupsData = await QuestionApi.getQuestionsGroups()\n      setQuestionGroups(questionGroupsData.data)\n\n      const response = await EvaluationApi.filterEvaluations(\n        adminId,\n        id,\n        -1,\n        -1,\n        eventPairModelOut[stepsPairModelOut].evaluatees.id,\n      )\n      setSubQuestions(response.data)\n      setIsLoading(false)\n    })()\n  }, [])\n\n  useEffect(() => {\n    ;(async () => {\n      const response = await EventsApi.getEvent(id)\n      if (response.status) {\n        setEvaluationType(response.data.evaluationType === 0)\n      }\n    })()\n  }, [])\n\n  useEffect(() => {\n    if (evaluationType) {\n      ;(async () => {\n        const response2 = await ScoringsApi.getScoringList(id)\n        setScorings(response2.data)\n      })()\n    }\n  }, [evaluationType])\n\n  useEffect(() => {\n    if (!subQuestions || !subQuestions.length) {\n      setButtonNextDisabled(true)\n    } else {\n      setButtonNextDisabled(false)\n    }\n  }, [subQuestions, questionGroups])\n\n  useEffect(() => {\n    if (questionGroups) {\n      setSteps(Object.keys(questionGroups))\n    }\n  }, [questionGroups])\n\n  const handleBack = () => {\n    const newCompleted = completed\n    newCompleted[activeStep] = false\n    setCompleted(newCompleted)\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleNext = () => {\n    const newCompleted = completed\n    newCompleted[activeStep] = true\n    setCompleted(newCompleted)\n    setActiveStep(activeStep + 1)\n    setStepsPairModelOut(stepsPairModelOut + 1)\n  }\n\n  useEffect(() => {\n    const updateQuestionGroups =\n      questionGroups &&\n      subQuestions &&\n      questionGroups\n        .filter((item) =>\n          subQuestions.some((item2) => {\n            if (item.id === item2.question.questionGroupId) {\n              return true\n            }\n            return false\n          }),\n        )\n        .map((item) => item)\n    setQuestionGroups(updateQuestionGroups)\n  }, [subQuestions])\n\n  return (\n    <Box className=\"submission-view-form-page\">\n      <Box className=\"d-flex color-dark-blue font-weight-400 font-size-18\">\n        <Box>\n          <Link className=\"text-decoration-none color-dark-blue\" to=\"/events\">\n            Events /\n          </Link>\n          <Link\n            className=\"text-decoration-none color-dark-blue\"\n            to={{\n              pathname: '/events',\n              search: '?fromViewForm',\n            }}\n          >\n            {' '}\n            Submissions /\n          </Link>\n          <Box component=\"span\" className=\"bold\">\n            {' '}\n            View Form\n          </Box>\n        </Box>\n      </Box>\n      <Box className=\"submission-view-form-container\">\n        {steps && !steps.length && 'There is not data'}\n        <StepperPage\n          steps={steps || []}\n          activeStep={activeStep}\n          completed={completed}\n          stepperAllActive={stepperAllActive}\n        />\n        {questionGroups &&\n          questionGroups.map(\n            (item, index) =>\n              index === activeStep && (\n                <Box key={item.id} className=\"bg-white mt-30 b-radius-10\">\n                  <Box className=\"view-form-heading-checkbox color-dark-blue\">\n                    <Box className=\"font-weight-700 font-size-16 line-height-22\">\n                      {item.questionGroupTitle}\n                    </Box>\n                    <Box className=\"font-weight-400 mt-12 font-size-15 line-height-20 d-flex align-center\">\n                      <Box>You can choose which score include in the report</Box>\n                    </Box>\n                  </Box>\n                  <Box className=\"view-form-body-container \">\n                    {isLoading && (\n                      <Box className=\"w-100 text-center\">\n                        <CircularProgress />\n                      </Box>\n                    )}\n                    {subQuestions &&\n                      subQuestions.map(\n                        (item2) =>\n                          item2.question.questionGroupId === item.id && (\n                            <Box\n                              key={item2.question.questionGroupId}\n                              className=\"width-fit-content mt-64\"\n                            >\n                              <Box className=\"mt-10 color-dark-blue\">\n                                {item2.question.questionTitle}\n                                <Box className=\"mt-20\">\n                                  {evaluationType ? (\n                                    <SelectButtonWithText scorings={scorings} disabled={false} />\n                                  ) : (\n                                    <SelectButton\n                                      ratePointFrom={ratePointFrom}\n                                      ratePointTo={ratePointTo}\n                                      disabled\n                                      point={item2.point}\n                                    />\n                                  )}\n                                </Box>\n                                <Box className=\"mt-10 font-size-13 color-light-gray2 font-weight-400 line-height-12 align-center d-flex justify-between\">\n                                  <Box>Not at all</Box>\n                                  <Box>Excellent</Box>\n                                </Box>\n                                <Box className=\"question-feedback mt-20 width-100\">\n                                  <TextField\n                                    disabled\n                                    id=\"standard-multiline-flexible\"\n                                    multiline\n                                    maxRows={4}\n                                    fullWidth\n                                    value={item2.evaluationText}\n                                    label=\"Feedback\"\n                                  />\n                                </Box>\n                              </Box>\n                            </Box>\n                          ),\n                      )}\n                    {!isLoading && buttonNextDisabled && (\n                      <Box className=\"width-100 text-center mt-18\">There is not data</Box>\n                    )}\n                  </Box>\n                  <Box className=\"d-flex justify-center view-form-button-container\">\n                    {activeStep > 0 && (\n                      <Box className=\"mr-46 mt-10\">\n                        <ButtonTranparentBorder\n                          width=\"width150\"\n                          handleClick={handleBack}\n                          title=\"Back\"\n                        />\n                      </Box>\n                    )}\n                    <Box\n                      className={`${\n                        activeStep === steps.length - 1 && classesEvaluatorsStep.displayNone\n                      } ${classesEvaluatorsStep.normalSizeButton} mr-46 mt-10 `}\n                    >\n                      <ButtonTranparentBorder\n                        handleClick={handleNext}\n                        title=\"Next\"\n                        width=\"width150\"\n                      />\n                    </Box>\n                    {/* <Box className=\"mt-10\"> */}\n                    {/* <Button */}\n                    {/*  onClick={() => setOpenModalAdd(true)} */}\n                    {/*  variant=\"contained\" */}\n                    {/*  className={`${classesButton.colorBlueButton}`} */}\n                    {/*  color=\"blue\" */}\n                    {/*  size=\"large\" */}\n                    {/* > */}\n                    {/*  ADD TO SAVED SUBMISSIONS */}\n                    {/* </Button> */}\n                    {/* <SavedModal openModal={openModalAdd} closeModal={handleCloseModal} /> */}\n                    {/* </Box> */}\n                  </Box>\n                </Box>\n              ),\n          )}\n      </Box>\n    </Box>\n  )\n}\nexport default ViewForm\n"]},"metadata":{},"sourceType":"module"}