{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/templates/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box } from '@mui/material'; // import moment from 'moment'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport EnhancedTable from '../../layouts/table/table'; // import Date from '../../layouts/fields/date'\n\nimport QuestionApi from '../../api/question';\nimport PaginationContainer from '../../layouts/pagination/pagination'; // import AssignDates from '../../layouts/assignDates/assignDates'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [searchResult] = useState(); // const [startDate, setStartDate] = useState<string>('')\n  // const [endDate, setEndDate] = useState<string>('')\n\n  const [rows, setRows] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [countPagination, setCountPagination] = useState(0);\n  const [limitData] = useState(0);\n  useEffect(() => {\n    if (limitData) {\n      if (pageSize >= limitData) {\n        setCountPagination(1);\n      } else {\n        setCountPagination(Math.ceil(limitData / pageSize));\n      }\n    }\n  }, [limitData, pageSize, page]); // const handleChangeDate = (start: string, end: string) => {\n  //   setStartDate(start)\n  //   setEndDate(end)\n  // }\n\n  useEffect(() => {\n    ;\n\n    (async () => {\n      setIsLoading(true);\n      const response = await QuestionApi.getTemplates(); // setLimitData(response.data.totalEventsCount)\n\n      setRows(response.data);\n      setIsLoading(false);\n    })();\n  }, []); // useEffect(() => {\n  //   if (dateValue) {\n  //     const results = rows.filter((item) =>\n  //       item.date\n  //         .toLowerCase()\n  //         .includes(moment(dateValue).format('MM/DD/yyyy').toString().toLowerCase()),\n  //     )\n  //     setSearchResults(results)\n  //   } else {\n  //     setSearchResults(undefined)\n  //   }\n  // }, [dateValue, rows])\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"page-padding\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"page-heading\",\n        children: \"Templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mt-40\",\n        children: !isLoading && rows && rows.length ? /*#__PURE__*/_jsxDEV(Box, {\n          className: \"mb-22\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTable, {\n            table: \"templates\",\n            rows: searchResult || rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PaginationContainer, {\n            limitData: limitData,\n            setPage: setPage,\n            page: page,\n            countPagination: countPagination,\n            pageSize: pageSize,\n            setPageSize: setPageSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-center\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 28\n          }, this) : 'There is not data'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"/BFey8gCdkuILxjXgH0Li1Vjfh0=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/templates/index.tsx"],"names":["React","useEffect","useState","Box","CircularProgress","EnhancedTable","QuestionApi","PaginationContainer","Index","searchResult","rows","setRows","isLoading","setIsLoading","page","setPage","pageSize","setPageSize","countPagination","setCountPagination","limitData","Math","ceil","response","getTemplates","data","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Box} from '@mui/material'\n// import moment from 'moment'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport EnhancedTable from '../../layouts/table/table'\n// import Date from '../../layouts/fields/date'\nimport {IEnhancedTemplatesTableRows} from '../../shared/types/table/table'\nimport QuestionApi from '../../api/question'\nimport PaginationContainer from '../../layouts/pagination/pagination'\n// import AssignDates from '../../layouts/assignDates/assignDates'\n\nconst Index = () => {\n  const [searchResult] = useState<IEnhancedTemplatesTableRows[]>()\n  // const [startDate, setStartDate] = useState<string>('')\n  // const [endDate, setEndDate] = useState<string>('')\n  const [rows, setRows] = useState<any[]>([])\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [page, setPage] = useState<number>(1)\n  const [pageSize, setPageSize] = useState<number>(10)\n  const [countPagination, setCountPagination] = useState<number>(0)\n  const [limitData] = useState<number | undefined>(0)\n\n  useEffect(() => {\n    if (limitData) {\n      if (pageSize >= limitData) {\n        setCountPagination(1)\n      } else {\n        setCountPagination(Math.ceil(limitData / pageSize))\n      }\n    }\n  }, [limitData, pageSize, page])\n\n  // const handleChangeDate = (start: string, end: string) => {\n  //   setStartDate(start)\n  //   setEndDate(end)\n  // }\n\n  useEffect(() => {\n    ;(async () => {\n      setIsLoading(true)\n\n      const response = await QuestionApi.getTemplates()\n      // setLimitData(response.data.totalEventsCount)\n\n      setRows(response.data)\n      setIsLoading(false)\n    })()\n  }, [])\n\n  // useEffect(() => {\n  //   if (dateValue) {\n  //     const results = rows.filter((item) =>\n  //       item.date\n  //         .toLowerCase()\n  //         .includes(moment(dateValue).format('MM/DD/yyyy').toString().toLowerCase()),\n  //     )\n  //     setSearchResults(results)\n  //   } else {\n  //     setSearchResults(undefined)\n  //   }\n  // }, [dateValue, rows])\n\n  return (\n    <Box className=\"page-container\">\n      <Box className=\"page-padding\">\n        <Box className=\"page-heading\">Templates</Box>\n        {/*<Box className=\"mt-30\">*/}\n        {/*<AssignDates*/}\n        {/*  applyHandle={handleChangeDate}*/}\n        {/*  startDateProps={startDate}*/}\n        {/*  endDateProps={endDate}*/}\n        {/*  disabled={false}*/}\n        {/*  border={false}*/}\n        {/*  fromToday={false}*/}\n        {/*/>*/}\n        {/*<Date*/}\n        {/*  value={dateValue}*/}\n        {/*  onChange={handleChangeDate}*/}\n        {/*  border={false}*/}\n        {/*  placeholder=\"Search Template by Event title and/or date\"*/}\n        {/*/>*/}\n        {/*</Box>*/}\n        <Box className=\"mt-40\">\n          {!isLoading && rows && rows.length ? (\n            <Box className=\"mb-22\">\n              <EnhancedTable table=\"templates\" rows={searchResult || rows} />\n              <PaginationContainer\n                limitData={limitData}\n                setPage={setPage}\n                page={page}\n                countPagination={countPagination}\n                pageSize={pageSize}\n                setPageSize={setPageSize}\n              />\n            </Box>\n          ) : (\n            <div className=\"d-flex justify-center\">\n              {isLoading ? <CircularProgress /> : 'There is not data'}\n            </div>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\nexport default Index\n"]},"metadata":{},"sourceType":"module"}