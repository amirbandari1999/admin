{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/events/steps/step5.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Box, Button, IconButton, TextField } from '@mui/material';\nimport uuid from 'react-uuid';\nimport PercentIcon from '@mui/icons-material/Percent';\nimport DeleteIcon from '../../../assets/images/Icons/deleteIcon';\nimport useStylesTextFields from '../../../assets/makeStyles/textFields/textFields';\nimport { UseCreateEventContext } from '../../../context/createEventContext/createEventContext';\nimport MakeStyles from '../../../assets/makeStyles/makeStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Step5 = _ref => {\n  _s();\n\n  let {\n    view,\n    error,\n    setNextStep\n  } = _ref;\n  const classesTextFields = useStylesTextFields();\n  const classes = MakeStyles();\n  const {\n    rangesOfvalue,\n    setRangesOfValue,\n    rangeMin,\n    rangeMax\n  } = UseCreateEventContext();\n  useEffect(() => {\n    const findError = rangesOfvalue.find(item => !item.bonusPercentage || !item.bonusRangeName || !item.bonusRangeFrom || !item.bonusRangeTo || Number(item.bonusRangeFrom) < Number(rangeMin) || Number(item.bonusRangeFrom) > Number(rangeMax) || Number(item.bonusRangeTo) < Number(rangeMin) || Number(item.bonusRangeTo) > Number(rangeMax));\n\n    if (findError || !rangesOfvalue.length) {\n      setNextStep(false);\n    } else {\n      setNextStep(true);\n    }\n  }, [rangesOfvalue]);\n\n  const handleChangeBonusRangeName = (e, id) => {\n    if (e.target.value.length < 100) {\n      setRangesOfValue(rangesOfvalue.map(ranges => {\n        if (ranges.id === id) {\n          return { ...ranges,\n            bonusRangeName: e.target.value\n          };\n        }\n\n        return ranges;\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"d-flex align-center justify-between\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"font-size-18 font-weight-500 line-height-22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"create-event-container-step-5 justify-around d-flex mt-14 \",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"create-event-body mt-10\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"create-event-column\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"font-size-16 mr-24 font-weight-700 line-height-22 color-dark-blue\",\n            children: \"Create/Edit ranges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: view,\n              onClick: () => rangesOfvalue.length < 10 && setRangesOfValue([...rangesOfvalue, {\n                id: uuid(),\n                bonusRangeFrom: rangeMin,\n                bonusRangeTo: rangeMax,\n                bonusPercentage: '0',\n                bonusRangeName: 'Normal'\n              }]),\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: \"text-color-gradient\",\n                children: \"Add new range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"choose-evaluation-criteria create-event-body pb-30\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"d-flex justify-between width-100 align-center\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"width-100 range-container\",\n              children: rangesOfvalue.length ? rangesOfvalue.map(item => /*#__PURE__*/_jsxDEV(Box, {\n                className: \"d-flex mt-40 justify-around align-center\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  className: \"mr-10\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"cursor-pointer\",\n                    onClick: () => !view && setRangesOfValue(rangesOfvalue.filter(item2 => item2.id !== item.id)),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"d-flex flex-column width-100\",\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      className: \"width-100 mb-10 d-flex \",\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        className: \"cursor-pointer color-dark-grey font-size-12 font-weight-400\",\n                        children: \"Range of name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      className: \"mr-10\",\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        maxRows: 4,\n                        multiline: true,\n                        onChange: e => handleChangeBonusRangeName(e, item.id),\n                        disabled: view,\n                        size: \"small\",\n                        className: `${classes.inputStyle} ${classes.bgGray} input-base`,\n                        error: !item.bonusRangeName,\n                        value: item.bonusRangeName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    className: \"mt-10 settings-container-step-5\",\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      className: \"mr-30\",\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        className: \"width-100 mb-10 d-flex\",\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          className: \"cursor-pointer color-dark-grey font-size-12 font-weight-400\",\n                          children: \"Range min to max\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 132,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        className: \"d-flex align-center mb-10\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          disabled: view,\n                          className: `${classesTextFields.numberRemoveArrowUpDown} ${classes.bgGray} ${classes.inputStyle} `,\n                          value: item.bonusRangeFrom,\n                          type: \"number\",\n                          error: item.bonusRangeFrom ? Number(item.bonusRangeFrom) < Number(rangeMin) || Number(item.bonusRangeFrom) > Number(rangeMax) : true,\n                          onChange: e => {\n                            if (Number(e.target.value) <= 100 && Number(e.target.value) > -1) {\n                              setRangesOfValue(rangesOfvalue.map(item2 => {\n                                if (item2.id === item.id) {\n                                  return { ...item2,\n                                    bonusRangeFrom: e.target.value\n                                  };\n                                }\n\n                                return item2;\n                              }));\n                            }\n                          },\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          className: \"ml-10 mr-10\",\n                          children: \"To\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 165,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          disabled: view,\n                          className: `${classesTextFields.numberRemoveArrowUpDown} ${classes.bgGray} ${classes.inputStyle}`,\n                          error: item.bonusRangeTo ? Number(item.bonusRangeTo) < Number(rangeMin) || Number(item.bonusRangeTo) > Number(rangeMax) : true,\n                          value: item.bonusRangeTo,\n                          type: \"number\",\n                          onChange: e => setRangesOfValue(rangesOfvalue.map(item2 => {\n                            if (item2.id === item.id) {\n                              return { ...item2,\n                                bonusRangeTo: e.target.value\n                              };\n                            }\n\n                            return item2;\n                          })),\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        className: \"mb-10 color-dark-grey font-size-12 font-weight-400 \",\n                        children: \"Bonus Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        className: \"d-flex align-center\",\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          className: \"input-field-percent\",\n                          children: [/*#__PURE__*/_jsxDEV(TextField, {\n                            className: \"text-field width-100\",\n                            required: true,\n                            disabled: view,\n                            id: \"outlined-required\",\n                            size: \"small\",\n                            onChange: e => {\n                              if (Number(e.target.value) <= 100 && Number(e.target.value) > -1) {\n                                setRangesOfValue(rangesOfvalue.map(item2 => {\n                                  if (item2.id === item.id) {\n                                    return { ...item2,\n                                      bonusPercentage: e.target.value\n                                    };\n                                  }\n\n                                  return item2;\n                                }));\n                              }\n                            },\n                            error: !item.bonusPercentage,\n                            value: item.bonusPercentage\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 197,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                            className: \"icon-button\",\n                            \"aria-label\": \"directions\",\n                            children: /*#__PURE__*/_jsxDEV(PercentIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 222,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 196,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n                className: \"mt-40 ml-24\",\n                children: \"There is not data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"color-red mt-30 text-center\",\n      children: error && 'Please fill out required fields'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Step5, \"xk0tT9BLG0irofXue33ABg1utHM=\", false, function () {\n  return [useStylesTextFields];\n});\n\n_c = Step5;\nexport default Step5;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step5\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/events/steps/step5.tsx"],"names":["React","useEffect","Box","Button","IconButton","TextField","uuid","PercentIcon","DeleteIcon","useStylesTextFields","UseCreateEventContext","MakeStyles","Step5","view","error","setNextStep","classesTextFields","classes","rangesOfvalue","setRangesOfValue","rangeMin","rangeMax","findError","find","item","bonusPercentage","bonusRangeName","bonusRangeFrom","bonusRangeTo","Number","length","handleChangeBonusRangeName","e","id","target","value","map","ranges","filter","item2","inputStyle","bgGray","numberRemoveArrowUpDown"],"mappings":"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","sourcesContent":["import React, {Dispatch, useEffect} from 'react'\nimport {Box, Button, IconButton, TextField} from '@mui/material'\nimport uuid from 'react-uuid'\nimport PercentIcon from '@mui/icons-material/Percent'\nimport DeleteIcon from '../../../assets/images/Icons/deleteIcon'\nimport useStylesTextFields from '../../../assets/makeStyles/textFields/textFields'\nimport {UseCreateEventContext} from '../../../context/createEventContext/createEventContext'\nimport {ICreateEventProps} from '../../../context/createEventContext/createEventContext.props'\nimport MakeStyles from '../../../assets/makeStyles/makeStyles'\n\nconst Step5 = ({\n  view,\n  error,\n  setNextStep,\n}: {\n  view: boolean\n  error: boolean\n  setNextStep: Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const classesTextFields = useStylesTextFields()\n  const classes = MakeStyles()\n  const {rangesOfvalue, setRangesOfValue, rangeMin, rangeMax} =\n    UseCreateEventContext() as ICreateEventProps\n\n  useEffect(() => {\n    const findError = rangesOfvalue.find(\n      (item) =>\n        !item.bonusPercentage ||\n        !item.bonusRangeName ||\n        !item.bonusRangeFrom ||\n        !item.bonusRangeTo ||\n        Number(item.bonusRangeFrom) < Number(rangeMin) ||\n        Number(item.bonusRangeFrom) > Number(rangeMax) ||\n        Number(item.bonusRangeTo) < Number(rangeMin) ||\n        Number(item.bonusRangeTo) > Number(rangeMax),\n    )\n    if (findError || !rangesOfvalue.length) {\n      setNextStep(false)\n    } else {\n      setNextStep(true)\n    }\n  }, [rangesOfvalue])\n\n  const handleChangeBonusRangeName = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    id: string,\n  ) => {\n    if (e.target.value.length < 100) {\n      setRangesOfValue(\n        rangesOfvalue.map((ranges) => {\n          if (ranges.id === id) {\n            return {...ranges, bonusRangeName: e.target.value}\n          }\n          return ranges\n        }),\n      )\n    }\n  }\n\n  return (\n    <Box>\n      <Box className=\"d-flex align-center justify-between\">\n        <Box className=\"font-size-18 font-weight-500 line-height-22\" />\n      </Box>\n      <Box className=\"create-event-container-step-5 justify-around d-flex mt-14 \">\n        <Box className=\"create-event-body mt-10\">\n          <Box className=\"create-event-column\">\n            <Box className=\"font-size-16 mr-24 font-weight-700 line-height-22 color-dark-blue\">\n              Create/Edit ranges\n            </Box>\n            <Box>\n              <Button\n                disabled={view}\n                onClick={() =>\n                  rangesOfvalue.length < 10 &&\n                  setRangesOfValue([\n                    ...rangesOfvalue,\n                    {\n                      id: uuid(),\n                      bonusRangeFrom: rangeMin,\n                      bonusRangeTo: rangeMax,\n                      bonusPercentage: '0',\n                      bonusRangeName: 'Normal',\n                    },\n                  ])\n                }\n              >\n                <Box className=\"text-color-gradient\">Add new range</Box>\n              </Button>\n            </Box>\n          </Box>\n          <Box className=\"choose-evaluation-criteria create-event-body pb-30\">\n            <Box className=\"d-flex justify-between width-100 align-center\">\n              <Box className=\"width-100 range-container\">\n                {rangesOfvalue.length ? (\n                  rangesOfvalue.map((item) => (\n                    <Box key={item.id} className=\"d-flex mt-40 justify-around align-center\">\n                      <Box className=\"mr-10\">\n                        <Button\n                          className=\"cursor-pointer\"\n                          onClick={() =>\n                            !view &&\n                            setRangesOfValue(rangesOfvalue.filter((item2) => item2.id !== item.id))\n                          }\n                        >\n                          <DeleteIcon />\n                        </Button>\n                      </Box>\n                      <Box className=\"d-flex flex-column width-100\">\n                        <Box>\n                          <Box className=\"width-100 mb-10 d-flex \">\n                            <Box className=\"cursor-pointer color-dark-grey font-size-12 font-weight-400\">\n                              Range of name\n                            </Box>\n                          </Box>\n                          <Box className=\"mr-10\">\n                            <TextField\n                              maxRows={4}\n                              multiline\n                              onChange={(e) => handleChangeBonusRangeName(e, item.id)}\n                              disabled={view}\n                              size=\"small\"\n                              className={`${classes.inputStyle} ${classes.bgGray} input-base`}\n                              error={!item.bonusRangeName}\n                              value={item.bonusRangeName}\n                            />\n                          </Box>\n                        </Box>\n                        <Box className=\"mt-10 settings-container-step-5\">\n                          <Box className=\"mr-30\">\n                            <Box className=\"width-100 mb-10 d-flex\">\n                              <Box className=\"cursor-pointer color-dark-grey font-size-12 font-weight-400\">\n                                Range min to max\n                              </Box>\n                            </Box>\n                            <Box className=\"d-flex align-center mb-10\">\n                              <TextField\n                                disabled={view}\n                                className={`${classesTextFields.numberRemoveArrowUpDown} ${classes.bgGray} ${classes.inputStyle} `}\n                                value={item.bonusRangeFrom}\n                                type=\"number\"\n                                error={\n                                  item.bonusRangeFrom\n                                    ? Number(item.bonusRangeFrom) < Number(rangeMin) ||\n                                      Number(item.bonusRangeFrom) > Number(rangeMax)\n                                    : true\n                                }\n                                onChange={(e) => {\n                                  if (\n                                    Number(e.target.value) <= 100 &&\n                                    Number(e.target.value) > -1\n                                  ) {\n                                    setRangesOfValue(\n                                      rangesOfvalue.map((item2) => {\n                                        if (item2.id === item.id) {\n                                          return {...item2, bonusRangeFrom: e.target.value}\n                                        }\n                                        return item2\n                                      }),\n                                    )\n                                  }\n                                }}\n                                size=\"small\"\n                              />\n                              <Box className=\"ml-10 mr-10\">To</Box>\n                              <TextField\n                                disabled={view}\n                                className={`${classesTextFields.numberRemoveArrowUpDown} ${classes.bgGray} ${classes.inputStyle}`}\n                                error={\n                                  item.bonusRangeTo\n                                    ? Number(item.bonusRangeTo) < Number(rangeMin) ||\n                                      Number(item.bonusRangeTo) > Number(rangeMax)\n                                    : true\n                                }\n                                value={item.bonusRangeTo}\n                                type=\"number\"\n                                onChange={(e) =>\n                                  setRangesOfValue(\n                                    rangesOfvalue.map((item2) => {\n                                      if (item2.id === item.id) {\n                                        return {...item2, bonusRangeTo: e.target.value}\n                                      }\n                                      return item2\n                                    }),\n                                  )\n                                }\n                                size=\"small\"\n                              />\n                            </Box>\n                          </Box>\n                          <Box>\n                            <Box className=\"mb-10 color-dark-grey font-size-12 font-weight-400 \">\n                              Bonus Amount\n                            </Box>\n                            <Box className=\"d-flex align-center\">\n                              <Box className=\"input-field-percent\">\n                                <TextField\n                                  className=\"text-field width-100\"\n                                  required\n                                  disabled={view}\n                                  id=\"outlined-required\"\n                                  size=\"small\"\n                                  onChange={(e) => {\n                                    if (\n                                      Number(e.target.value) <= 100 &&\n                                      Number(e.target.value) > -1\n                                    ) {\n                                      setRangesOfValue(\n                                        rangesOfvalue.map((item2) => {\n                                          if (item2.id === item.id) {\n                                            return {...item2, bonusPercentage: e.target.value}\n                                          }\n                                          return item2\n                                        }),\n                                      )\n                                    }\n                                  }}\n                                  error={!item.bonusPercentage}\n                                  value={item.bonusPercentage}\n                                />\n                                <IconButton className=\"icon-button\" aria-label=\"directions\">\n                                  <PercentIcon />\n                                </IconButton>\n                              </Box>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Box>\n                  ))\n                ) : (\n                  <Box className=\"mt-40 ml-24\">There is not data</Box>\n                )}\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      <Box className=\"color-red mt-30 text-center\">\n        {error && 'Please fill out required fields'}\n      </Box>\n    </Box>\n  )\n}\n\nexport default Step5\n"]},"metadata":{},"sourceType":"module"}