{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/events/steps/step4.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, FormControlLabel, Radio, RadioGroup, TextField } from '@mui/material';\nimport uuid from 'react-uuid';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport DeleteIcon from '../../../assets/images/Icons/deleteIcon';\nimport EditIcon from '../../../assets/images/Icons/editIcon_2';\nimport useStylesButton from '../../../assets/makeStyles/buttons/buttons';\nimport { UseCreateEventContext } from '../../../context/createEventContext/createEventContext';\nimport MakeStyles from '../../../assets/makeStyles/makeStyles';\nimport useStylesTextFields from '../../../assets/makeStyles/textFields/textFields';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Step4 = _ref => {\n  _s();\n\n  let {\n    view,\n    error,\n    setNextStep\n  } = _ref;\n  const classesTextFields = useStylesTextFields();\n  const classesButtons = useStylesButton();\n  const classes = MakeStyles();\n  const [rateFromError, setRateFromError] = useState(false);\n  const [rateToError, setRateToError] = useState(false);\n  const {\n    buttonsOfValue,\n    setButtonsOfValue,\n    withScores,\n    setRatePointTo,\n    questions,\n    setRatePointFrom,\n    ratePointTo,\n    ratePointFrom\n  } = UseCreateEventContext();\n  useEffect(() => {\n    if (!rateFromError && !rateToError) {\n      setNextStep(true);\n    } else {\n      setNextStep(false);\n    }\n  }, [questions, rateFromError, rateToError]);\n  useEffect(() => {\n    if (Number(ratePointFrom) < 0 || Number(ratePointFrom) >= Number(ratePointTo) || !ratePointFrom) {\n      setRateFromError(true);\n    } else {\n      setRateFromError(false);\n    }\n  }, [ratePointFrom, ratePointTo]);\n  useEffect(() => {\n    if (Number(ratePointFrom) >= Number(ratePointTo) || Number(ratePointTo) <= 2 || !ratePointTo) {\n      setRateToError(true);\n    } else {\n      setRateToError(false);\n    }\n  }, [ratePointTo, ratePointFrom]);\n  useEffect(() => {\n    if (buttonsOfValue.length) {\n      setNextStep(true);\n    } else {\n      setNextStep(false);\n    }\n  }, [buttonsOfValue]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"d-flex align-center justify-between\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"font-size-18 font-weight-500 line-height-22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"create-event-container-step-5 justify-around d-flex mt-14 \",\n      children: !withScores ? /*#__PURE__*/_jsxDEV(Box, {\n        className: \"create-event-body mt-10\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"create-event-column\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"font-size-16 mr-24 font-weight-700 line-height-22 color-dark-blue\",\n            children: \"Create/Edit buttons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: view,\n              onClick: () => buttonsOfValue.length < 10 && setButtonsOfValue([...buttonsOfValue, {\n                id: uuid(),\n                scoringName: `New Button ${buttonsOfValue.length}`,\n                edit: false,\n                scoringValue: '1'\n              }]),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-color-gradient\",\n                children: \"Add new button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"choose-evaluation-criteria create-event-body pb-30\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"d-flex justify-between mr-30 width-100 align-center\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"width-100\",\n              children: buttonsOfValue.length ? buttonsOfValue.map(item => /*#__PURE__*/_jsxDEV(Box, {\n                className: \"settings-container mt-40\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  className: \"mr-30 setting-item\",\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    className: \"width-100 mb-10 d-flex \",\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      className: \"cursor-pointer\",\n                      onClick: () => !view && setButtonsOfValue(buttonsOfValue.filter(item2 => item2.id !== item.id)),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      className: \"ml-10 cursor-pointer\",\n                      onClick: () => !view && setButtonsOfValue(buttonsOfValue.map(item2 => {\n                        if (item2.id === item.id) {\n                          return { ...item2,\n                            edit: !item2.edit\n                          };\n                        }\n\n                        return item2;\n                      })),\n                      children: !item.edit ? /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 45\n                      }, this) : /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 60\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 27\n                  }, this), !item.edit ? /*#__PURE__*/_jsxDEV(Box, {\n                    className: `${classesButtons.transparentWithBorderButton}`,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      disabled: view,\n                      onClick: () => setButtonsOfValue(buttonsOfValue.map(item2 => {\n                        if (item2.id === item.id) {\n                          return { ...item2,\n                            edit: !item2.edit\n                          };\n                        }\n\n                        return item2;\n                      })),\n                      className: ` ${classesButtons.width190}`,\n                      children: item.scoringName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: view,\n                    maxRows: 4,\n                    multiline: true,\n                    className: `${classes.inputStyle} ${classes.bgGray}`,\n                    value: item.scoringName,\n                    onChange: e => e.target.value.length < 100 && setButtonsOfValue(buttonsOfValue.map(item2 => {\n                      if (item2.id === item.id) {\n                        return { ...item2,\n                          scoringName: e.target.value\n                        };\n                      }\n\n                      return item2;\n                    })),\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    className: \"width-100 mb-10 d-flex\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      className: \"cursor-pointer\",\n                      children: \"Point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: view,\n                    className: `${classes.inputStyle} ${classes.bgGray}`,\n                    value: item.scoringValue,\n                    type: \"number\",\n                    onChange: e => {\n                      if (Number(e.target.value) <= 20) {\n                        setButtonsOfValue(buttonsOfValue.map(item2 => {\n                          if (item2.id === item.id) {\n                            return { ...item2,\n                              scoringValue: e.target.value\n                            };\n                          }\n\n                          return item2;\n                        }));\n                      }\n                    },\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 25\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n                className: \"mt-40 ml-24\",\n                children: \"There is not data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        className: \"create-event-body mt-10\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"d-flex justify-between width-100\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"rating-score-range-container\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"create-event-select mt-10\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: \"create-event-select-column\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  className: \"font-size-16 font-weight-500 line-height-22 color-black color-dark-blue\",\n                  children: \"Rating Score Range\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: \" font-size-14 line-height-22 mt-6 color-light-gray-2\",\n                  children: \"The rating is from the lowest score to the highest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: \"create-event-select-radio mt-10\",\n                children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-labelledby\": \"demo-radio-buttons-group-label\",\n                  defaultValue: \"female\",\n                  name: \"radio-buttons-group\",\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      checked: true,\n                      color: \"default\",\n                      className: `${classes.checkboxColor}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 27\n                    }, this),\n                    label: /*#__PURE__*/_jsxDEV(Box, {\n                      className: \"d-flex justify-center align-item\",\n                      children: [\"From\", /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: view,\n                        error: rateFromError,\n                        InputProps: {\n                          inputProps: {\n                            min: 0\n                          }\n                        },\n                        variant: \"standard\",\n                        type: \"number\",\n                        placeholder: \"1\",\n                        value: ratePointFrom,\n                        size: \"small\",\n                        className: `${classesTextFields.numberRemoveArrowUpDown} ${classesTextFields.textFieldSmall40}`,\n                        onChange: e => setRatePointFrom(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 29\n                      }, this), \"point - to\", ' ', /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: view,\n                        error: rateToError,\n                        InputProps: {\n                          inputProps: {\n                            min: 0\n                          }\n                        },\n                        variant: \"standard\",\n                        type: \"number\",\n                        placeholder: \"10\",\n                        value: ratePointTo,\n                        size: \"small\",\n                        className: `${classesTextFields.numberRemoveArrowUpDown} ${classesTextFields.textFieldSmall40}`,\n                        onChange: e => setRatePointTo(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 29\n                      }, this), ' ', \"points\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"color-red mt-30 text-center\",\n      children: error && 'Please fill out required fields'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Step4, \"SczbYXaPK/JMLDTOf3vu3dh3FWs=\", false, function () {\n  return [useStylesTextFields, useStylesButton];\n});\n\n_c = Step4;\nexport default Step4;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step4\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/events/steps/step4.tsx"],"names":["React","useEffect","useState","Box","Button","FormControlLabel","Radio","RadioGroup","TextField","uuid","CheckCircleOutlineIcon","DeleteIcon","EditIcon","useStylesButton","UseCreateEventContext","MakeStyles","useStylesTextFields","Step4","view","error","setNextStep","classesTextFields","classesButtons","classes","rateFromError","setRateFromError","rateToError","setRateToError","buttonsOfValue","setButtonsOfValue","withScores","setRatePointTo","questions","setRatePointFrom","ratePointTo","ratePointFrom","Number","length","id","scoringName","edit","scoringValue","map","item","filter","item2","transparentWithBorderButton","width190","inputStyle","bgGray","e","target","value","checkboxColor","inputProps","min","numberRemoveArrowUpDown","textFieldSmall40"],"mappings":"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","sourcesContent":["import React, {Dispatch, useEffect, useState} from 'react'\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, TextField} from '@mui/material'\nimport uuid from 'react-uuid'\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline'\nimport DeleteIcon from '../../../assets/images/Icons/deleteIcon'\nimport EditIcon from '../../../assets/images/Icons/editIcon_2'\nimport useStylesButton from '../../../assets/makeStyles/buttons/buttons'\nimport {UseCreateEventContext} from '../../../context/createEventContext/createEventContext'\nimport {ICreateEventProps} from '../../../context/createEventContext/createEventContext.props'\nimport MakeStyles from '../../../assets/makeStyles/makeStyles'\nimport useStylesTextFields from '../../../assets/makeStyles/textFields/textFields'\n\nconst Step4 = ({\n  view,\n  error,\n  setNextStep,\n}: {\n  view: boolean\n  error: boolean\n  setNextStep: Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const classesTextFields = useStylesTextFields()\n  const classesButtons = useStylesButton()\n  const classes = MakeStyles()\n  const [rateFromError, setRateFromError] = useState<boolean>(false)\n  const [rateToError, setRateToError] = useState<boolean>(false)\n  const {\n    buttonsOfValue,\n    setButtonsOfValue,\n    withScores,\n    setRatePointTo,\n    questions,\n    setRatePointFrom,\n    ratePointTo,\n    ratePointFrom,\n  } = UseCreateEventContext() as ICreateEventProps\n\n  useEffect(() => {\n    if (!rateFromError && !rateToError) {\n      setNextStep(true)\n    } else {\n      setNextStep(false)\n    }\n  }, [questions, rateFromError, rateToError])\n\n  useEffect(() => {\n    if (\n      Number(ratePointFrom) < 0 ||\n      Number(ratePointFrom) >= Number(ratePointTo) ||\n      !ratePointFrom\n    ) {\n      setRateFromError(true)\n    } else {\n      setRateFromError(false)\n    }\n  }, [ratePointFrom, ratePointTo])\n\n  useEffect(() => {\n    if (Number(ratePointFrom) >= Number(ratePointTo) || Number(ratePointTo) <= 2 || !ratePointTo) {\n      setRateToError(true)\n    } else {\n      setRateToError(false)\n    }\n  }, [ratePointTo, ratePointFrom])\n\n  useEffect(() => {\n    if (buttonsOfValue.length) {\n      setNextStep(true)\n    } else {\n      setNextStep(false)\n    }\n  }, [buttonsOfValue])\n\n  return (\n    <Box>\n      <Box className=\"d-flex align-center justify-between\">\n        <Box className=\"font-size-18 font-weight-500 line-height-22\" />\n      </Box>\n      <Box className=\"create-event-container-step-5 justify-around d-flex mt-14 \">\n        {!withScores ? (\n          <Box className=\"create-event-body mt-10\">\n            <Box className=\"create-event-column\">\n              <Box className=\"font-size-16 mr-24 font-weight-700 line-height-22 color-dark-blue\">\n                Create/Edit buttons\n              </Box>\n              <Box>\n                <Button\n                  disabled={view}\n                  onClick={() =>\n                    buttonsOfValue.length < 10 &&\n                    setButtonsOfValue([\n                      ...buttonsOfValue,\n                      {\n                        id: uuid(),\n                        scoringName: `New Button ${buttonsOfValue.length}`,\n                        edit: false,\n                        scoringValue: '1',\n                      },\n                    ])\n                  }\n                >\n                  <p className=\"text-color-gradient\">Add new button</p>\n                </Button>\n              </Box>\n            </Box>\n            <Box className=\"choose-evaluation-criteria create-event-body pb-30\">\n              <Box className=\"d-flex justify-between mr-30 width-100 align-center\">\n                <Box className=\"width-100\">\n                  {buttonsOfValue.length ? (\n                    buttonsOfValue.map((item) => (\n                      <Box key={item.id} className=\"settings-container mt-40\">\n                        <Box className=\"mr-30 setting-item\">\n                          <Box className=\"width-100 mb-10 d-flex \">\n                            <Box\n                              className=\"cursor-pointer\"\n                              onClick={() =>\n                                !view &&\n                                setButtonsOfValue(\n                                  buttonsOfValue.filter((item2) => item2.id !== item.id),\n                                )\n                              }\n                            >\n                              <DeleteIcon />\n                            </Box>\n                            <Box\n                              className=\"ml-10 cursor-pointer\"\n                              onClick={() =>\n                                !view &&\n                                setButtonsOfValue(\n                                  buttonsOfValue.map((item2) => {\n                                    if (item2.id === item.id) {\n                                      return {...item2, edit: !item2.edit}\n                                    }\n                                    return item2\n                                  }),\n                                )\n                              }\n                            >\n                              {!item.edit ? <EditIcon /> : <CheckCircleOutlineIcon />}\n                            </Box>\n                          </Box>\n                          {!item.edit ? (\n                            <Box className={`${classesButtons.transparentWithBorderButton}`}>\n                              <Button\n                                disabled={view}\n                                onClick={() =>\n                                  setButtonsOfValue(\n                                    buttonsOfValue.map((item2) => {\n                                      if (item2.id === item.id) {\n                                        return {...item2, edit: !item2.edit}\n                                      }\n                                      return item2\n                                    }),\n                                  )\n                                }\n                                className={` ${classesButtons.width190}`}\n                              >\n                                {item.scoringName}\n                              </Button>\n                            </Box>\n                          ) : (\n                            <TextField\n                              disabled={view}\n                              maxRows={4}\n                              multiline\n                              className={`${classes.inputStyle} ${classes.bgGray}`}\n                              value={item.scoringName}\n                              onChange={(e) =>\n                                e.target.value.length < 100 &&\n                                setButtonsOfValue(\n                                  buttonsOfValue.map((item2) => {\n                                    if (item2.id === item.id) {\n                                      return {...item2, scoringName: e.target.value}\n                                    }\n                                    return item2\n                                  }),\n                                )\n                              }\n                              size=\"small\"\n                            />\n                          )}\n                        </Box>\n                        <Box>\n                          <Box className=\"width-100 mb-10 d-flex\">\n                            <Box className=\"cursor-pointer\">Point</Box>\n                          </Box>\n                          <TextField\n                            disabled={view}\n                            className={`${classes.inputStyle} ${classes.bgGray}`}\n                            value={item.scoringValue}\n                            type=\"number\"\n                            onChange={(e) => {\n                              if (Number(e.target.value) <= 20) {\n                                setButtonsOfValue(\n                                  buttonsOfValue.map((item2) => {\n                                    if (item2.id === item.id) {\n                                      return {...item2, scoringValue: e.target.value}\n                                    }\n                                    return item2\n                                  }),\n                                )\n                              }\n                            }}\n                            size=\"small\"\n                          />\n                        </Box>\n                      </Box>\n                    ))\n                  ) : (\n                    <Box className=\"mt-40 ml-24\">There is not data</Box>\n                  )}\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        ) : (\n          <Box className=\"create-event-body mt-10\">\n            <Box className=\"d-flex justify-between width-100\">\n              <Box className=\"rating-score-range-container\">\n                <Box className=\"create-event-select mt-10\">\n                  <Box className=\"create-event-select-column\">\n                    <Box className=\"font-size-16 font-weight-500 line-height-22 color-black color-dark-blue\">\n                      Rating Score Range\n                    </Box>\n                    <Box className=\" font-size-14 line-height-22 mt-6 color-light-gray-2\">\n                      The rating is from the lowest score to the highest\n                    </Box>\n                  </Box>\n                  <Box className=\"create-event-select-radio mt-10\">\n                    <RadioGroup\n                      aria-labelledby=\"demo-radio-buttons-group-label\"\n                      defaultValue=\"female\"\n                      name=\"radio-buttons-group\"\n                    >\n                      <FormControlLabel\n                        control={\n                          <Radio checked color=\"default\" className={`${classes.checkboxColor}`} />\n                        }\n                        label={\n                          <Box className=\"d-flex justify-center align-item\">\n                            From\n                            <TextField\n                              disabled={view}\n                              error={rateFromError}\n                              InputProps={{inputProps: {min: 0}}}\n                              variant=\"standard\"\n                              type=\"number\"\n                              placeholder=\"1\"\n                              value={ratePointFrom}\n                              size=\"small\"\n                              className={`${classesTextFields.numberRemoveArrowUpDown} ${classesTextFields.textFieldSmall40}`}\n                              onChange={(e) => setRatePointFrom(e.target.value)}\n                            />\n                            point - to{' '}\n                            <TextField\n                              disabled={view}\n                              error={rateToError}\n                              InputProps={{inputProps: {min: 0}}}\n                              variant=\"standard\"\n                              type=\"number\"\n                              placeholder=\"10\"\n                              value={ratePointTo}\n                              size=\"small\"\n                              className={`${classesTextFields.numberRemoveArrowUpDown} ${classesTextFields.textFieldSmall40}`}\n                              onChange={(e) => setRatePointTo(e.target.value)}\n                            />{' '}\n                            points\n                          </Box>\n                        }\n                      />\n                    </RadioGroup>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        )}\n      </Box>\n      <Box className=\"color-red mt-30 text-center\">\n        {error && 'Please fill out required fields'}\n      </Box>\n    </Box>\n  )\n}\n\nexport default Step4\n"]},"metadata":{},"sourceType":"module"}