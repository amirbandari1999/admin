{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/context/superAdminContext/superAdminContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperAdminContext = /*#__PURE__*/createContext(null);\n\nconst SuperAdminPageProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoadingSuperAdmin, setIsLoadingSuperAdmin] = useState(false);\n  const [rowsOfTable, setRowsOfTable] = useState([]);\n  const contextValues = React.useMemo(() => ({\n    isLoadingSuperAdmin,\n    setIsLoadingSuperAdmin,\n    rowsOfTable,\n    setRowsOfTable\n  }), [isLoadingSuperAdmin, rowsOfTable]);\n  return /*#__PURE__*/_jsxDEV(SuperAdminContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SuperAdminPageProvider, \"tZkWawtr4o/cJv2t1w5KwF6DQBE=\");\n\n_c = SuperAdminPageProvider;\nexport default SuperAdminPageProvider;\nexport const UseSuperAdminContext = () => {\n  _s2();\n\n  return useContext(SuperAdminContext);\n};\n\n_s2(UseSuperAdminContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = UseSuperAdminContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SuperAdminPageProvider\");\n$RefreshReg$(_c2, \"UseSuperAdminContext\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/context/superAdminContext/superAdminContext.tsx"],"names":["React","createContext","useContext","useState","SuperAdminContext","SuperAdminPageProvider","children","isLoadingSuperAdmin","setIsLoadingSuperAdmin","rowsOfTable","setRowsOfTable","contextValues","useMemo","UseSuperAdminContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,QAAyD,OAAzD;;AAIA,MAAMC,iBAAiB,gBAAGH,aAAa,CAA0B,IAA1B,CAAvC;;AAEA,MAAMI,sBAAsB,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAACC,IAAAA;AAAD,GAA8B;AAC5D,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDL,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAiC,EAAjC,CAA9C;AAEA,QAAMQ,aAAa,GAAGX,KAAK,CAACY,OAAN,CACpB,OAAO;AACLL,IAAAA,mBADK;AAELC,IAAAA,sBAFK;AAGLC,IAAAA,WAHK;AAILC,IAAAA;AAJK,GAAP,CADoB,EAOpB,CAACH,mBAAD,EAAsBE,WAAtB,CAPoB,CAAtB;AAUA,sBAAO,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEE,aAAnC;AAAA,cAAmDL;AAAnD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfD;;GAAMD,sB;;KAAAA,sB;AAiBN,eAAeA,sBAAf;AACA,OAAO,MAAMQ,oBAAoB,GAAG;AAAA;;AAAA,SAAMX,UAAU,CAACE,iBAAD,CAAhB;AAAA,CAA7B;;IAAMS,oB;;MAAAA,oB","sourcesContent":["import React, {createContext, useContext, useState} from 'react'\nimport {IContextProps, ISuperAdminProps} from './superAdminContext.props'\nimport {ITableSuperAdmin} from '../../shared/types/table/table'\n\nconst SuperAdminContext = createContext<ISuperAdminProps | null>(null)\n\nconst SuperAdminPageProvider = ({children}: IContextProps) => {\n  const [isLoadingSuperAdmin, setIsLoadingSuperAdmin] = useState(false)\n  const [rowsOfTable, setRowsOfTable] = useState<ITableSuperAdmin[] | undefined>([])\n\n  const contextValues = React.useMemo(\n    () => ({\n      isLoadingSuperAdmin,\n      setIsLoadingSuperAdmin,\n      rowsOfTable,\n      setRowsOfTable,\n    }),\n    [isLoadingSuperAdmin, rowsOfTable],\n  )\n\n  return <SuperAdminContext.Provider value={contextValues}>{children}</SuperAdminContext.Provider>\n}\n\nexport default SuperAdminPageProvider\nexport const UseSuperAdminContext = () => useContext(SuperAdminContext)\n"]},"metadata":{},"sourceType":"module"}