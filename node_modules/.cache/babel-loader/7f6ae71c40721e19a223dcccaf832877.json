{"ast":null,"code":"import axios from '../axios';\n\nconst usersList = async () => {\n  const data = await axios.get('User/getUsers');\n  return data;\n};\n\nconst userList = async id => {\n  const data = await axios.get(`User/getUser/${id}`);\n  return data;\n};\n\nconst createUser = async data => {\n  const response = await axios.post(`User/createUser`, data);\n  return response;\n};\n\nconst updateUser = async (id, data) => {\n  const response = await axios.put(`User/updateUser/${id}`, data);\n  return response;\n};\n\nconst getUsersPagination = async (page, pageSize) => {\n  const response = await axios.get(`User/getUsers/${page}/${pageSize}`);\n  return response;\n};\n\nconst deleteUser = async id => {\n  const response = await axios.delete(`User/deleteUser/${id}`);\n  return response;\n};\n\nconst getAccounts = async () => {\n  const response = await axios.get(`User/getAccounts`);\n  return response;\n};\n\nconst updateMyProfile = async data => {\n  const response = await axios.put(`User/updateMyProfile`, data);\n  return response;\n};\n\nconst switchActiveAccount = async id => {\n  const response = await axios.put(`User/switchActiveAccount/${id}`);\n  return response;\n};\n\nconst getSuperAdminUser = async id => {\n  const response = await axios.get(`User/getSuperAdminUser/${id}`);\n  return response;\n};\n\nconst insertUsersFromCsv = async data => {\n  const response = await axios.post(`User/insertUsersFromCsv`, data);\n  return response;\n};\n\nconst UsersApi = {\n  usersList,\n  userList,\n  createUser,\n  updateUser,\n  deleteUser,\n  getUsersPagination,\n  getAccounts,\n  updateMyProfile,\n  switchActiveAccount,\n  getSuperAdminUser,\n  insertUsersFromCsv\n};\nexport default UsersApi;","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/api/users.ts"],"names":["axios","usersList","data","get","userList","id","createUser","response","post","updateUser","put","getUsersPagination","page","pageSize","deleteUser","delete","getAccounts","updateMyProfile","switchActiveAccount","getSuperAdminUser","insertUsersFromCsv","UsersApi"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC5B,QAAMC,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,eAAV,CAAnB;AACA,SAAOD,IAAP;AACD,CAHD;;AAKA,MAAME,QAAQ,GAAG,MAAOC,EAAP,IAA6B;AAC5C,QAAMH,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAW,gBAAeE,EAAG,EAA7B,CAAnB;AACA,SAAOH,IAAP;AACD,CAHD;;AAKA,MAAMI,UAAU,GAAG,MAAOJ,IAAP,IAA0B;AAC3C,QAAMK,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAY,iBAAZ,EAA8BN,IAA9B,CAAvB;AACA,SAAOK,QAAP;AACD,CAHD;;AAKA,MAAME,UAAU,GAAG,OAAOJ,EAAP,EAAmBH,IAAnB,KAAsC;AACvD,QAAMK,QAAQ,GAAG,MAAMP,KAAK,CAACU,GAAN,CAAW,mBAAkBL,EAAG,EAAhC,EAAmCH,IAAnC,CAAvB;AACA,SAAOK,QAAP;AACD,CAHD;;AAKA,MAAMI,kBAAkB,GAAG,OAAOC,IAAP,EAAqBC,QAArB,KAA0C;AACnE,QAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACG,GAAN,CAAW,iBAAgBS,IAAK,IAAGC,QAAS,EAA5C,CAAvB;AACA,SAAON,QAAP;AACD,CAHD;;AAKA,MAAMO,UAAU,GAAG,MAAOT,EAAP,IAA+B;AAChD,QAAME,QAAQ,GAAG,MAAMP,KAAK,CAACe,MAAN,CAAc,mBAAkBV,EAAG,EAAnC,CAAvB;AACA,SAAOE,QAAP;AACD,CAHD;;AAKA,MAAMS,WAAW,GAAG,YAAY;AAC9B,QAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACG,GAAN,CAAW,kBAAX,CAAvB;AACA,SAAOI,QAAP;AACD,CAHD;;AAKA,MAAMU,eAAe,GAAG,MAAOf,IAAP,IAA0B;AAChD,QAAMK,QAAQ,GAAG,MAAMP,KAAK,CAACU,GAAN,CAAW,sBAAX,EAAkCR,IAAlC,CAAvB;AACA,SAAOK,QAAP;AACD,CAHD;;AAKA,MAAMW,mBAAmB,GAAG,MAAOb,EAAP,IAA+B;AACzD,QAAME,QAAQ,GAAG,MAAMP,KAAK,CAACU,GAAN,CAAW,4BAA2BL,EAAG,EAAzC,CAAvB;AACA,SAAOE,QAAP;AACD,CAHD;;AAKA,MAAMY,iBAAiB,GAAG,MAAOd,EAAP,IAA+B;AACvD,QAAME,QAAQ,GAAG,MAAMP,KAAK,CAACG,GAAN,CAAW,0BAAyBE,EAAG,EAAvC,CAAvB;AACA,SAAOE,QAAP;AACD,CAHD;;AAKA,MAAMa,kBAAkB,GAAG,MAAOlB,IAAP,IAA0B;AACnD,QAAMK,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAY,yBAAZ,EAAsCN,IAAtC,CAAvB;AACA,SAAOK,QAAP;AACD,CAHD;;AAKA,MAAMc,QAAQ,GAAG;AACfpB,EAAAA,SADe;AAEfG,EAAAA,QAFe;AAGfE,EAAAA,UAHe;AAIfG,EAAAA,UAJe;AAKfK,EAAAA,UALe;AAMfH,EAAAA,kBANe;AAOfK,EAAAA,WAPe;AAQfC,EAAAA,eARe;AASfC,EAAAA,mBATe;AAUfC,EAAAA,iBAVe;AAWfC,EAAAA;AAXe,CAAjB;AAcA,eAAeC,QAAf","sourcesContent":["import axios from '../axios'\n\nconst usersList = async () => {\n  const data = await axios.get('User/getUsers')\n  return data\n}\n\nconst userList = async (id: number | null) => {\n  const data = await axios.get(`User/getUser/${id}`)\n  return data\n}\n\nconst createUser = async (data: FormData) => {\n  const response = await axios.post(`User/createUser`, data)\n  return response\n}\n\nconst updateUser = async (id: number, data: FormData) => {\n  const response = await axios.put(`User/updateUser/${id}`, data)\n  return response\n}\n\nconst getUsersPagination = async (page: number, pageSize: number) => {\n  const response = await axios.get(`User/getUsers/${page}/${pageSize}`)\n  return response\n}\n\nconst deleteUser = async (id: string | number) => {\n  const response = await axios.delete(`User/deleteUser/${id}`)\n  return response\n}\n\nconst getAccounts = async () => {\n  const response = await axios.get(`User/getAccounts`)\n  return response\n}\n\nconst updateMyProfile = async (data: FormData) => {\n  const response = await axios.put(`User/updateMyProfile`, data)\n  return response\n}\n\nconst switchActiveAccount = async (id: number | string) => {\n  const response = await axios.put(`User/switchActiveAccount/${id}`)\n  return response\n}\n\nconst getSuperAdminUser = async (id: number | string) => {\n  const response = await axios.get(`User/getSuperAdminUser/${id}`)\n  return response\n}\n\nconst insertUsersFromCsv = async (data: FormData) => {\n  const response = await axios.post(`User/insertUsersFromCsv`, data)\n  return response\n}\n\nconst UsersApi = {\n  usersList,\n  userList,\n  createUser,\n  updateUser,\n  deleteUser,\n  getUsersPagination,\n  getAccounts,\n  updateMyProfile,\n  switchActiveAccount,\n  getSuperAdminUser,\n  insertUsersFromCsv,\n}\n\nexport default UsersApi\n"]},"metadata":{},"sourceType":"module"}