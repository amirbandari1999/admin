{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/pages/auth/passwordRecoveryDone.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, FormControl, FormHelperText } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport { useSearchParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport CheckIcon from '../../assets/images/Icons/checkIcon';\nimport MakeStyles from '../../assets/makeStyles/makeStyles';\nimport PassRecovDone from '../../assets/images/passRecovDone';\nimport AuthBG from '../../assets/images/authBG';\nimport CloseIcon from '../../assets/images/Icons/closeIcon';\nimport AuthenticationsApi from '../../api/authentication';\nimport ButtonBlue from '../../layouts/buttons/buttonBlue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordRecoveryDone = () => {\n  _s();\n\n  const classes = MakeStyles();\n  const navigate = useNavigate();\n  const [passwordIsSuccessfullyUpdated, setPasswordIsSuccesfullyUpdated] = useState(false);\n  const [searchParams] = useSearchParams();\n  const forgotToken = searchParams.get('forgot_token');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [passwordRecoveryError, setPasswordRecoveryError] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const handleSave = async () => {\n    if (newPassword && confirmPassword && newPassword === confirmPassword) {\n      const formData = new FormData();\n      formData.append('ForgotPasswordToken', forgotToken);\n      formData.append('Password', newPassword);\n      formData.append('ConfirmPassword', confirmPassword);\n      const response = await AuthenticationsApi.forgotPasswordConfirmation(formData);\n\n      if (response.status === 200) {\n        setPasswordIsSuccesfullyUpdated(true);\n        setPasswordRecoveryError(false);\n      } else {\n        setErrorMessage(response.response.data.message);\n      }\n    } else {\n      setPasswordRecoveryError(true);\n    }\n  };\n\n  const handleClose = () => {\n    navigate('/sign-in');\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    if (passwordRecoveryError && newPassword !== confirmPassword) {\n      setErrorMessage('Please make sure passwords match');\n    } else {\n      setErrorMessage('');\n    }\n  }, [passwordRecoveryError, newPassword, confirmPassword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-content_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-content_bg\",\n        children: /*#__PURE__*/_jsxDEV(AuthBG, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-close\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"cursor-pointer\",\n            onClick: () => handleClose(),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              color: \"#4F4F4F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot-password-container\",\n          children: !passwordIsSuccessfullyUpdated ? /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"auth_title\",\n              children: \"Password Recovery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"auth_text\",\n              children: \"Write your new password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: `${classes.marginTop26}`,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                className: `${classes.w100} ${classes.inputStyle} ${classes.bgGray}`,\n                error: !!(passwordRecoveryError && !newPassword),\n                size: \"small\",\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"outlined-adornment-password\",\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  id: \"outlined-adornment-password\",\n                  value: newPassword,\n                  onChange: e => setNewPassword(e.target.value),\n                  error: !!(passwordRecoveryError && !newPassword),\n                  type: showNewPassword ? 'text' : 'password',\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"toggle password visibility\",\n                      onClick: () => setShowNewPassword(!showNewPassword),\n                      onMouseDown: handleMouseDownPassword,\n                      edge: \"end\",\n                      children: showNewPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 48\n                      }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this),\n                  label: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  id: \"outlined-adornment-password\",\n                  children: passwordRecoveryError && !newPassword ? 'New password is required' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: `${classes.marginTop26}`,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                className: `${classes.w100} ${classes.inputStyle} ${classes.bgGray}`,\n                error: !!(passwordRecoveryError && !confirmPassword),\n                size: \"small\",\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"outlined-adornment-password\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  id: \"outlined-adornment-password\",\n                  value: confirmPassword,\n                  onChange: e => setConfirmPassword(e.target.value),\n                  error: !!(passwordRecoveryError && !confirmPassword),\n                  type: showConfirmPassword ? 'text' : 'password',\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"toggle password visibility\",\n                      onClick: () => setShowConfirmPassword(!showConfirmPassword),\n                      onMouseDown: handleMouseDownPassword,\n                      edge: \"end\",\n                      children: showConfirmPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 52\n                      }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 25\n                  }, this),\n                  label: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  id: \"outlined-adornment-password\",\n                  children: passwordRecoveryError && !confirmPassword ? 'Confirm password is required' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: `${classes.marginTop26}`,\n              children: /*#__PURE__*/_jsxDEV(ButtonBlue, {\n                fullWidth: true,\n                handleClick: handleSave,\n                title: \"SAVE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), errorMessage && /*#__PURE__*/_jsxDEV(Box, {\n              className: \"error-message mt-20\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"auth_title\",\n              children: \"Password Recovery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"auth_text\",\n              children: \"Your password is successfully updated \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-center mt-48\",\n              children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-image_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(PassRecovDone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordRecoveryDone, \"UUef0+9OOQLFQ2hvTNWBYUjP/cs=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n\n_c = PasswordRecoveryDone;\nexport default PasswordRecoveryDone;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordRecoveryDone\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/pages/auth/passwordRecoveryDone.tsx"],"names":["React","useEffect","useState","Box","FormControl","FormHelperText","Stack","useSearchParams","useNavigate","InputLabel","OutlinedInput","InputAdornment","IconButton","Visibility","VisibilityOff","CheckIcon","MakeStyles","PassRecovDone","AuthBG","CloseIcon","AuthenticationsApi","ButtonBlue","PasswordRecoveryDone","classes","navigate","passwordIsSuccessfullyUpdated","setPasswordIsSuccesfullyUpdated","searchParams","forgotToken","get","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","passwordRecoveryError","setPasswordRecoveryError","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","handleSave","formData","FormData","append","response","forgotPasswordConfirmation","status","data","message","handleClose","handleMouseDownPassword","event","preventDefault","marginTop26","w100","inputStyle","bgGray","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Box, FormControl, FormHelperText} from '@mui/material'\nimport Stack from '@mui/material/Stack'\nimport {useSearchParams} from 'react-router-dom'\nimport {useNavigate} from 'react-router'\nimport InputLabel from '@mui/material/InputLabel'\nimport OutlinedInput from '@mui/material/OutlinedInput'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport IconButton from '@mui/material/IconButton'\nimport Visibility from '@mui/icons-material/Visibility'\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'\nimport CheckIcon from '../../assets/images/Icons/checkIcon'\nimport MakeStyles from '../../assets/makeStyles/makeStyles'\nimport PassRecovDone from '../../assets/images/passRecovDone'\nimport AuthBG from '../../assets/images/authBG'\nimport CloseIcon from '../../assets/images/Icons/closeIcon'\nimport AuthenticationsApi from '../../api/authentication'\nimport ButtonBlue from '../../layouts/buttons/buttonBlue'\n\nconst PasswordRecoveryDone = () => {\n  const classes = MakeStyles()\n  const navigate = useNavigate()\n  const [passwordIsSuccessfullyUpdated, setPasswordIsSuccesfullyUpdated] = useState(false)\n  const [searchParams] = useSearchParams()\n  const forgotToken = searchParams.get('forgot_token')\n  const [newPassword, setNewPassword] = useState<string>('')\n  const [confirmPassword, setConfirmPassword] = useState<string>('')\n  const [errorMessage, setErrorMessage] = useState<string>('')\n  const [passwordRecoveryError, setPasswordRecoveryError] = useState<boolean>(false)\n  const [showNewPassword, setShowNewPassword] = useState<boolean>(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false)\n\n  const handleSave = async () => {\n    if (newPassword && confirmPassword && newPassword === confirmPassword) {\n      const formData = new FormData()\n      formData.append('ForgotPasswordToken', forgotToken as string)\n      formData.append('Password', newPassword)\n      formData.append('ConfirmPassword', confirmPassword)\n      const response: any = await AuthenticationsApi.forgotPasswordConfirmation(formData)\n      if (response.status === 200) {\n        setPasswordIsSuccesfullyUpdated(true)\n        setPasswordRecoveryError(false)\n      } else {\n        setErrorMessage(response.response.data.message)\n      }\n    } else {\n      setPasswordRecoveryError(true)\n    }\n  }\n\n  const handleClose = () => {\n    navigate('/sign-in')\n  }\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    if (passwordRecoveryError && newPassword !== confirmPassword) {\n      setErrorMessage('Please make sure passwords match')\n    } else {\n      setErrorMessage('')\n    }\n  }, [passwordRecoveryError, newPassword, confirmPassword])\n\n  return (\n    <div className=\"container auth-container\">\n      <div className=\"auth-content_wrapper\">\n        <div className=\"auth-content_bg\">\n          <AuthBG />\n        </div>\n        <div className=\"auth_content\">\n          <div className=\"auth-close\">\n            <Box className=\"cursor-pointer\" onClick={() => handleClose()}>\n              <CloseIcon color=\"#4F4F4F\" />\n            </Box>\n          </div>\n          <div className=\"forgot-password-container\">\n            {!passwordIsSuccessfullyUpdated ? (\n              <Stack direction=\"column\">\n                <p className=\"auth_title\">Password Recovery</p>\n                <p className=\"auth_text\">Write your new password</p>\n                <Box className={`${classes.marginTop26}`}>\n                  <FormControl\n                    className={`${classes.w100} ${classes.inputStyle} ${classes.bgGray}`}\n                    error={!!(passwordRecoveryError && !newPassword)}\n                    size=\"small\"\n                    variant=\"outlined\"\n                  >\n                    <InputLabel htmlFor=\"outlined-adornment-password\">New Password</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-password\"\n                      value={newPassword}\n                      onChange={(e) => setNewPassword(e.target.value)}\n                      error={!!(passwordRecoveryError && !newPassword)}\n                      type={showNewPassword ? 'text' : 'password'}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() => setShowNewPassword(!showNewPassword)}\n                            onMouseDown={handleMouseDownPassword}\n                            edge=\"end\"\n                          >\n                            {showNewPassword ? <Visibility /> : <VisibilityOff />}\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                      label=\"New Password\"\n                    />\n                    <FormHelperText id=\"outlined-adornment-password\">\n                      {passwordRecoveryError && !newPassword ? 'New password is required' : ''}\n                    </FormHelperText>\n                  </FormControl>\n                </Box>\n                {/*<div className=\"line-height-12 font-size-10 font-weight-400 color-light-gray mt-6\">*/}\n                {/*  Password shall be 6+ character , 1 capital letter, 1 number*/}\n                {/*</div>*/}\n                <Box className={`${classes.marginTop26}`}>\n                  <FormControl\n                    className={`${classes.w100} ${classes.inputStyle} ${classes.bgGray}`}\n                    error={!!(passwordRecoveryError && !confirmPassword)}\n                    size=\"small\"\n                    variant=\"outlined\"\n                  >\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Confirm Password</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-password\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      error={!!(passwordRecoveryError && !confirmPassword)}\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                            onMouseDown={handleMouseDownPassword}\n                            edge=\"end\"\n                          >\n                            {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                      label=\"Confirm Password\"\n                    />\n                    <FormHelperText id=\"outlined-adornment-password\">\n                      {passwordRecoveryError && !confirmPassword\n                        ? 'Confirm password is required'\n                        : ''}\n                    </FormHelperText>\n                  </FormControl>\n                </Box>\n                <Box className={`${classes.marginTop26}`}>\n                  <ButtonBlue fullWidth handleClick={handleSave} title=\"SAVE\" />\n                </Box>\n                {errorMessage && <Box className=\"error-message mt-20\">{errorMessage}</Box>}\n              </Stack>\n            ) : (\n              <Stack direction=\"column\">\n                <p className=\"auth_title\">Password Recovery</p>\n                <p className=\"auth_text\">Your password is successfully updated </p>\n                <div className=\"d-flex justify-center mt-48\">\n                  <CheckIcon />\n                </div>\n              </Stack>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"auth-image_wrapper\">\n        <PassRecovDone />\n      </div>\n    </div>\n  )\n}\n\nexport default PasswordRecoveryDone\n"]},"metadata":{},"sourceType":"module"}