{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/context/certificateContext/certificateContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const initialState = {\n//   isVisible: false,\n// }\n// const CertificateContext = createContext<ICertificateProps>({\n//   certificateData: initialState,\n//   setCertificateData: () => ({}),\n// })\nconst CertificateContext = /*#__PURE__*/createContext(null);\n\nconst CertificatePageProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [certificateData, setCertificateData] = useState(initialState)\n  const [showCertificate, setShowCertificate] = useState(false);\n  const [totalScore, setTotalScore] = useState();\n  const [evaluateeName, setEvaluateeName] = useState();\n  const [evaluateeId, setEvaluateeId] = useState();\n  const [menual, setMenual] = useState(false);\n  const [createDate, setCreateDate] = useState('');\n  const [noScore, setNoScore] = useState(false);\n  const [certificateType, setCertificateType] = useState(1);\n  const contextValues = React.useMemo(() => ({\n    // certificateData,\n    // setCertificateData,\n    showCertificate,\n    setShowCertificate,\n    setTotalScore,\n    totalScore,\n    setEvaluateeName,\n    evaluateeName,\n    setMenual,\n    menual,\n    createDate,\n    setCreateDate,\n    evaluateeId,\n    setEvaluateeId,\n    noScore,\n    setNoScore,\n    certificateType,\n    setCertificateType\n  }), [showCertificate, totalScore, evaluateeName, menual, createDate, evaluateeId, noScore, certificateType]);\n  return /*#__PURE__*/_jsxDEV(CertificateContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CertificatePageProvider, \"iCC3y+ggolOcGDthS6KhcukDc6M=\");\n\n_c = CertificatePageProvider;\nexport default CertificatePageProvider;\nexport const UseCertificateContext = () => {\n  _s2();\n\n  return useContext(CertificateContext);\n};\n\n_s2(UseCertificateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = UseCertificateContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CertificatePageProvider\");\n$RefreshReg$(_c2, \"UseCertificateContext\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/context/certificateContext/certificateContext.tsx"],"names":["React","createContext","useContext","useState","CertificateContext","CertificatePageProvider","children","showCertificate","setShowCertificate","totalScore","setTotalScore","evaluateeName","setEvaluateeName","evaluateeId","setEvaluateeId","menual","setMenual","createDate","setCreateDate","noScore","setNoScore","certificateType","setCertificateType","contextValues","useMemo","UseCertificateContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,QAAyD,OAAzD;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAMC,kBAAkB,gBAAGH,aAAa,CAA2B,IAA3B,CAAxC;;AAEA,MAAMI,uBAAuB,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAACC,IAAAA;AAAD,GAA8B;AAC7D;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAU,KAAV,CAAtD;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,EAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,EAAlD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAS,EAAT,CAA5C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACkB,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAS,CAAT,CAAtD;AAEA,QAAMoB,aAAa,GAAGvB,KAAK,CAACwB,OAAN,CACpB,OAAO;AACL;AACA;AACAjB,IAAAA,eAHK;AAILC,IAAAA,kBAJK;AAKLE,IAAAA,aALK;AAMLD,IAAAA,UANK;AAOLG,IAAAA,gBAPK;AAQLD,IAAAA,aARK;AASLK,IAAAA,SATK;AAULD,IAAAA,MAVK;AAWLE,IAAAA,UAXK;AAYLC,IAAAA,aAZK;AAaLL,IAAAA,WAbK;AAcLC,IAAAA,cAdK;AAeLK,IAAAA,OAfK;AAgBLC,IAAAA,UAhBK;AAiBLC,IAAAA,eAjBK;AAkBLC,IAAAA;AAlBK,GAAP,CADoB,EAqBpB,CACEf,eADF,EAEEE,UAFF,EAGEE,aAHF,EAIEI,MAJF,EAKEE,UALF,EAMEJ,WANF,EAOEM,OAPF,EAQEE,eARF,CArBoB,CAAtB;AAiCA,sBAAO,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEE,aAApC;AAAA,cAAoDjB;AAApD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7CD;;GAAMD,uB;;KAAAA,uB;AA+CN,eAAeA,uBAAf;AACA,OAAO,MAAMoB,qBAAqB,GAAG;AAAA;;AAAA,SAAMvB,UAAU,CAACE,kBAAD,CAAhB;AAAA,CAA9B;;IAAMqB,qB;;MAAAA,qB","sourcesContent":["import React, {createContext, useContext, useState} from 'react'\nimport {ICertificateProps, IContextProps} from './certificateContext.props'\n\n// const initialState = {\n//   isVisible: false,\n// }\n\n// const CertificateContext = createContext<ICertificateProps>({\n//   certificateData: initialState,\n//   setCertificateData: () => ({}),\n// })\n\nconst CertificateContext = createContext<ICertificateProps | null>(null)\n\nconst CertificatePageProvider = ({children}: IContextProps) => {\n  // const [certificateData, setCertificateData] = useState(initialState)\n  const [showCertificate, setShowCertificate] = useState<boolean>(false)\n  const [totalScore, setTotalScore] = useState<string | undefined>()\n  const [evaluateeName, setEvaluateeName] = useState<string | undefined>()\n  const [evaluateeId, setEvaluateeId] = useState<number | undefined>()\n  const [menual, setMenual] = useState<boolean>(false)\n  const [createDate, setCreateDate] = useState<string>('')\n  const [noScore, setNoScore] = useState<boolean>(false)\n  const [certificateType, setCertificateType] = useState<number>(1)\n\n  const contextValues = React.useMemo(\n    () => ({\n      // certificateData,\n      // setCertificateData,\n      showCertificate,\n      setShowCertificate,\n      setTotalScore,\n      totalScore,\n      setEvaluateeName,\n      evaluateeName,\n      setMenual,\n      menual,\n      createDate,\n      setCreateDate,\n      evaluateeId,\n      setEvaluateeId,\n      noScore,\n      setNoScore,\n      certificateType,\n      setCertificateType,\n    }),\n    [\n      showCertificate,\n      totalScore,\n      evaluateeName,\n      menual,\n      createDate,\n      evaluateeId,\n      noScore,\n      certificateType,\n    ],\n  )\n\n  return <CertificateContext.Provider value={contextValues}>{children}</CertificateContext.Provider>\n}\n\nexport default CertificatePageProvider\nexport const UseCertificateContext = () => useContext(CertificateContext)\n"]},"metadata":{},"sourceType":"module"}