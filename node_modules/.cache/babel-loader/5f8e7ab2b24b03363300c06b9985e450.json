{"ast":null,"code":"var _jsxFileName = \"/Users/davo/Desktop/admin/src/context/createEventContext/createEventContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateEventContext = /*#__PURE__*/createContext(null);\n\nconst CreateEventPageProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [eventTitle, setEventTitle] = useState('');\n  const [ratePointFrom, setRatePointFrom] = useState('1');\n  const [ratePointTo, setRatePointTo] = useState('10');\n  const [rangeMin, setRangeMin] = useState('');\n  const [rangeMax, setRangeMax] = useState('');\n  const [eventEvaluatee, setEventEvaluatee] = useState([]);\n  const [eventEvaluator, setEventEvaluator] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [questionsId, setQuestionsId] = useState([]);\n  const [bonusPercentage, setBonusPercentage] = useState();\n  const [checkedIdOfEvaluator, setCheckedIdOfEvaluator] = useState([]);\n  const [checkedIdOfEvaluatee, setCheckedIdOfEvaluatee] = useState([]);\n  const [deletedSubQuestions, setDeletedSubQuestions] = useState([]);\n  const [errorDate, setErrorDate] = useState(false);\n  const [errorEventTitle, setErrorEventTitle] = useState(false);\n  const [checkedItemOfEvaluatee, setCheckedItemOfEvaluatee] = useState([]);\n  const [nameOfUsers, setNameOfUsers] = useState([]);\n  const [checkedItemOfEvaluator, setCheckedItemOfEvaluator] = useState([]);\n  const [withScores, setWithScores] = useState(true);\n  const [customNotesQuestion, setCustomNotesQuestion] = useState([{\n    id: 1,\n    questionName: 'Positive Feedback',\n    checked: true\n  }, {\n    id: 2,\n    questionName: 'Things To Improve',\n    checked: true\n  }]);\n  const [checkedOfEvaluatee, setCheckedOfEvaluatee] = useState([]);\n  const [buttonsOfValue, setButtonsOfValue] = useState([]);\n  const [rangesOfvalue, setRangesOfValue] = useState([]);\n  const [questionGroupTitleIsDefault, setQuestionGroupTitleIsDefault] = useState([]);\n  const [questionGroupTitle, setQuestionGroupTitle] = useState([]);\n  const [errorEvaluators, setErrorEvaluators] = useState(false);\n  const [errorEvaluatees, setErrorEvaluatees] = useState(false);\n  const [errorCheckedOfEvaluatee, setErrorCheckedOfEvaluatee] = useState(false);\n  const contextValues = React.useMemo(() => ({\n    startDate,\n    setStartDate,\n    endDate,\n    setEndDate,\n    eventTitle,\n    setEventTitle,\n    ratePointFrom,\n    ratePointTo,\n    setRatePointFrom,\n    setRatePointTo,\n    eventEvaluatee,\n    setEventEvaluatee,\n    buttonsOfValue,\n    setButtonsOfValue,\n    rangesOfvalue,\n    setRangesOfValue,\n    eventEvaluator,\n    setEventEvaluator,\n    questions,\n    setQuestions,\n    setNameOfUsers,\n    nameOfUsers,\n    setCheckedIdOfEvaluator,\n    setCheckedIdOfEvaluatee,\n    checkedIdOfEvaluator,\n    checkedIdOfEvaluatee,\n    setQuestionsId,\n    questionsId,\n    checkedItemOfEvaluatee,\n    customNotesQuestion,\n    setCustomNotesQuestion,\n    setCheckedItemOfEvaluatee,\n    checkedItemOfEvaluator,\n    setCheckedItemOfEvaluator,\n    setBonusPercentage,\n    deletedSubQuestions,\n    setDeletedSubQuestions,\n    bonusPercentage,\n    withScores,\n    setWithScores,\n    checkedOfEvaluatee,\n    setCheckedOfEvaluatee,\n    questionGroupTitleIsDefault,\n    setQuestionGroupTitleIsDefault,\n    questionGroupTitle,\n    setQuestionGroupTitle,\n    rangeMin,\n    setRangeMin,\n    rangeMax,\n    setRangeMax,\n    setErrorDate,\n    errorDate,\n    errorEventTitle,\n    setErrorEventTitle,\n    errorEvaluators,\n    setErrorEvaluators,\n    errorEvaluatees,\n    setErrorEvaluatees,\n    errorCheckedOfEvaluatee,\n    setErrorCheckedOfEvaluatee\n  }), [checkedOfEvaluatee, startDate, endDate, nameOfUsers, eventTitle, rangesOfvalue, checkedItemOfEvaluator, customNotesQuestion, checkedItemOfEvaluatee, ratePointFrom, ratePointTo, buttonsOfValue, eventEvaluatee, eventEvaluator, questions, withScores, questionsId, deletedSubQuestions, questionGroupTitleIsDefault, questionGroupTitle, rangeMin, rangeMax, errorDate, errorEventTitle, errorEvaluatees, errorEvaluators, errorCheckedOfEvaluatee]);\n  return /*#__PURE__*/_jsxDEV(CreateEventContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CreateEventPageProvider, \"KE3QVJPqzl3FngzEdw/5U5mHu/s=\");\n\n_c = CreateEventPageProvider;\nexport default CreateEventPageProvider;\nexport const UseCreateEventContext = () => {\n  _s2();\n\n  return useContext(CreateEventContext);\n};\n\n_s2(UseCreateEventContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = UseCreateEventContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateEventPageProvider\");\n$RefreshReg$(_c2, \"UseCreateEventContext\");","map":{"version":3,"sources":["/Users/davo/Desktop/admin/src/context/createEventContext/createEventContext.tsx"],"names":["React","createContext","useContext","useState","CreateEventContext","CreateEventPageProvider","children","startDate","setStartDate","endDate","setEndDate","eventTitle","setEventTitle","ratePointFrom","setRatePointFrom","ratePointTo","setRatePointTo","rangeMin","setRangeMin","rangeMax","setRangeMax","eventEvaluatee","setEventEvaluatee","eventEvaluator","setEventEvaluator","questions","setQuestions","questionsId","setQuestionsId","bonusPercentage","setBonusPercentage","checkedIdOfEvaluator","setCheckedIdOfEvaluator","checkedIdOfEvaluatee","setCheckedIdOfEvaluatee","deletedSubQuestions","setDeletedSubQuestions","errorDate","setErrorDate","errorEventTitle","setErrorEventTitle","checkedItemOfEvaluatee","setCheckedItemOfEvaluatee","nameOfUsers","setNameOfUsers","checkedItemOfEvaluator","setCheckedItemOfEvaluator","withScores","setWithScores","customNotesQuestion","setCustomNotesQuestion","id","questionName","checked","checkedOfEvaluatee","setCheckedOfEvaluatee","buttonsOfValue","setButtonsOfValue","rangesOfvalue","setRangesOfValue","questionGroupTitleIsDefault","setQuestionGroupTitleIsDefault","questionGroupTitle","setQuestionGroupTitle","errorEvaluators","setErrorEvaluators","errorEvaluatees","setErrorEvaluatees","errorCheckedOfEvaluatee","setErrorCheckedOfEvaluatee","contextValues","useMemo","UseCreateEventContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,QAAyD,OAAzD;;AAUA,MAAMC,kBAAkB,gBAAGH,aAAa,CAA2B,IAA3B,CAAxC;;AAEA,MAAMI,uBAAuB,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAACC,IAAAA;AAAD,GAA8B;AAC7D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAS,GAAT,CAAlD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAS,IAAT,CAA9C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAsB,EAAtB,CAApD;AACA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAsB,EAAtB,CAApD;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAe,EAAf,CAA1C;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAiB,EAAjB,CAA9C;AACA,QAAM,CAAC0B,eAAD,EAAkBC,kBAAlB,IAAwC3B,QAAQ,EAAtD;AACA,QAAM,CAAC4B,oBAAD,EAAuBC,uBAAvB,IAAkD7B,QAAQ,CAA0B,EAA1B,CAAhE;AACA,QAAM,CAAC8B,oBAAD,EAAuBC,uBAAvB,IAAkD/B,QAAQ,CAA0B,EAA1B,CAAhE;AACA,QAAM,CAACgC,mBAAD,EAAsBC,sBAAtB,IAAgDjC,QAAQ,CAAe,EAAf,CAA9D;AACA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACoC,eAAD,EAAkBC,kBAAlB,IAAwCrC,QAAQ,CAAU,KAAV,CAAtD;AAEA,QAAM,CAACsC,sBAAD,EAAyBC,yBAAzB,IAAsDvC,QAAQ,CAElE,EAFkE,CAApE;AAGA,QAAM,CAACwC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAiB,EAAjB,CAA9C;AACA,QAAM,CAAC0C,sBAAD,EAAyBC,yBAAzB,IAAsD3C,QAAQ,CAElE,EAFkE,CAApE;AAGA,QAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAU,IAAV,CAA5C;AACA,QAAM,CAAC8C,mBAAD,EAAsBC,sBAAtB,IAAgD/C,QAAQ,CAAC,CAC7D;AACEgD,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,YAAY,EAAE,mBAFhB;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAD6D,EAM7D;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,YAAY,EAAE,mBAFhB;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAN6D,CAAD,CAA9D;AAYA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CpD,QAAQ,CAE1D,EAF0D,CAA5D;AAGA,QAAM,CAACqD,cAAD,EAAiBC,iBAAjB,IAAsCtD,QAAQ,CAOlD,EAPkD,CAApD;AASA,QAAM,CAACuD,aAAD,EAAgBC,gBAAhB,IAAoCxD,QAAQ,CAQhD,EARgD,CAAlD;AASA,QAAM,CAACyD,2BAAD,EAA8BC,8BAA9B,IAAgE1D,QAAQ,CAE5E,EAF4E,CAA9E;AAGA,QAAM,CAAC2D,kBAAD,EAAqBC,qBAArB,IAA8C5D,QAAQ,CAAwB,EAAxB,CAA5D;AAEA,QAAM,CAAC6D,eAAD,EAAkBC,kBAAlB,IAAwC9D,QAAQ,CAAU,KAAV,CAAtD;AACA,QAAM,CAAC+D,eAAD,EAAkBC,kBAAlB,IAAwChE,QAAQ,CAAU,KAAV,CAAtD;AACA,QAAM,CAACiE,uBAAD,EAA0BC,0BAA1B,IAAwDlE,QAAQ,CAAU,KAAV,CAAtE;AAEA,QAAMmE,aAAa,GAAGtE,KAAK,CAACuE,OAAN,CACpB,OAAO;AACLhE,IAAAA,SADK;AAELC,IAAAA,YAFK;AAGLC,IAAAA,OAHK;AAILC,IAAAA,UAJK;AAKLC,IAAAA,UALK;AAMLC,IAAAA,aANK;AAOLC,IAAAA,aAPK;AAQLE,IAAAA,WARK;AASLD,IAAAA,gBATK;AAULE,IAAAA,cAVK;AAWLK,IAAAA,cAXK;AAYLC,IAAAA,iBAZK;AAaLkC,IAAAA,cAbK;AAcLC,IAAAA,iBAdK;AAeLC,IAAAA,aAfK;AAgBLC,IAAAA,gBAhBK;AAiBLpC,IAAAA,cAjBK;AAkBLC,IAAAA,iBAlBK;AAmBLC,IAAAA,SAnBK;AAoBLC,IAAAA,YApBK;AAqBLkB,IAAAA,cArBK;AAsBLD,IAAAA,WAtBK;AAuBLX,IAAAA,uBAvBK;AAwBLE,IAAAA,uBAxBK;AAyBLH,IAAAA,oBAzBK;AA0BLE,IAAAA,oBA1BK;AA2BLL,IAAAA,cA3BK;AA4BLD,IAAAA,WA5BK;AA6BLc,IAAAA,sBA7BK;AA8BLQ,IAAAA,mBA9BK;AA+BLC,IAAAA,sBA/BK;AAgCLR,IAAAA,yBAhCK;AAiCLG,IAAAA,sBAjCK;AAkCLC,IAAAA,yBAlCK;AAmCLhB,IAAAA,kBAnCK;AAoCLK,IAAAA,mBApCK;AAqCLC,IAAAA,sBArCK;AAsCLP,IAAAA,eAtCK;AAuCLkB,IAAAA,UAvCK;AAwCLC,IAAAA,aAxCK;AAyCLM,IAAAA,kBAzCK;AA0CLC,IAAAA,qBA1CK;AA2CLK,IAAAA,2BA3CK;AA4CLC,IAAAA,8BA5CK;AA6CLC,IAAAA,kBA7CK;AA8CLC,IAAAA,qBA9CK;AA+CL9C,IAAAA,QA/CK;AAgDLC,IAAAA,WAhDK;AAiDLC,IAAAA,QAjDK;AAkDLC,IAAAA,WAlDK;AAmDLkB,IAAAA,YAnDK;AAoDLD,IAAAA,SApDK;AAqDLE,IAAAA,eArDK;AAsDLC,IAAAA,kBAtDK;AAuDLwB,IAAAA,eAvDK;AAwDLC,IAAAA,kBAxDK;AAyDLC,IAAAA,eAzDK;AA0DLC,IAAAA,kBA1DK;AA2DLC,IAAAA,uBA3DK;AA4DLC,IAAAA;AA5DK,GAAP,CADoB,EA+DpB,CACEf,kBADF,EAEE/C,SAFF,EAGEE,OAHF,EAIEkC,WAJF,EAKEhC,UALF,EAME+C,aANF,EAOEb,sBAPF,EAQEI,mBARF,EASER,sBATF,EAUE5B,aAVF,EAWEE,WAXF,EAYEyC,cAZF,EAaEnC,cAbF,EAcEE,cAdF,EAeEE,SAfF,EAgBEsB,UAhBF,EAiBEpB,WAjBF,EAkBEQ,mBAlBF,EAmBEyB,2BAnBF,EAoBEE,kBApBF,EAqBE7C,QArBF,EAsBEE,QAtBF,EAuBEkB,SAvBF,EAwBEE,eAxBF,EAyBE2B,eAzBF,EA0BEF,eA1BF,EA2BEI,uBA3BF,CA/DoB,CAAtB;AA8FA,sBAAO,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEE,aAApC;AAAA,cAAoDhE;AAApD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApKD;;GAAMD,uB;;KAAAA,uB;AAsKN,eAAeA,uBAAf;AACA,OAAO,MAAMmE,qBAAqB,GAAG;AAAA;;AAAA,SAAMtE,UAAU,CAACE,kBAAD,CAAhB;AAAA,CAA9B;;IAAMoE,qB;;MAAAA,qB","sourcesContent":["import React, {createContext, useContext, useState} from 'react'\nimport {\n  IQuestionGroupTitle,\n  IQuestions,\n  IQuestionsId,\n  IUsersOfEvaluator,\n} from '../../shared/types/events/events'\nimport {IContextProps, ICreateEventProps} from './createEventContext.props'\nimport {INameOfUsers} from '../../shared/types'\n\nconst CreateEventContext = createContext<ICreateEventProps | null>(null)\n\nconst CreateEventPageProvider = ({children}: IContextProps) => {\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [eventTitle, setEventTitle] = useState('')\n  const [ratePointFrom, setRatePointFrom] = useState<string>('1')\n  const [ratePointTo, setRatePointTo] = useState<string>('10')\n  const [rangeMin, setRangeMin] = useState('')\n  const [rangeMax, setRangeMax] = useState('')\n  const [eventEvaluatee, setEventEvaluatee] = useState<IUsersOfEvaluator[]>([])\n  const [eventEvaluator, setEventEvaluator] = useState<IUsersOfEvaluator[]>([])\n  const [questions, setQuestions] = useState<IQuestions[]>([])\n  const [questionsId, setQuestionsId] = useState<IQuestionsId[]>([])\n  const [bonusPercentage, setBonusPercentage] = useState<number | undefined | null>()\n  const [checkedIdOfEvaluator, setCheckedIdOfEvaluator] = useState<{evaluatorId: number}[]>([])\n  const [checkedIdOfEvaluatee, setCheckedIdOfEvaluatee] = useState<{evaluateeId: number}[]>([])\n  const [deletedSubQuestions, setDeletedSubQuestions] = useState<IQuestions[]>([])\n  const [errorDate, setErrorDate] = useState<boolean>(false)\n  const [errorEventTitle, setErrorEventTitle] = useState<boolean>(false)\n\n  const [checkedItemOfEvaluatee, setCheckedItemOfEvaluatee] = useState<\n    {evaluatorId?: number; evaluateeId: number; userName: string}[]\n  >([])\n  const [nameOfUsers, setNameOfUsers] = useState<INameOfUsers[]>([])\n  const [checkedItemOfEvaluator, setCheckedItemOfEvaluator] = useState<\n    {id: number; userName: string; eventId?: number}[]\n  >([])\n  const [withScores, setWithScores] = useState<boolean>(true)\n  const [customNotesQuestion, setCustomNotesQuestion] = useState([\n    {\n      id: 1,\n      questionName: 'Positive Feedback',\n      checked: true,\n    },\n    {\n      id: 2,\n      questionName: 'Things To Improve',\n      checked: true,\n    },\n  ])\n  const [checkedOfEvaluatee, setCheckedOfEvaluatee] = useState<\n    {evaluatorId?: number; evaluateeId: number; userName: string}[]\n  >([])\n  const [buttonsOfValue, setButtonsOfValue] = useState<\n    {\n      id: string\n      scoringName: string\n      edit: boolean\n      scoringValue: string\n    }[]\n  >([])\n\n  const [rangesOfvalue, setRangesOfValue] = useState<\n    {\n      id: string\n      bonusRangeFrom: string\n      bonusRangeTo: string\n      bonusPercentage: string\n      bonusRangeName: string\n    }[]\n  >([])\n  const [questionGroupTitleIsDefault, setQuestionGroupTitleIsDefault] = useState<\n    IQuestionGroupTitle[]\n  >([])\n  const [questionGroupTitle, setQuestionGroupTitle] = useState<IQuestionGroupTitle[]>([])\n\n  const [errorEvaluators, setErrorEvaluators] = useState<boolean>(false)\n  const [errorEvaluatees, setErrorEvaluatees] = useState<boolean>(false)\n  const [errorCheckedOfEvaluatee, setErrorCheckedOfEvaluatee] = useState<boolean>(false)\n\n  const contextValues = React.useMemo(\n    () => ({\n      startDate,\n      setStartDate,\n      endDate,\n      setEndDate,\n      eventTitle,\n      setEventTitle,\n      ratePointFrom,\n      ratePointTo,\n      setRatePointFrom,\n      setRatePointTo,\n      eventEvaluatee,\n      setEventEvaluatee,\n      buttonsOfValue,\n      setButtonsOfValue,\n      rangesOfvalue,\n      setRangesOfValue,\n      eventEvaluator,\n      setEventEvaluator,\n      questions,\n      setQuestions,\n      setNameOfUsers,\n      nameOfUsers,\n      setCheckedIdOfEvaluator,\n      setCheckedIdOfEvaluatee,\n      checkedIdOfEvaluator,\n      checkedIdOfEvaluatee,\n      setQuestionsId,\n      questionsId,\n      checkedItemOfEvaluatee,\n      customNotesQuestion,\n      setCustomNotesQuestion,\n      setCheckedItemOfEvaluatee,\n      checkedItemOfEvaluator,\n      setCheckedItemOfEvaluator,\n      setBonusPercentage,\n      deletedSubQuestions,\n      setDeletedSubQuestions,\n      bonusPercentage,\n      withScores,\n      setWithScores,\n      checkedOfEvaluatee,\n      setCheckedOfEvaluatee,\n      questionGroupTitleIsDefault,\n      setQuestionGroupTitleIsDefault,\n      questionGroupTitle,\n      setQuestionGroupTitle,\n      rangeMin,\n      setRangeMin,\n      rangeMax,\n      setRangeMax,\n      setErrorDate,\n      errorDate,\n      errorEventTitle,\n      setErrorEventTitle,\n      errorEvaluators,\n      setErrorEvaluators,\n      errorEvaluatees,\n      setErrorEvaluatees,\n      errorCheckedOfEvaluatee,\n      setErrorCheckedOfEvaluatee,\n    }),\n    [\n      checkedOfEvaluatee,\n      startDate,\n      endDate,\n      nameOfUsers,\n      eventTitle,\n      rangesOfvalue,\n      checkedItemOfEvaluator,\n      customNotesQuestion,\n      checkedItemOfEvaluatee,\n      ratePointFrom,\n      ratePointTo,\n      buttonsOfValue,\n      eventEvaluatee,\n      eventEvaluator,\n      questions,\n      withScores,\n      questionsId,\n      deletedSubQuestions,\n      questionGroupTitleIsDefault,\n      questionGroupTitle,\n      rangeMin,\n      rangeMax,\n      errorDate,\n      errorEventTitle,\n      errorEvaluatees,\n      errorEvaluators,\n      errorCheckedOfEvaluatee,\n    ],\n  )\n\n  return <CreateEventContext.Provider value={contextValues}>{children}</CreateEventContext.Provider>\n}\n\nexport default CreateEventPageProvider\nexport const UseCreateEventContext = () => useContext(CreateEventContext)\n"]},"metadata":{},"sourceType":"module"}